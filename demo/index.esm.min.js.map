{"version":3,"file":"index.esm.min.js","sources":["../node_modules/markdown-it-front-matter/index.js","../node_modules/markdown-it-footnote/index.js","../node_modules/markdown-it-task-lists/index.js","../node_modules/markdown-it-deflist/index.js","../node_modules/markdown-it-docutils/dist/esm/roles/main.js","../node_modules/markdown-it-docutils/dist/esm/roles/math.js","../node_modules/markdown-it-docutils/dist/esm/roles/plugin.js","../node_modules/markdown-it-docutils/dist/esm/roles/html.js","../node_modules/markdown-it-docutils/dist/esm/state/utils.js","../node_modules/markdown-it-docutils/dist/esm/roles/references.js","../node_modules/markdown-it-docutils/dist/esm/roles/index.js","../node_modules/js-yaml/dist/js-yaml.mjs","../node_modules/markdown-it-docutils/dist/esm/directives/main.js","../node_modules/markdown-it-docutils/dist/esm/nestedCoreParse.js","../node_modules/markdown-it-docutils/dist/esm/directives/plugin.js","../node_modules/markdown-it-docutils/dist/esm/directives/options.js","../node_modules/markdown-it-docutils/dist/esm/directives/admonitions.js","../node_modules/markdown-it-docutils/dist/esm/directives/code.js","../node_modules/markdown-it-docutils/dist/esm/directives/images.js","../node_modules/markdown-it-docutils/dist/esm/syntaxTree.js","../node_modules/markdown-it-docutils/dist/esm/directives/tables.js","../node_modules/markdown-it-docutils/dist/esm/directives/math.js","../node_modules/markdown-it-docutils/dist/esm/directives/index.js","../node_modules/markdown-it-docutils/dist/esm/state/plugin.js","../node_modules/markdown-it-docutils/dist/esm/index.js","../node_modules/markdown-it-myst-extras/dist/esm/index.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/parse.js","../node_modules/mdurl/index.js","../node_modules/mdurl/format.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/common/utils.js","../node_modules/markdown-it-dollarmath/dist/esm/index.js","../node_modules/markdown-it-amsmath/dist/esm/index.js","../src/utils.ts","../src/math/utils.ts","../src/math/index.ts","../src/plugins.ts","../src/mdast/types.ts","../node_modules/unist-builder/index.js","../src/mdast/utils.ts","../src/mdast/fromMarkdown.ts","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-remove/index.js","../node_modules/he/he.js","../node_modules/unist-util-find-after/index.js","../node_modules/zwitch/index.js","../node_modules/unist-util-select/lib/util.js","../node_modules/unist-util-select/lib/nest.js","../node_modules/unist-util-select/lib/pseudo.js","../node_modules/unist-util-select/lib/attribute.js","../node_modules/unist-util-select/lib/test.js","../node_modules/unist-util-select/lib/name.js","../node_modules/unist-util-select/lib/any.js","../node_modules/css-selector-parser/lib/utils.js","../node_modules/css-selector-parser/lib/parser-context.js","../node_modules/css-selector-parser/lib/render.js","../node_modules/css-selector-parser/lib/index.js","../node_modules/nth-check/lib/parse.js","../node_modules/nth-check/lib/compile.js","../node_modules/boolbase/index.js","../node_modules/nth-check/lib/index.js","../node_modules/unist-util-select/lib/parse.js","../node_modules/unist-util-select/index.js","../src/mdast/tokensToMyst.ts","../node_modules/unist-util-map/index.js","../node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-find-and-replace/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../src/mdast/state.ts","../src/mdast/transforms.ts","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/classnames/index.js","../src/mdast/mystToHast.ts","../node_modules/hast-util-is-element/index.js","../node_modules/hast-util-embedded/index.js","../node_modules/hast-util-whitespace/index.js","../node_modules/rehype-minify-whitespace/block.js","../node_modules/rehype-minify-whitespace/content.js","../node_modules/rehype-minify-whitespace/skippable.js","../node_modules/rehype-minify-whitespace/index.js","../node_modules/hast-util-has-property/index.js","../node_modules/hast-util-is-body-ok-link/node_modules/hast-util-is-element/convert.js","../node_modules/hast-util-is-body-ok-link/node_modules/hast-util-is-element/index.js","../node_modules/hast-util-is-body-ok-link/node_modules/hast-util-has-property/index.js","../node_modules/hast-util-is-body-ok-link/index.js","../node_modules/hast-util-phrasing/index.js","../node_modules/html-whitespace-sensitive-tag-names/index.js","../node_modules/rehype-format/index.js","../src/mdast/unified.ts","../src/mdast/actions.ts","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/token.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/markdown-it/lib/index.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it/index.js","../node_modules/bail/index.js","../node_modules/is-buffer/index.js","../node_modules/extend/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-to-html/lib/omission/util/comment.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/omission/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-entities-html4/index.js","../node_modules/stringify-entities/lib/constant/dangerous.js","../node_modules/stringify-entities/lib/util/to-named.js","../node_modules/stringify-entities/lib/util/format-smart.js","../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../node_modules/stringify-entities/lib/util/to-decimal.js","../node_modules/stringify-entities/lib/index.js","../node_modules/ccount/index.js","../node_modules/hast-util-to-html/lib/constants.js","../node_modules/hast-util-to-html/lib/text.js","../node_modules/hast-util-to-html/lib/tree.js","../node_modules/hast-util-to-html/lib/comment.js","../node_modules/hast-util-to-html/lib/doctype.js","../node_modules/hast-util-to-html/lib/raw.js","../node_modules/rehype-stringify/lib/index.js","../node_modules/hast-util-to-html/lib/index.js","../src/myst.ts"],"sourcesContent":["// Process front matter and pass to cb\n'use strict';\n\nmodule.exports = function front_matter_plugin(md, cb) {\n  var min_markers = 3,\n      marker_str  = '-',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length;\n\n  function frontMatter(state, startLine, endLine, silent) {\n    var pos,\n        nextLine,\n        marker_count,\n        token,\n        old_parent,\n        old_line_max,\n        start_content,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character of the first line quickly,\n    // this should filter out non-front matter\n    if (startLine !== 0 || marker_char !== state.src.charCodeAt(0)) {\n      return false;\n    }\n\n    // Check out the rest of the marker string\n    // while pos <= 3\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        start_content = pos + 1;\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n\n    if (marker_count < min_markers) {\n      return false;\n    }\n    pos -= (pos - start) % marker_len;\n\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n      return true;\n    }\n\n    // Search for the end of the block\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      if (state.src.slice(start, max) === '...') {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) {\n        continue;\n      }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('front_matter', null, 0);\n    token.hidden = true;\n    token.markup = state.src.slice(startLine, pos);\n    token.block  = true;\n    token.map    = [ startLine, pos ];\n    token.meta   = state.src.slice(start_content, start - 1);\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    cb(token.meta);\n\n    return true;\n  }\n\n  md.block.ruler.before(\n    'table',\n    'front_matter',\n    frontMatter,\n    {\n      alt: [\n        'paragraph',\n        'reference',\n        'blockquote',\n        'list' \n      ]\n    }\n  );\n};\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      if (tokens) state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// Markdown-it plugin to render GitHub-style task lists; see\n//\n// https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\n// https://github.com/blog/1825-task-lists-in-all-markdown-documents\n\nvar disableCheckboxes = true;\nvar useLabelWrapper = false;\nvar useLabelAfter = false;\n\nmodule.exports = function(md, options) {\n\tif (options) {\n\t\tdisableCheckboxes = !options.enabled;\n\t\tuseLabelWrapper = !!options.label;\n\t\tuseLabelAfter = !!options.labelAfter;\n\t}\n\n\tmd.core.ruler.after('inline', 'github-task-lists', function(state) {\n\t\tvar tokens = state.tokens;\n\t\tfor (var i = 2; i < tokens.length; i++) {\n\t\t\tif (isTodoItem(tokens, i)) {\n\t\t\t\ttodoify(tokens[i], state.Token);\n\t\t\t\tattrSet(tokens[i-2], 'class', 'task-list-item' + (!disableCheckboxes ? ' enabled' : ''));\n\t\t\t\tattrSet(tokens[parentToken(tokens, i-2)], 'class', 'contains-task-list');\n\t\t\t}\n\t\t}\n\t});\n};\n\nfunction attrSet(token, name, value) {\n\tvar index = token.attrIndex(name);\n\tvar attr = [name, value];\n\n\tif (index < 0) {\n\t\ttoken.attrPush(attr);\n\t} else {\n\t\ttoken.attrs[index] = attr;\n\t}\n}\n\nfunction parentToken(tokens, index) {\n\tvar targetLevel = tokens[index].level - 1;\n\tfor (var i = index - 1; i >= 0; i--) {\n\t\tif (tokens[i].level === targetLevel) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction isTodoItem(tokens, index) {\n\treturn isInline(tokens[index]) &&\n\t       isParagraph(tokens[index - 1]) &&\n\t       isListItem(tokens[index - 2]) &&\n\t       startsWithTodoMarkdown(tokens[index]);\n}\n\nfunction todoify(token, TokenConstructor) {\n\ttoken.children.unshift(makeCheckbox(token, TokenConstructor));\n\ttoken.children[1].content = token.children[1].content.slice(3);\n\ttoken.content = token.content.slice(3);\n\n\tif (useLabelWrapper) {\n\t\tif (useLabelAfter) {\n\t\t\ttoken.children.pop();\n\n\t\t\t// Use large random number as id property of the checkbox.\n\t\t\tvar id = 'task-item-' + Math.ceil(Math.random() * (10000 * 1000) - 1000);\n\t\t\ttoken.children[0].content = token.children[0].content.slice(0, -1) + ' id=\"' + id + '\">';\n\t\t\ttoken.children.push(afterLabel(token.content, id, TokenConstructor));\n\t\t} else {\n\t\t\ttoken.children.unshift(beginLabel(TokenConstructor));\n\t\t\ttoken.children.push(endLabel(TokenConstructor));\n\t\t}\n\t}\n}\n\nfunction makeCheckbox(token, TokenConstructor) {\n\tvar checkbox = new TokenConstructor('html_inline', '', 0);\n\tvar disabledAttr = disableCheckboxes ? ' disabled=\"\" ' : '';\n\tif (token.content.indexOf('[ ] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\"' + disabledAttr + 'type=\"checkbox\">';\n\t} else if (token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\" checked=\"\"' + disabledAttr + 'type=\"checkbox\">';\n\t}\n\treturn checkbox;\n}\n\n// these next two functions are kind of hacky; probably should really be a\n// true block-level token with .tag=='label'\nfunction beginLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label>';\n\treturn token;\n}\n\nfunction endLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '</label>';\n\treturn token;\n}\n\nfunction afterLabel(content, id, TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label class=\"task-list-item-label\" for=\"' + id + '\">' + content + '</label>';\n\ttoken.attrs = [{for: id}];\n\treturn token;\n}\n\nfunction isInline(token) { return token.type === 'inline'; }\nfunction isParagraph(token) { return token.type === 'paragraph_open'; }\nfunction isListItem(token) { return token.type === 'list_item_open'; }\n\nfunction startsWithTodoMarkdown(token) {\n\t// leading whitespace in a list item is already trimmed off by markdown-it\n\treturn token.content.indexOf('[ ] ') === 0 || token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0;\n}\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference', 'blockquote' ] });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** A class to define a single role */\nexport class Role {\n    constructor(state) {\n        this.state = state;\n    }\n    /** Convert the role to tokens */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    run(data) {\n        return [];\n    }\n}\nexport class RawRole extends Role {\n    run(data) {\n        // TODO options\n        const token = new this.state.Token(\"code_inline\", \"code\", 0);\n        token.content = data.content;\n        return [token];\n    }\n}\nexport const main = {\n    raw: RawRole\n};\n//# sourceMappingURL=main.js.map","import { Role } from \"./main\";\nconst INLINE_MATH_RULE = \"math_inline\";\nexport class Math extends Role {\n    run(data) {\n        const inline = new this.state.Token(INLINE_MATH_RULE, \"span\", 0);\n        inline.attrSet(\"class\", \"math inline\");\n        inline.markup = \"$\";\n        inline.content = data.content;\n        return [inline];\n    }\n}\nexport function inlineMathRenderer(md, options) {\n    var _a;\n    // Only create the renderer if it does not exist\n    // For example, this may be defined in markdown-it-dollarmath\n    if (!((_a = options === null || options === void 0 ? void 0 : options.roles) === null || _a === void 0 ? void 0 : _a.math) || md.renderer.rules[INLINE_MATH_RULE])\n        return;\n    md.renderer.rules[INLINE_MATH_RULE] = (tokens, idx) => {\n        var _a, _b, _c;\n        const renderer = (_c = (_b = (_a = options === null || options === void 0 ? void 0 : options.opts) === null || _a === void 0 ? void 0 : _a.math) === null || _b === void 0 ? void 0 : _b.renderer) !== null && _c !== void 0 ? _c : (c => md.utils.escapeHtml(c));\n        const token = tokens[idx];\n        const content = token.content.trim();\n        const math = renderer(content, { displayMode: false });\n        return `<span class=\"${token.attrGet(\"class\")}\">${math}</span>`;\n    };\n}\nexport const math = {\n    math: Math\n};\n//# sourceMappingURL=math.js.map","/** Parse a role, in MyST format */\n// Ported from https://github.com/executablebooks/markdown-it-py/blob/master/markdown_it/extensions/myst_role/index.py\n// MIT License: https://github.com/executablebooks/markdown-it-py/blob/master/LICENSE\nimport { inlineMathRenderer } from \"./math\";\nexport default function rolePlugin(md, options) {\n    if (options.parseRoles) {\n        md.inline.ruler.before(\"backticks\", \"parse_roles\", roleRule);\n    }\n    md.core.ruler.after(options.rolesAfter || \"inline\", \"run_roles\", runRoles(options.roles || {}));\n    // fallback renderer for unhandled roles\n    md.renderer.rules[\"role\"] = (tokens, idx) => {\n        const token = tokens[idx];\n        return `<span class=\"role-unhandled\"><mark>${token.meta.name}</mark><code>${token.content}</code></span>`;\n    };\n    // TODO: when another renderer comes up, refactor into something a bit more scalable\n    inlineMathRenderer(md, options);\n    // TODO role_error renderer\n}\nfunction roleRule(state, silent) {\n    // Check if the role is escaped\n    if (state.src.charCodeAt(state.pos - 1) === 0x5c) {\n        /* \\ */\n        // TODO: this could be improved in the case of edge case '\\\\{', also multi-line\n        return false;\n    }\n    const match = ROLE_PATTERN.exec(state.src.slice(state.pos));\n    if (match == null)\n        return false;\n    const [str, name, , content] = match;\n    // eslint-disable-next-line no-param-reassign\n    state.pos += str.length;\n    if (!silent) {\n        const token = state.push(\"role\", \"\", 0);\n        token.meta = { name };\n        token.content = content;\n    }\n    return true;\n}\n// MyST role syntax format e.g. {role}`text`\nlet _x;\ntry {\n    _x = new RegExp(\"^\\\\{([a-zA-Z_\\\\-+:]{1,36})\\\\}(`+)(?!`)(.+?)(?<!`)\\\\2(?!`)\");\n}\ncatch (error) {\n    // Safari does not support negative look-behinds\n    // This is a slightly down-graded variant, as it does not require a space.\n    _x = /^\\{([a-zA-Z_\\-+:]{1,36})\\}(`+)(?!`)(.+?)\\2(?!`)/;\n}\nconst ROLE_PATTERN = _x;\n/** Run all roles, replacing the original token */\nfunction runRoles(roles) {\n    function func(state) {\n        var _a;\n        for (const token of state.tokens) {\n            if (token.type === \"inline\" && token.children) {\n                const childTokens = [];\n                for (const child of token.children) {\n                    // TODO role name translations\n                    if (child.type === \"role\" && ((_a = child.meta) === null || _a === void 0 ? void 0 : _a.name) in roles) {\n                        try {\n                            const role = new roles[child.meta.name](state);\n                            const newTokens = role.run({\n                                parentMap: token.map,\n                                content: child.content\n                            });\n                            childTokens.push(...newTokens);\n                        }\n                        catch (err) {\n                            const errorToken = new state.Token(\"role_error\", \"\", 0);\n                            errorToken.content = child.content;\n                            errorToken.info = child.info;\n                            errorToken.meta = child.meta;\n                            errorToken.map = child.map;\n                            errorToken.meta.error_message = err.message;\n                            errorToken.meta.error_name = err.name;\n                            childTokens.push(errorToken);\n                        }\n                    }\n                    else {\n                        childTokens.push(child);\n                    }\n                }\n                token.children = childTokens;\n            }\n        }\n        return true;\n    }\n    return func;\n}\n//# sourceMappingURL=plugin.js.map","import { Role } from \"./main\";\nexport class Subscript extends Role {\n    run(data) {\n        const open = new this.state.Token(\"sub_open\", \"sub\", 1);\n        open.markup = \"~\";\n        const text = new this.state.Token(\"text\", \"\", 0);\n        text.content = data.content;\n        const close = new this.state.Token(\"sub_close\", \"sub\", -1);\n        close.markup = \"~\";\n        return [open, text, close];\n    }\n}\nexport class Superscript extends Role {\n    run(data) {\n        const open = new this.state.Token(\"sup_open\", \"sup\", 1);\n        open.markup = \"~\";\n        const text = new this.state.Token(\"text\", \"\", 0);\n        text.content = data.content;\n        const close = new this.state.Token(\"sup_close\", \"sup\", -1);\n        close.markup = \"~\";\n        return [open, text, close];\n    }\n}\nconst ABBR_PATTERN = /^(.+?)\\(([^()]+)\\)$/; // e.g. 'CSS (Cascading Style Sheets)'\nexport class Abbreviation extends Role {\n    run(data) {\n        var _a, _b, _c, _d;\n        const match = ABBR_PATTERN.exec(data.content);\n        const content = (_b = (_a = match === null || match === void 0 ? void 0 : match[1]) === null || _a === void 0 ? void 0 : _a.trim()) !== null && _b !== void 0 ? _b : data.content.trim();\n        const title = (_d = (_c = match === null || match === void 0 ? void 0 : match[2]) === null || _c === void 0 ? void 0 : _c.trim()) !== null && _d !== void 0 ? _d : null;\n        const open = new this.state.Token(\"abbr_open\", \"abbr\", 1);\n        if (title)\n            open.attrSet(\"title\", title);\n        const text = new this.state.Token(\"text\", \"\", 0);\n        text.content = content;\n        const close = new this.state.Token(\"abbr_close\", \"abbr\", -1);\n        return [open, text, close];\n    }\n}\nexport const html = {\n    // Subscript\n    subscript: Subscript,\n    sub: Subscript,\n    // Superscript\n    superscript: Superscript,\n    sup: Superscript,\n    // Abbreviation\n    abbreviation: Abbreviation,\n    abbr: Abbreviation\n};\n//# sourceMappingURL=html.js.map","/** The kind of the target as a TargetKind enum ('fig', 'eq', etc.) */\nexport var TargetKind;\n(function (TargetKind) {\n    TargetKind[\"equation\"] = \"eq\";\n    TargetKind[\"figure\"] = \"fig\";\n    TargetKind[\"table\"] = \"table\";\n    TargetKind[\"code\"] = \"code\";\n    TargetKind[\"section\"] = \"sec\";\n})(TargetKind || (TargetKind = {}));\n/** Safely create the document state for docutils */\nexport function getDocState(state) {\n    var _a, _b;\n    const env = (_b = (_a = state.env) === null || _a === void 0 ? void 0 : _a.docutils) !== null && _b !== void 0 ? _b : {};\n    if (!env.targets)\n        env.targets = {};\n    if (!env.references)\n        env.references = [];\n    if (!env.numbering)\n        env.numbering = {};\n    if (!state.env.docutils)\n        state.env.docutils = env;\n    return env;\n}\n/**\n * Safely create a namespaced meta information on a token\n * @param token A markdown-it token that will contain the target\n * @returns An object containing a `Target`\n */\nexport function getNamespacedMeta(token) {\n    var _a, _b;\n    const meta = (_b = (_a = token.meta) === null || _a === void 0 ? void 0 : _a.docutils) !== null && _b !== void 0 ? _b : {};\n    if (!token.meta)\n        token.meta = {};\n    if (!token.meta.docutils)\n        token.meta.docutils = meta;\n    return meta;\n}\n/** Get the next number for an equation, figure, code or table\n *\n * Can input `{ docutils: { numbering: { eq: 100 } } }` to start counting at a different number.\n *\n * @param state MarkdownIt state that will be modified\n */\nfunction nextNumber(state, kind) {\n    const env = getDocState(state);\n    if (env.numbering[kind] == null) {\n        env.numbering[kind] = 1;\n    }\n    else {\n        env.numbering[kind] += 1;\n    }\n    return env.numbering[kind];\n}\n/** Create a new internal target.\n *\n * @param state MarkdownIt state that will be modified\n * @param label The reference label that will be normalized and used to associate the target. Note some directives use \"name\".\n * @param kind The target kind: \"eq\", \"code\", \"table\" or \"fig\"\n */\nexport function newTarget(state, token, kind, label, title, silent = false) {\n    const env = getDocState(state);\n    const number = nextNumber(state, kind);\n    const target = {\n        label,\n        kind,\n        number,\n        title\n    };\n    if (!silent) {\n        // Put the token in both the token.meta and the central environment\n        const meta = getNamespacedMeta(token);\n        meta.target = target;\n        token.attrSet(\"id\", label);\n        // TODO: raise error on duplicates\n        env.targets[label] = target;\n    }\n    return target;\n}\n/**\n * Resolve a reference **in-place** in a following numbering pass.\n *\n * @param state Reference to the state object\n * @param tokens The open/content/close tokens of the reference\n * @param name Name/label/identifier of the target\n * @param opts Includes the reference `kind` and an optional way to create the reference content\n */\nexport function resolveRefLater(state, tokens, data, opts) {\n    var _a;\n    tokens.open.meta = (_a = tokens.open.meta) !== null && _a !== void 0 ? _a : {};\n    tokens.open.meta.kind = data.kind;\n    tokens.open.meta.label = data.label;\n    tokens.open.meta.value = data.value;\n    const env = getDocState(state);\n    env.references.push(Object.assign({ label: data.label, tokens }, opts));\n}\n//# sourceMappingURL=utils.js.map","import { resolveRefLater, TargetKind } from \"../state/utils\";\nimport { Role } from \"./main\";\nconst REF_PATTERN = /^(.+?)<([^<>]+)>$/; // e.g. 'Labeled Reference <ref>'\nexport class Eq extends Role {\n    run(data) {\n        const open = new this.state.Token(\"ref_open\", \"a\", 1);\n        const content = new this.state.Token(\"text\", \"\", 0);\n        const close = new this.state.Token(\"ref_close\", \"a\", -1);\n        resolveRefLater(this.state, { open, content, close }, { kind: \"eq\", label: data.content }, {\n            kind: TargetKind.equation,\n            contentFromTarget: target => {\n                return `(${target.number})`;\n            }\n        });\n        return [open, content, close];\n    }\n}\nexport class NumRef extends Role {\n    run(data) {\n        const match = REF_PATTERN.exec(data.content);\n        const [, modified, ref] = match !== null && match !== void 0 ? match : [];\n        const withoutLabel = modified === null || modified === void 0 ? void 0 : modified.trim();\n        const open = new this.state.Token(\"ref_open\", \"a\", 1);\n        const content = new this.state.Token(\"text\", \"\", 0);\n        const close = new this.state.Token(\"ref_close\", \"a\", -1);\n        resolveRefLater(this.state, { open, content, close }, { kind: \"numref\", label: ref || data.content, value: withoutLabel }, {\n            contentFromTarget: target => {\n                if (!match)\n                    return target.title.trim();\n                return withoutLabel\n                    .replace(/%s/g, String(target.number))\n                    .replace(/\\{number\\}/g, String(target.number));\n            }\n        });\n        return [open, content, close];\n    }\n}\nexport class Ref extends Role {\n    run(data) {\n        const match = REF_PATTERN.exec(data.content);\n        const [, modified, ref] = match !== null && match !== void 0 ? match : [];\n        const withoutLabel = modified === null || modified === void 0 ? void 0 : modified.trim();\n        const open = new this.state.Token(\"ref_open\", \"a\", 1);\n        const content = new this.state.Token(\"text\", \"\", 0);\n        const close = new this.state.Token(\"ref_close\", \"a\", -1);\n        resolveRefLater(this.state, { open, content, close }, { kind: \"ref\", label: ref || data.content, value: withoutLabel }, {\n            contentFromTarget: target => {\n                return withoutLabel || target.title;\n            }\n        });\n        return [open, content, close];\n    }\n}\nexport const references = {\n    eq: Eq,\n    ref: Ref,\n    numref: NumRef\n};\n//# sourceMappingURL=references.js.map","export { Role, main } from \"./main\";\nexport { default as rolePlugin } from \"./plugin\";\nexport { math } from \"./math\";\nexport { html } from \"./html\";\nexport { references } from \"./references\";\nimport { main } from \"./main\";\nimport { math } from \"./math\";\nimport { html } from \"./html\";\nimport { references } from \"./references\";\nexport const rolesDefault = Object.assign(Object.assign(Object.assign(Object.assign({}, main), html), math), references);\n//# sourceMappingURL=index.js.map","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** Convert a directives first line and content to its structural components\n *\n * The code is adapted from: myst_parser/parse_directives.py\n * and is common for all directives\n */\nimport yaml from \"js-yaml\";\nimport { nestedCoreParse } from \"../nestedCoreParse\";\n/** token specification for a directive */\nexport class DirectiveToken {\n    constructor(name, arg, content, map) {\n        this.type = \"directive\";\n        this.tag = \"\";\n        this.attrs = null;\n        this.nesting = 0;\n        this.level = 0;\n        this.children = null;\n        this.markup = \"\";\n        this.block = true;\n        this.hidden = false;\n        this.info = name;\n        this.meta = { arg };\n        this.content = content;\n        this.map = map;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    attrIndex(name) {\n        return -1;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    attrPush(attrData) {\n        throw new Error(\"not implemented\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    attrSet(name, value) {\n        throw new Error(\"not implemented\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    attrGet(name) {\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    attrJoin(name, value) {\n        throw new Error(\"not implemented\");\n    }\n}\n/** A class to define a single directive */\nexport class Directive {\n    constructor(state) {\n        this.required_arguments = 0;\n        this.optional_arguments = 0;\n        this.final_argument_whitespace = false;\n        this.has_content = false;\n        this.option_spec = {};\n        this.rawOptions = false;\n        this.state = state;\n    }\n    /** Convert the directive data to tokens */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    run(data) {\n        return [];\n    }\n    assert(test, msg) {\n        if (!test) {\n            throw new Error(msg);\n        }\n    }\n    /** throw error is no body content parsed. */\n    assert_has_content(data) {\n        if (!data.body) {\n            throw new Error(\"Content block expected, but none found.\");\n        }\n    }\n    /** Create a single token */\n    createToken(type, tag, nesting, optional) {\n        const token = new this.state.Token(type, tag, nesting);\n        if ((optional === null || optional === void 0 ? void 0 : optional.content) !== undefined) {\n            token.content = optional.content;\n        }\n        if ((optional === null || optional === void 0 ? void 0 : optional.level) !== undefined) {\n            token.level = optional.level;\n        }\n        if ((optional === null || optional === void 0 ? void 0 : optional.map) !== undefined) {\n            token.map = optional.map;\n        }\n        if ((optional === null || optional === void 0 ? void 0 : optional.block) !== undefined) {\n            token.block = optional.block;\n        }\n        if ((optional === null || optional === void 0 ? void 0 : optional.info) !== undefined) {\n            token.info = optional.info;\n        }\n        if ((optional === null || optional === void 0 ? void 0 : optional.meta) !== undefined) {\n            token.meta = optional.meta;\n        }\n        if ((optional === null || optional === void 0 ? void 0 : optional.children) !== undefined) {\n            token.children = optional.children;\n        }\n        return token;\n    }\n    /** parse block of text to tokens (does not run inline parse) */\n    nestedParse(block, initLine) {\n        return nestedCoreParse(this.state.md, \"run_directives\", block, this.state.env, initLine, true);\n    }\n}\n/** Raise on parsing/validation error. */\nexport class DirectiveParsingError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"DirectiveParsingError\";\n    }\n}\n/**\n * This function contains the logic to take the first line of a directive,\n * and the content, and turn it into the three core components:\n * arguments (list), options (key: value mapping), and body (text).\n */\nexport default function directiveToData(token, directive) {\n    const firstLine = token.meta.arg || \"\";\n    const content = token.content;\n    let body = content.trim() ? content.split(/\\r?\\n/) : [];\n    let bodyOffset = 0;\n    let options = {};\n    if (Object.keys(directive.option_spec || {}) || directive.rawOptions) {\n        ;\n        [body, options, bodyOffset] = parseDirectiveOptions(body, directive);\n    }\n    let args = [];\n    if (!directive.required_arguments && !directive.optional_arguments) {\n        if (firstLine) {\n            bodyOffset = 0;\n            body = [firstLine].concat(body);\n        }\n    }\n    else {\n        args = parseDirectiveArguments(firstLine, directive);\n    }\n    // remove first line of body if blank, to allow space between the options and the content\n    if (body.length && !body[0].trim()) {\n        body.shift();\n        bodyOffset++;\n    }\n    // check for body content\n    if (body.length && !directive.has_content) {\n        throw new DirectiveParsingError(\"Has content but content not allowed\");\n    }\n    return {\n        map: token.map ? token.map : [0, 0],\n        args,\n        options,\n        body: body.join(\"\\n\"),\n        bodyMap: token.map\n            ? [\n                body.length > 0 ? token.map[0] + bodyOffset : token.map[1],\n                body.length > 0 ? token.map[1] - 1 : token.map[1]\n            ]\n            : [0, 0]\n    };\n}\nfunction parseDirectiveOptions(content, fullSpec) {\n    // instantiate options\n    let bodyOffset = 1;\n    let options = {};\n    let yamlBlock = null;\n    // TODO allow for indented content (I can't remember why this was needed?)\n    if (content.length && content[0].startsWith(\"---\")) {\n        // options contained in YAML block, ending with '---'\n        bodyOffset++;\n        const newContent = [];\n        yamlBlock = [];\n        let foundDivider = false;\n        for (const line of content.slice(1)) {\n            if (line.startsWith(\"---\")) {\n                bodyOffset++;\n                foundDivider = true;\n                continue;\n            }\n            if (foundDivider) {\n                newContent.push(line);\n            }\n            else {\n                bodyOffset++;\n                yamlBlock.push(line);\n            }\n        }\n        content = newContent;\n    }\n    else if (content.length && content[0].startsWith(\":\")) {\n        const newContent = [];\n        yamlBlock = [];\n        let foundDivider = false;\n        for (const line of content) {\n            if (!foundDivider && !line.startsWith(\":\")) {\n                foundDivider = true;\n                newContent.push(line);\n                continue;\n            }\n            if (foundDivider) {\n                newContent.push(line);\n            }\n            else {\n                bodyOffset++;\n                yamlBlock.push(line.slice(1));\n            }\n        }\n        content = newContent;\n    }\n    if (yamlBlock !== null) {\n        try {\n            const output = yaml.load(yamlBlock.join(\"\\n\"));\n            if (output !== null && typeof output === \"object\") {\n                options = output;\n            }\n            else {\n                throw new DirectiveParsingError(`not dict: ${output}`);\n            }\n        }\n        catch (error) {\n            throw new DirectiveParsingError(`Invalid options YAML: ${error}`);\n        }\n    }\n    if (fullSpec.rawOptions) {\n        return [content, options, bodyOffset];\n    }\n    for (const [name, value] of Object.entries(options)) {\n        const convertor = fullSpec.option_spec ? fullSpec.option_spec[name] : null;\n        if (!convertor) {\n            throw new DirectiveParsingError(`Unknown option: ${name}`);\n        }\n        let converted_value = value;\n        if (value === null || value === false) {\n            converted_value = \"\";\n        }\n        try {\n            // In docutils all values are simply read as strings,\n            // but loading with YAML these can be converted to other types, so we convert them back first\n            // TODO check that it is sufficient to simply do this conversion, or if there is a better way\n            converted_value = convertor(`${converted_value || \"\"}`);\n        }\n        catch (error) {\n            throw new DirectiveParsingError(`Invalid option value: (option: '${name}'; value: ${value})\\n${error}`);\n        }\n        options[name] = converted_value;\n    }\n    return [content, options, bodyOffset];\n}\nfunction parseDirectiveArguments(firstLine, fullSpec) {\n    var _a;\n    let args = firstLine.trim() ? (_a = firstLine.trim()) === null || _a === void 0 ? void 0 : _a.split(/\\s+/) : [];\n    const totalArgs = (fullSpec.required_arguments || 0) + (fullSpec.optional_arguments || 0);\n    if (args.length < (fullSpec.required_arguments || 0)) {\n        throw new DirectiveParsingError(`${fullSpec.required_arguments} argument(s) required, ${args.length} supplied`);\n    }\n    else if (args.length > totalArgs) {\n        if (fullSpec.final_argument_whitespace) {\n            // note split limit does not work the same as in python\n            const arr = firstLine.split(/\\s+/);\n            args = arr.splice(0, totalArgs - 1);\n            // TODO is it ok that we effectively replace all whitespace with single spaces?\n            args.push(arr.join(\" \"));\n        }\n        else {\n            throw new DirectiveParsingError(`maximum ${totalArgs} argument(s) allowed, ${args.length} supplied`);\n        }\n    }\n    return args;\n}\n//# sourceMappingURL=main.js.map","/** Perform a nested parse upto and including a particular ruleName\n *\n * The main use for this function is to perform nested parses\n * upto but not including inline parsing.\n */\nexport function nestedCoreParse(md, pluginRuleName, src, \n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nenv, initLine, includeRule = true) {\n    // disable all core rules after pluginRuleName\n    const tempDisabledCore = [];\n    // TODO __rules__ is currently not exposed in typescript, but is the only way to get the rule names,\n    // since md.core.ruler.getRules('') only returns the rule functions\n    // we should upstream a getRuleNames() function or similar\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore TS2339\n    for (const rule of [...md.core.ruler.__rules__].reverse()) {\n        if (rule.name === pluginRuleName) {\n            if (!includeRule) {\n                tempDisabledCore.push(rule.name);\n            }\n            break;\n        }\n        if (rule.name) {\n            tempDisabledCore.push(rule.name);\n        }\n    }\n    md.core.ruler.disable(tempDisabledCore);\n    let tokens = [];\n    try {\n        tokens = md.parse(src, env);\n    }\n    finally {\n        md.core.ruler.enable(tempDisabledCore);\n    }\n    for (const token of tokens) {\n        token.map =\n            token.map !== null\n                ? [token.map[0] + initLine, token.map[1] + initLine]\n                : token.map;\n    }\n    return tokens;\n}\n//# sourceMappingURL=nestedCoreParse.js.map","import directiveToData from \"./main\";\nexport default function directivePlugin(md, options) {\n    var _a;\n    let after = options.directivesAfter || \"block\";\n    if ((_a = options.replaceFences) !== null && _a !== void 0 ? _a : true) {\n        md.core.ruler.after(after, \"fence_to_directive\", replaceFences);\n        after = \"fence_to_directive\";\n    }\n    md.core.ruler.after(after, \"run_directives\", runDirectives(options.directives || {}));\n    // fallback renderer for unhandled directives\n    md.renderer.rules[\"directive\"] = (tokens, idx) => {\n        const token = tokens[idx];\n        return `<aside class=\"directive-unhandled\">\\n<header><mark>${token.info}</mark><code> ${token.meta.arg}</code></header>\\n<pre>${token.content}</pre></aside>\\n`;\n    };\n    md.renderer.rules[\"directive_error\"] = (tokens, idx) => {\n        const token = tokens[idx];\n        let content = \"\";\n        if (token.content) {\n            content = `\\n---\\n${token.content}`;\n        }\n        return `<aside class=\"directive-error\">\\n<header><mark>${token.info}</mark><code> ${token.meta.arg}</code></header>\\n<pre>${token.meta.error_name}:\\n${token.meta.error_message}\\n${content}</pre></aside>\\n`;\n    };\n}\n/** Convert fences identified as directives to `directive` tokens */\nfunction replaceFences(state) {\n    for (const token of state.tokens) {\n        if (token.type === \"fence\") {\n            const match = token.info.match(/^\\{([^\\s}]+)\\}\\s*(.*)$/);\n            if (match) {\n                token.type = \"directive\";\n                token.info = match[1];\n                token.meta = { arg: match[2] };\n            }\n        }\n    }\n    return true;\n}\n/** Run all directives, replacing the original token */\nfunction runDirectives(directives) {\n    function func(state) {\n        const finalTokens = [];\n        for (const token of state.tokens) {\n            // TODO directive name translations\n            if (token.type === \"directive\" && token.info in directives) {\n                try {\n                    const directive = new directives[token.info](state);\n                    const data = directiveToData(token, directive);\n                    const newTokens = directive.run(data);\n                    // Ensure `meta` exists and add the directive options\n                    newTokens[0].meta = Object.assign(Object.assign({ directive: true }, data.options), newTokens[0].meta);\n                    finalTokens.push(...newTokens);\n                }\n                catch (err) {\n                    const errorToken = new state.Token(\"directive_error\", \"\", 0);\n                    errorToken.content = token.content;\n                    errorToken.info = token.info;\n                    errorToken.meta = token.meta;\n                    errorToken.map = token.map;\n                    errorToken.meta.error_message = err.message;\n                    errorToken.meta.error_name = err.name;\n                    finalTokens.push(errorToken);\n                }\n            }\n            else {\n                finalTokens.push(token);\n            }\n        }\n        state.tokens = finalTokens;\n        return true;\n    }\n    return func;\n}\n//# sourceMappingURL=plugin.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** Functions for converting and validating directive options\n *\n * Primarily adapted from: docutils/docutils/parsers/rst/directives/__init__.py\n */\n/**\n * Normalize a string to HTML4 id\n *\n * Adapted from docutils/nodes.py::make_id,\n * it should be noted that in HTML5 the only requirement is no whitespace.\n * */\nexport function make_id(name) {\n    // TODO make more complete\n    return name\n        .toLowerCase()\n        .split(/\\s+/)\n        .join(\"-\")\n        .replace(/[^a-z0-9]+/, \"-\")\n        .replace(/^[-0-9]+|-+$/, \"\");\n}\n/** Error to throw when an option is invalid. */\nexport class OptionSpecError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = \"OptionSpecError\";\n    }\n}\n/** Leave value unchanged */\nexport const unchanged = (value) => value;\n/** Leave value unchanged, but assert non-empty string */\nexport const unchanged_required = (value) => {\n    if (!value) {\n        throw new OptionSpecError(\"Argument required but none supplied\");\n    }\n    return value;\n};\n/** A flag option (no argument) */\nexport const flag = (value) => {\n    if (value.trim()) {\n        throw new OptionSpecError(`No argument is allowed: \"${value}\" supplied`);\n    }\n    return null;\n};\n/** Split values by whitespace and normalize to HTML4 id */\nexport const class_option = (value) => {\n    return `${value || \"\"}`.split(/\\s+/).map(name => make_id(name));\n};\n/** Check for an integer argument and convert */\nexport function int(argument) {\n    if (!argument) {\n        throw new OptionSpecError(\"Value is not set\");\n    }\n    const value = Number.parseFloat(argument);\n    if (Number.isNaN(value) || !Number.isInteger(value)) {\n        throw new OptionSpecError(`Value \"${argument}\" is not an integer`);\n    }\n    return value;\n}\n/** Check for a non-negative integer argument and convert */\nexport function nonnegative_int(argument) {\n    const value = int(argument);\n    if (value < 0) {\n        throw new OptionSpecError(`Value \"${argument}\" must be positive or zero`);\n    }\n    return value;\n}\n/** A non-negative integer or null. */\nexport const optional_int = (value) => {\n    if (!value) {\n        return null;\n    }\n    return nonnegative_int(value);\n};\n/** Check for an integer percentage value with optional percent sign. */\nexport const percentage = (value) => {\n    value = `${value || \"\"}`.replace(/\\s+%$/, \"\");\n    return nonnegative_int(value);\n};\n/** Check for a positive argument of one of the units and return a\n    normalized string of the form \"<value><unit>\" (without space in\n    between).\n*/\nfunction get_measure(argument, units) {\n    const regex = new RegExp(`^(?<number>[0-9.]+)\\\\s*(?<units>${units.join(\"|\")})$`);\n    const match = regex.exec(argument);\n    if (!match || !match.groups) {\n        throw new OptionSpecError(`not a positive measure of one of the following units: ${units.join(\"|\")}`);\n    }\n    return match.groups.number + match.groups.units;\n}\nconst length_units = [\"em\", \"ex\", \"px\", \"in\", \"cm\", \"mm\", \"pt\", \"pc\"];\n/** Check for a positive argument of a length unit, allowing for no unit. */\nexport const length_or_unitless = (value) => {\n    return get_measure(value, [...length_units, \"\"]);\n};\n/**\nReturn normalized string of a length or percentage unit.\n\nAdd <default> if there is no unit. Raise ValueError if the argument is not\na positive measure of one of the valid CSS units (or without unit).\n\n>>> length_or_percentage_or_unitless('3 pt')\n'3pt'\n>>> length_or_percentage_or_unitless('3%', 'em')\n'3%'\n>>> length_or_percentage_or_unitless('3')\n'3'\n>>> length_or_percentage_or_unitless('3', 'px')\n'3px'\n\n*/\nexport const length_or_percentage_or_unitless = (argument, defaultUnit = \"\") => {\n    try {\n        return get_measure(argument, [...length_units, \"%\"]);\n    }\n    catch (_a) {\n        return length_or_unitless(argument) + defaultUnit;\n    }\n};\nexport const length_or_percentage_or_unitless_figure = (argument, defaultUnit = \"\") => {\n    if (argument.toLowerCase() === \"image\") {\n        return \"image\";\n    }\n    return length_or_percentage_or_unitless(argument, defaultUnit);\n};\n/** Create an option that asserts the (lower-cased & trimmed) value is a member of a choice set. */\nexport function create_choice(choices) {\n    return (argument) => {\n        argument = argument.toLowerCase().trim();\n        if (choices.includes(argument)) {\n            return argument;\n        }\n        throw new OptionSpecError(`must be in: ${choices.join(\"|\")}`);\n    };\n}\n/** Return the URI argument with unescaped whitespace removed. */\nexport const uri = (value) => {\n    // TODO implement whitespace removal\n    return value;\n};\n//# sourceMappingURL=options.js.map","import { class_option, unchanged } from \"./options\";\nimport { Directive } from \"./main\";\n/** Directives for admonition boxes.\n *\n * Apdapted from: docutils/docutils/parsers/rst/directives/admonitions.py\n */\nclass BaseAdmonition extends Directive {\n    constructor() {\n        super(...arguments);\n        this.final_argument_whitespace = true;\n        this.has_content = true;\n        this.option_spec = {\n            class: class_option,\n            // TODO handle name option\n            name: unchanged\n        };\n        this.title = \"\";\n        this.kind = \"\";\n    }\n    run(data) {\n        var _a;\n        const newTokens = [];\n        // we create an overall container, then individual containers for the title and body\n        const adToken = this.createToken(\"admonition_open\", \"aside\", 1, {\n            map: data.map,\n            block: true,\n            meta: { kind: this.kind }\n        });\n        if (((_a = data.options.class) === null || _a === void 0 ? void 0 : _a.length) >= 1) {\n            // Custom class information must go first for styling\n            // For example, `class=tip, kind=seealso` should be styled as a `tip`\n            adToken.attrSet(\"class\", data.options.class.join(\" \"));\n            adToken.attrJoin(\"class\", \"admonition\");\n        }\n        else {\n            adToken.attrSet(\"class\", \"admonition\");\n        }\n        if (this.kind) {\n            adToken.attrJoin(\"class\", this.kind);\n        }\n        newTokens.push(adToken);\n        const adTokenTitle = this.createToken(\"admonition_title_open\", \"header\", 1);\n        adTokenTitle.attrSet(\"class\", \"admonition-title\");\n        newTokens.push(adTokenTitle);\n        // we want the title to be parsed as Markdown during the inline phase\n        const title = data.args[0] || this.title;\n        newTokens.push(this.createToken(\"inline\", \"\", 0, {\n            map: [data.map[0], data.map[0]],\n            content: title,\n            children: []\n        }));\n        newTokens.push(this.createToken(\"admonition_title_close\", \"header\", -1, { block: true }));\n        // run a recursive parse on the content of the admonition upto this stage\n        const bodyTokens = this.nestedParse(data.body, data.bodyMap[0]);\n        newTokens.push(...bodyTokens);\n        newTokens.push(this.createToken(\"admonition_close\", \"aside\", -1, { block: true }));\n        return newTokens;\n    }\n}\nexport class Admonition extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 1;\n    }\n}\nexport class Attention extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Attention\";\n        this.kind = \"attention\";\n    }\n}\nexport class Caution extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Caution\";\n        this.kind = \"caution\";\n    }\n}\nexport class Danger extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Danger\";\n        this.kind = \"danger\";\n    }\n}\nexport class Error extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Error\";\n        this.kind = \"error\";\n    }\n}\nexport class Important extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Important\";\n        this.kind = \"important\";\n    }\n}\nexport class Hint extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Hint\";\n        this.kind = \"hint\";\n    }\n}\nexport class Note extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Note\";\n        this.kind = \"note\";\n    }\n}\nexport class SeeAlso extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"See Also\";\n        this.kind = \"seealso\";\n    }\n}\nexport class Tip extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Tip\";\n        this.kind = \"tip\";\n    }\n}\nexport class Warning extends BaseAdmonition {\n    constructor() {\n        super(...arguments);\n        this.title = \"Warning\";\n        this.kind = \"warning\";\n    }\n}\nexport const admonitions = {\n    admonition: Admonition,\n    attention: Attention,\n    caution: Caution,\n    danger: Danger,\n    error: Error,\n    important: Important,\n    hint: Hint,\n    note: Note,\n    seealso: SeeAlso,\n    tip: Tip,\n    warning: Warning\n};\n//# sourceMappingURL=admonitions.js.map","import { Directive } from \"./main\";\nimport { class_option, flag, int, optional_int, unchanged, unchanged_required } from \"./options\";\n// TODO add Highlight directive\n/** Mark up content of a code block\n *\n * Adapted from sphinx/directives/patches.py\n */\nexport class Code extends Directive {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 0;\n        this.optional_arguments = 1;\n        this.final_argument_whitespace = false;\n        this.has_content = true;\n        this.option_spec = {\n            /** Add line numbers, optionally starting from a particular number. */\n            \"number-lines\": optional_int,\n            /** Ignore minor errors on highlighting */\n            force: flag,\n            name: unchanged,\n            class: class_option\n        };\n    }\n    run(data) {\n        // TODO handle options\n        this.assert_has_content(data);\n        const token = this.createToken(\"fence\", \"code\", 0, {\n            // TODO if not specified, the language should come from a central configuration \"highlight_language\"\n            info: data.args ? data.args[0] : \"\",\n            content: data.body,\n            map: data.bodyMap\n        });\n        return [token];\n    }\n}\n/** Mark up content of a code block, with more settings\n *\n * Adapted from sphinx/directives/code.py\n */\nexport class CodeBlock extends Directive {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 0;\n        this.optional_arguments = 1;\n        this.final_argument_whitespace = false;\n        this.has_content = true;\n        this.option_spec = {\n            /** Add line numbers. */\n            linenos: flag,\n            /** Start line numbering from a particular value. */\n            \"lineno-start\": int,\n            /** Strip indentation characters from the code block.\n             * When number given, leading N characters are removed\n             */\n            dedent: optional_int,\n            /** Emphasize particular lines (comma-separated numbers) */\n            \"emphasize-lines\": unchanged_required,\n            caption: unchanged_required,\n            /** Ignore minor errors on highlighting */\n            force: flag,\n            name: unchanged,\n            class: class_option\n        };\n    }\n    run(data) {\n        // TODO handle options\n        this.assert_has_content(data);\n        const token = this.createToken(\"fence\", \"code\", 0, {\n            // TODO if not specified, the language should come from a central configuration \"highlight_language\"\n            info: data.args ? data.args[0] : \"\",\n            content: data.body,\n            map: data.bodyMap\n        });\n        return [token];\n    }\n}\n/** A code cell is a special MyST based cell, signifying executable code. */\nexport class CodeCell extends Directive {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 0;\n        this.optional_arguments = 1;\n        this.final_argument_whitespace = false;\n        this.has_content = true;\n        this.rawOptions = true;\n    }\n    run(data) {\n        // TODO store options and the fact that this is a code cell rather than a fence?\n        const token = this.createToken(\"fence\", \"code\", 0, {\n            info: data.args ? data.args[0] : \"\",\n            content: data.body,\n            map: data.bodyMap\n        });\n        return [token];\n    }\n}\nexport const code = {\n    code: Code,\n    \"code-block\": CodeBlock,\n    \"code-cell\": CodeCell\n};\n//# sourceMappingURL=code.js.map","import { newTarget, TargetKind } from \"../state/utils\";\nimport { Directive } from \"./main\";\nimport { class_option, create_choice, length_or_percentage_or_unitless, length_or_percentage_or_unitless_figure, length_or_unitless, percentage, unchanged, unchanged_required, uri } from \"./options\";\nconst shared_option_spec = {\n    alt: unchanged,\n    height: length_or_unitless,\n    width: length_or_percentage_or_unitless,\n    // TODO handle scale option\n    scale: percentage,\n    // TODO handle target option\n    target: unchanged_required,\n    class: class_option,\n    // TODO handle name option (note: should be applied to figure for Figure)\n    name: unchanged\n};\n/** Directive for a single image.\n *\n * Adapted from: docutils/docutils/parsers/rst/directives/images.py\n */\nexport class Image extends Directive {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 1;\n        this.optional_arguments = 0;\n        this.final_argument_whitespace = true;\n        this.option_spec = Object.assign(Object.assign({}, shared_option_spec), { align: create_choice([\"left\", \"center\", \"right\", \"top\", \"middle\", \"bottom\"]) });\n    }\n    create_image(data) {\n        // get URI\n        const src = uri(data.args[0] || \"\");\n        const token = this.createToken(\"image\", \"img\", 0, { map: data.map, block: true });\n        token.attrSet(\"src\", src);\n        token.attrSet(\"alt\", data.options.alt || \"\");\n        // TODO markdown-it default renderer requires the alt as children tokens\n        const altTokens = [];\n        if (data.options.alt) {\n            this.state.md.inline.parse(data.options.alt, this.state.md, this.state.env, altTokens);\n        }\n        token.children = altTokens;\n        if (data.options.height) {\n            token.attrSet(\"height\", data.options.height);\n        }\n        if (data.options.width) {\n            token.attrSet(\"width\", data.options.width);\n        }\n        if (data.options.align) {\n            token.attrJoin(\"class\", `align-${data.options.align}`);\n        }\n        if (data.options.class) {\n            token.attrJoin(\"class\", data.options.class.join(\" \"));\n        }\n        return token;\n    }\n    run(data) {\n        return [this.create_image(data)];\n    }\n}\n/** Directive for an image with caption.\n *\n * Adapted from: docutils/docutils/parsers/rst/directives/images.py,\n * and sphinx/directives/patches.py (patch to apply name to figure instead of image)\n */\nexport class Figure extends Image {\n    constructor() {\n        super(...arguments);\n        this.option_spec = Object.assign(Object.assign({}, shared_option_spec), { align: create_choice([\"left\", \"center\", \"right\"]), figwidth: length_or_percentage_or_unitless_figure, figclass: class_option });\n        this.has_content = true;\n    }\n    run(data) {\n        const openToken = this.createToken(\"figure_open\", \"figure\", 1, {\n            map: data.map,\n            block: true\n        });\n        if (data.options.figclass) {\n            openToken.attrJoin(\"class\", data.options.figclass.join(\" \"));\n        }\n        if (data.options.align) {\n            openToken.attrJoin(\"class\", `align-${data.options.align}`);\n        }\n        if (data.options.figwidth && data.options.figwidth !== \"image\") {\n            // TODO handle figwidth == \"image\"?\n            openToken.attrSet(\"width\", data.options.figwidth);\n        }\n        let target;\n        if (data.options.name) {\n            // TODO: figure out how to pass silent here\n            target = newTarget(this.state, openToken, TargetKind.figure, data.options.name, \n            // TODO: a better title?\n            data.body.trim());\n            openToken.attrJoin(\"class\", \"numbered\");\n        }\n        const imageToken = this.create_image(data);\n        imageToken.map = [data.map[0], data.map[0]];\n        let captionTokens = [];\n        if (data.body) {\n            const openCaption = this.createToken(\"figure_caption_open\", \"figcaption\", 1, {\n                block: true\n            });\n            if (target) {\n                openCaption.attrSet(\"number\", `${target.number}`);\n            }\n            // TODO in docutils caption can only be single paragraph (or ignored if comment)\n            // then additional content is figure legend\n            const captionBody = this.nestedParse(data.body, data.bodyMap[0]);\n            const closeCaption = this.createToken(\"figure_caption_close\", \"figcaption\", -1, {\n                block: true\n            });\n            captionTokens = [openCaption, ...captionBody, closeCaption];\n        }\n        const closeToken = this.createToken(\"figure_close\", \"figure\", -1, { block: true });\n        return [openToken, imageToken, ...captionTokens, closeToken];\n    }\n}\nexport const images = {\n    image: Image,\n    figure: Figure\n};\n//# sourceMappingURL=images.js.map","/**A Markdown syntax tree node.\n\nA class that can be used to construct a tree representation of a linear\n`markdown-it` token stream.\n\nEach node in the tree represents either:\n    - root of the Markdown document\n    - a single unnested `Token`\n    - a `Token` \"_open\" and \"_close\" token pair, and the tokens nested in\n        between\n*/\nexport class SyntaxTreeNode {\n    /** Initialize a `SyntaxTreeNode` from a token stream. */\n    constructor(tokens, create_root = true) {\n        this.children = [];\n        this.children = [];\n        if (create_root) {\n            this._set_children_from_tokens(tokens);\n            return;\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Tree creation: Can only create root from empty token sequence.\");\n        }\n        if (tokens.length === 1) {\n            const inline_token = tokens[0];\n            if (inline_token.nesting) {\n                throw new Error(\"Unequal nesting level at the start and end of token stream.\");\n            }\n            this.token = inline_token;\n            if (inline_token.children !== null && inline_token.children.length > 0) {\n                this._set_children_from_tokens(inline_token.children);\n            }\n        }\n        else {\n            this.nester_tokens = { opening: tokens[0], closing: tokens[tokens.length - 1] };\n            this._set_children_from_tokens(tokens.slice(1, -1));\n        }\n    }\n    _set_children_from_tokens(tokens) {\n        const revered_tokens = [...tokens].reverse();\n        let token;\n        while (revered_tokens.length > 0) {\n            token = revered_tokens.pop();\n            if (!token) {\n                break;\n            }\n            if (!token.nesting) {\n                this._add_child([token]);\n                continue;\n            }\n            if (token.nesting !== 1) {\n                throw new Error(\"Invalid token nesting\");\n            }\n            const nested_tokens = [token];\n            let nesting = 1;\n            while (revered_tokens.length > 0 && nesting !== 0) {\n                token = revered_tokens.pop();\n                if (token) {\n                    nested_tokens.push(token);\n                    nesting += token.nesting;\n                }\n            }\n            if (nesting) {\n                throw new Error(`unclosed tokens starting: ${nested_tokens[0]}`);\n            }\n            this._add_child(nested_tokens);\n        }\n    }\n    _add_child(tokens) {\n        const child = new SyntaxTreeNode(tokens, false);\n        child.parent = this;\n        this.children.push(child);\n    }\n    /** Recover the linear token stream. */\n    to_tokens() {\n        function recursive_collect_tokens(node, token_list) {\n            if (node.type === \"root\") {\n                for (const child of node.children) {\n                    recursive_collect_tokens(child, token_list);\n                }\n            }\n            else if (node.token) {\n                token_list.push(node.token);\n            }\n            else {\n                if (!node.nester_tokens) {\n                    throw new Error(\"No nested token available\");\n                }\n                token_list.push(node.nester_tokens.opening);\n                for (const child of node.children) {\n                    recursive_collect_tokens(child, token_list);\n                }\n                token_list.push(node.nester_tokens.closing);\n            }\n        }\n        const tokens = [];\n        recursive_collect_tokens(this, tokens);\n        return tokens;\n    }\n    /** Is the node a special root node? */\n    get is_root() {\n        return !(this.token || this.nester_tokens);\n    }\n    /** Is this node nested? */\n    get is_nested() {\n        return !!this.nester_tokens;\n    }\n    /** Get siblings of the node (including self). */\n    get siblings() {\n        if (!this.parent) {\n            return [this];\n        }\n        return this.parent.children;\n    }\n    /** Recursively yield all descendant nodes in the tree starting at self.\n     *\n     * The order mimics the order of the underlying linear token stream (i.e. depth first).\n     */\n    *walk(include_self = true) {\n        if (include_self) {\n            yield this;\n        }\n        for (const child of this.children) {\n            yield* child.walk(true);\n        }\n    }\n    /** Get a string type of the represented syntax.\n     *\n      - \"root\" for root nodes\n      - `Token.type` if the node represents an un-nested token\n      - `Token.type` of the opening token, with \"_open\" suffix stripped, if\n          the node represents a nester token pair\n    */\n    get type() {\n        var _a, _b, _c;\n        if (this.is_root) {\n            return \"root\";\n        }\n        if (this.token) {\n            return this.token.type;\n        }\n        if ((_a = this.nester_tokens) === null || _a === void 0 ? void 0 : _a.opening.type.endsWith(\"_open\")) {\n            return (_b = this.nester_tokens) === null || _b === void 0 ? void 0 : _b.opening.type.slice(0, -5);\n        }\n        if (this.nester_tokens) {\n            return (_c = this.nester_tokens) === null || _c === void 0 ? void 0 : _c.opening.type;\n        }\n        throw new Error(\"no internal token\");\n    }\n    attribute_token() {\n        if (this.token) {\n            return this.token;\n        }\n        if (this.nester_tokens) {\n            return this.nester_tokens.opening;\n        }\n        throw new Error(\"Tree node does not have the accessed attribute\");\n    }\n    get tag() {\n        return this.attribute_token().tag;\n    }\n    get level() {\n        return this.attribute_token().level;\n    }\n    get content() {\n        return this.attribute_token().content;\n    }\n    get markup() {\n        return this.attribute_token().markup;\n    }\n    get info() {\n        return this.attribute_token().info;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get meta() {\n        return this.attribute_token().meta;\n    }\n    get block() {\n        return this.attribute_token().block;\n    }\n    get hidden() {\n        return this.attribute_token().hidden;\n    }\n    get map() {\n        return this.attribute_token().map;\n    }\n    get attrs() {\n        return this.attribute_token().attrs;\n    }\n}\n//# sourceMappingURL=syntaxTree.js.map","import { SyntaxTreeNode } from \"../syntaxTree\";\nimport { Directive, DirectiveParsingError } from \"./main\";\nimport { class_option, create_choice, length_or_percentage_or_unitless, nonnegative_int, unchanged } from \"./options\";\nexport class ListTable extends Directive {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 0;\n        this.optional_arguments = 1;\n        this.final_argument_whitespace = true;\n        this.has_content = true;\n        this.option_spec = {\n            \"header-rows\": nonnegative_int,\n            \"stub-columns\": nonnegative_int,\n            width: length_or_percentage_or_unitless,\n            widths: unchanged,\n            class: class_option,\n            name: unchanged,\n            align: create_choice([\"left\", \"center\", \"right\"])\n        };\n    }\n    run(data) {\n        // TODO support all options (add colgroup for widths)\n        // Parse content\n        this.assert_has_content(data);\n        const headerRows = (data.options[\"header-rows\"] || 0);\n        const listTokens = this.nestedParse(data.body, data.bodyMap[0]);\n        // Check content is a list\n        if (listTokens.length < 2 ||\n            listTokens[0].type !== \"bullet_list_open\" ||\n            listTokens[listTokens.length - 1].type !== \"bullet_list_close\") {\n            throw new DirectiveParsingError(\"Content is not a single bullet list\");\n        }\n        // generate tokens\n        const tokens = [];\n        // table opening\n        const tableOpen = this.createToken(\"table_open\", \"table\", 1, { map: data.bodyMap });\n        if (data.options.align) {\n            tableOpen.attrJoin(\"class\", `align-${data.options.align}`);\n        }\n        if (data.options.class) {\n            tableOpen.attrJoin(\"class\", data.options.class.join(\" \"));\n        }\n        tokens.push(tableOpen);\n        // add caption\n        if (data.args.length && data.args[0]) {\n            tokens.push(this.createToken(\"table_caption_open\", \"caption\", 1));\n            tokens.push(this.createToken(\"inline\", \"\", 0, {\n                map: [data.map[0], data.map[0]],\n                content: data.args[0],\n                children: []\n            }));\n            tokens.push(this.createToken(\"table_caption_close\", \"caption\", -1));\n        }\n        let colType = \"th\";\n        if (headerRows) {\n            tokens.push(this.createToken(\"thead_open\", \"thead\", 1, { level: 1 }));\n            colType = \"th\";\n        }\n        else {\n            tokens.push(this.createToken(\"tbody_open\", \"tbody\", 1, { level: 1 }));\n            colType = \"td\";\n        }\n        let rowLength = undefined;\n        let rowNumber = 0;\n        for (const child of new SyntaxTreeNode(listTokens.slice(1, -1)).children) {\n            rowNumber += 1;\n            this.assert(child.type === \"list_item\", `list item ${rowNumber} not of type 'list_item': ${child.type}`);\n            this.assert(child.children.length === 1 && child.children[0].type === \"bullet_list\", `list item ${rowNumber} content not a nested bullet list`);\n            const row = child.children[0].children;\n            if (rowLength === undefined) {\n                rowLength = row.length;\n            }\n            else {\n                this.assert(row.length === rowLength, `list item ${rowNumber} does not contain the same number of columns as previous items`);\n            }\n            if (headerRows && rowNumber === headerRows + 1) {\n                tokens.push(this.createToken(\"thead_close\", \"thead\", -1, { level: 1 }));\n                tokens.push(this.createToken(\"tbody_open\", \"tbody\", 1, { level: 1 }));\n                colType = \"td\";\n            }\n            tokens.push(this.createToken(\"tr_open\", \"tr\", 1, { map: child.map, level: 2 }));\n            for (const column of row) {\n                tokens.push(this.createToken(`${colType}_open`, colType, 1, { map: column.map, level: 3 }));\n                // TODO if the list is not tight then all paragraphs will be un-hidden maybe we don't want this?\n                tokens.push(...column.to_tokens().slice(1, -1));\n                tokens.push(this.createToken(`${colType}_close`, colType, -1, { level: 3 }));\n            }\n            tokens.push(this.createToken(\"tr_close\", \"tr\", -1, { level: 2 }));\n        }\n        if (headerRows && rowNumber < headerRows) {\n            throw new Error(`Insufficient rows (${rowNumber}) for required header rows (${headerRows})`);\n        }\n        // closing tokens\n        if (colType === \"td\") {\n            tokens.push(this.createToken(\"tbody_close\", \"tbody\", -1, { level: 1 }));\n        }\n        else {\n            tokens.push(this.createToken(\"thead_close\", \"thead\", -1, { level: 1 }));\n        }\n        tokens.push(this.createToken(\"table_close\", \"table\", -1));\n        return tokens;\n    }\n}\nexport const tables = {\n    \"list-table\": ListTable\n};\n//# sourceMappingURL=tables.js.map","import { newTarget, TargetKind } from \"../state/utils\";\nimport { Directive } from \"./main\";\nimport { unchanged } from \"./options\";\n/** Math directive with a label\n */\nexport class Math extends Directive {\n    constructor() {\n        super(...arguments);\n        this.required_arguments = 0;\n        this.optional_arguments = 0;\n        this.final_argument_whitespace = false;\n        this.has_content = true;\n        this.option_spec = {\n            label: unchanged\n        };\n    }\n    run(data) {\n        // TODO handle options\n        this.assert_has_content(data);\n        const token = this.createToken(\"math_block\", \"div\", 0, {\n            content: data.body,\n            map: data.bodyMap,\n            block: true\n        });\n        token.attrSet(\"class\", \"math block\");\n        if (data.options.label) {\n            token.attrSet(\"id\", data.options.label);\n            const target = newTarget(this.state, token, TargetKind.equation, data.options.label, \"\");\n            token.attrSet(\"number\", `${target.number}`);\n            token.info = data.options.label;\n            token.meta = { label: data.options.label, numbered: true, number: target.number };\n        }\n        return [token];\n    }\n}\nexport const math = {\n    math: Math\n};\n//# sourceMappingURL=math.js.map","export { Directive } from \"./main\";\nexport { default as directivePlugin } from \"./plugin\";\nimport * as directiveOptions_1 from \"./options\";\nexport { directiveOptions_1 as directiveOptions };\nexport { admonitions } from \"./admonitions\";\nexport { code } from \"./code\";\nexport { images } from \"./images\";\nexport { tables } from \"./tables\";\nexport { math } from \"./math\";\nimport { admonitions } from \"./admonitions\";\nimport { code } from \"./code\";\nimport { images } from \"./images\";\nimport { tables } from \"./tables\";\nimport { math } from \"./math\";\nexport const directivesDefault = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, admonitions), images), code), tables), math);\n//# sourceMappingURL=index.js.map","import { getDocState } from \"./utils\";\nfunction numberingRule(options) {\n    return (state) => {\n        const env = getDocState(state);\n        env.references.forEach(ref => {\n            const { label, tokens, contentFromTarget } = ref;\n            const setError = (details, error) => {\n                tokens.open.attrJoin(\"class\", \"error\");\n                tokens.open.tag = tokens.close.tag = \"code\";\n                if (contentFromTarget && error) {\n                    tokens.content.content = contentFromTarget(error);\n                }\n                else {\n                    tokens.content.content = details;\n                }\n                return true;\n            };\n            const target = env.targets[label];\n            if (!target)\n                return setError(label, {\n                    kind: ref.kind || \"\",\n                    label,\n                    title: label,\n                    number: `\"${label}\"`\n                });\n            if (ref.kind && target.kind !== ref.kind) {\n                return setError(`Reference \"${label}\" does not match kind \"${ref.kind}\"`);\n            }\n            tokens.open.attrSet(\"href\", `#${target.label}`);\n            if (target.title)\n                tokens.open.attrSet(\"title\", target.title);\n            if (contentFromTarget)\n                tokens.content.content = contentFromTarget(target).trim();\n        });\n        // TODO: Math that wasn't pre-numbered?\n        return true;\n    };\n}\n/**\n * Create a rule that runs at the end of a markdown-it parser to go through all\n * references and add their targets.\n *\n * This `Rule` is done *last*, as you may reference a figure/equation, when that `Target`\n * has not yet been created. The references call `resolveRefLater` when they are being\n * created and pass their tokens such that the content of those tokens can be\n * dynamically updated.\n *\n * @param options (none currently)\n * @returns The markdown-it Rule\n */\nexport default function statePlugin(md, options) {\n    md.core.ruler.push(\"docutils_number\", numberingRule(options));\n}\n//# sourceMappingURL=plugin.js.map","import { rolesDefault, Role, rolePlugin } from \"./roles\";\nimport { directivesDefault, Directive, directivePlugin, directiveOptions } from \"./directives\";\nimport statePlugin from \"./state/plugin\";\nexport { rolesDefault, rolePlugin, Role };\nexport { directivesDefault, directivePlugin, Directive, directiveOptions };\n/** Default options for docutils plugin */\nconst OptionDefaults = {\n    parseRoles: true,\n    replaceFences: true,\n    rolesAfter: \"inline\",\n    directivesAfter: \"block\",\n    directives: directivesDefault,\n    roles: rolesDefault\n};\n/**\n * A markdown-it plugin for implementing docutils style roles and directives.\n */\nexport function docutilsPlugin(md, options) {\n    const fullOptions = Object.assign(Object.assign({}, OptionDefaults), options);\n    md.use(rolePlugin, fullOptions);\n    md.use(directivePlugin, fullOptions);\n    md.use(statePlugin, fullOptions);\n}\n// Note: Exporting default and the function as a named export.\n//       This helps with Jest integration in downstream packages.\nexport default docutilsPlugin;\n//# sourceMappingURL=index.js.map","/** Parse MyST targets (``(name)=``), blockquotes (``% comment``) and block breaks (``+++``).\n *\n * Adapted from: mdit_py_plugins/myst_blocks/index.py\n */\nexport function mystBlockPlugin(md) {\n    md.block.ruler.before(\"blockquote\", \"myst_line_comment\", parse_line_comment, {\n        alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\", \"footnote_def\"]\n    });\n    md.block.ruler.before(\"hr\", \"myst_block_break\", parse_block_break, {\n        alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\", \"footnote_def\"]\n    });\n    md.block.ruler.before(\"hr\", \"myst_target\", parse_target, {\n        alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\", \"footnote_def\"]\n    });\n    md.renderer.rules.myst_line_comment = render_myst_line_comment;\n    md.renderer.rules.myst_target = render_myst_target;\n}\nfunction parse_line_comment(state, startLine, endLine, silent) {\n    let pos = state.bMarks[startLine] + state.tShift[startLine];\n    let maximum = state.eMarks[startLine];\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n        return false;\n    }\n    if (state.src[pos] !== \"%\") {\n        return false;\n    }\n    if (silent) {\n        return true;\n    }\n    const token = state.push(\"myst_line_comment\", \"\", 0);\n    token.attrSet(\"class\", \"myst-line-comment\");\n    token.content = state.src.slice(pos + 1, maximum).replace(/\\s+$/gm, \"\"); // rstrip\n    token.markup = \"%\";\n    // search end of block while appending lines to `token.content`\n    let nextLine;\n    for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n        pos = state.bMarks[nextLine] + state.tShift[nextLine];\n        maximum = state.eMarks[nextLine];\n        if (state.src[pos] !== \"%\") {\n            break;\n        }\n        token.content += \"\\n\" + state.src.slice(pos + 1, maximum).replace(/\\s+$/gm, \"\"); // rstrip\n    }\n    state.line = nextLine;\n    token.map = [startLine, nextLine];\n    return true;\n}\nfunction parse_block_break(state, startLine, endLine, silent) {\n    let pos = state.bMarks[startLine] + state.tShift[startLine];\n    const maximum = state.eMarks[startLine];\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n        return false;\n    }\n    const marker = state.src.charCodeAt(pos);\n    pos += 1;\n    // Check block marker /* + */\n    if (marker !== 0x2b) {\n        return false;\n    }\n    // markers can be mixed with spaces, but there should be at least 3 of them\n    let cnt = 1;\n    while (pos < maximum) {\n        const ch = state.src.charCodeAt(pos);\n        if (ch !== marker && !state.md.utils.isSpace(ch)) {\n            break;\n        }\n        if (ch === marker) {\n            cnt += 1;\n        }\n        pos += 1;\n    }\n    if (cnt < 3) {\n        return false;\n    }\n    if (silent) {\n        return true;\n    }\n    state.line = startLine + 1;\n    const token = state.push(\"myst_block_break\", \"hr\", 0);\n    token.attrSet(\"class\", \"myst-block\");\n    token.content = state.src.slice(pos, maximum).trim();\n    token.map = [startLine, state.line];\n    token.markup = state.md.utils.fromCodePoint(marker).repeat(cnt);\n    return true;\n}\nconst TARGET_PATTERN = /^\\((?<label>[a-zA-Z0-9|@<>*./_\\-+:]{1,100})\\)=\\s*$/;\nfunction parse_target(state, startLine, endLine, silent) {\n    const pos = state.bMarks[startLine] + state.tShift[startLine];\n    const maximum = state.eMarks[startLine];\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n        return false;\n    }\n    const match = TARGET_PATTERN.exec(state.src.slice(pos, maximum));\n    if (!match) {\n        return false;\n    }\n    if (silent) {\n        return true;\n    }\n    state.line = startLine + 1;\n    const token = state.push(\"myst_target\", \"\", 0);\n    token.attrSet(\"class\", \"myst-target\");\n    token.content = match && match.groups ? match.groups[\"label\"] : \"\";\n    token.map = [startLine, state.line];\n    return true;\n}\nfunction escapeHtml(unsafe) {\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\nfunction render_myst_line_comment(tokens, idx) {\n    const token = tokens[idx];\n    const content = token.content;\n    return `<!-- ${escapeHtml(content).trim()} -->`;\n}\nfunction render_myst_target(tokens, idx) {\n    const token = tokens[idx];\n    const className = \"myst-target\";\n    const label = token.content;\n    const target = `<a href=\"#${label}\">(${label})=</a>`;\n    return `<div class=\"${className}\">${target}</div>`;\n}\n/** Colon fence\n * This plugin directly mimics regular fences, but with `:` colons.\n *\n * Example:\n\n        :::name\n        contained text\n        :::\n *\n*/\nexport function colonFencePlugin(md) {\n    md.block.ruler.before(\"fence\", \"colon_fence\", colon_fence_rule, {\n        alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\", \"footnote_def\"]\n    });\n}\nfunction colon_fence_rule(state, startLine, endLine, silent) {\n    let haveEndMarker = false;\n    let pos = state.bMarks[startLine] + state.tShift[startLine];\n    let max = state.eMarks[startLine];\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n        return false;\n    }\n    if (pos + 3 > max) {\n        return false;\n    }\n    const marker = state.src.charCodeAt(pos);\n    if (marker !== 0x3a /* : */) {\n        return false;\n    }\n    // scan marker length\n    let mem = pos;\n    pos = state.skipChars(pos, marker);\n    let len = pos - mem;\n    if (len < 3) {\n        return false;\n    }\n    const markup = state.src.slice(mem, pos);\n    const params = state.src.slice(pos, max);\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n        return true;\n    }\n    // search end of block\n    let nextLine = startLine;\n    for (;;) {\n        nextLine++;\n        if (nextLine >= endLine) {\n            // unclosed block should be autoclosed by end of document.\n            // also block seems to be autoclosed by end of parent\n            break;\n        }\n        pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n        max = state.eMarks[nextLine];\n        if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n            // non-empty line with negative indent should stop the list:\n            // - ```\n            //  test\n            break;\n        }\n        if (state.src.charCodeAt(pos) !== marker) {\n            continue;\n        }\n        if (state.sCount[nextLine] - state.blkIndent >= 4) {\n            // closing fence should be indented less than 4 spaces\n            continue;\n        }\n        pos = state.skipChars(pos, marker);\n        // closing code fence must be at least as long as the opening one\n        if (pos - mem < len) {\n            continue;\n        }\n        // make sure tail has spaces only\n        pos = state.skipSpaces(pos);\n        if (pos < max) {\n            continue;\n        }\n        haveEndMarker = true;\n        // found!\n        break;\n    }\n    // If a fence has heading spaces, they should be removed from its inner block\n    len = state.sCount[startLine];\n    state.line = nextLine + (haveEndMarker ? 1 : 0);\n    const token = state.push(\"fence\", \"code\", 0);\n    token.info = params;\n    token.content = state.getLines(startLine + 1, nextLine, len, true);\n    token.markup = markup;\n    token.map = [startLine, state.line];\n    return true;\n}\n//# sourceMappingURL=index.js.map","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","import { escapeHtml } from \"markdown-it/lib/common/utils\";\nconst OptionDefaults = {\n    allow_space: true,\n    allow_digits: true,\n    double_inline: true,\n    allow_labels: true,\n    labelNormalizer(label) {\n        return label.replace(/[\\s]+/g, \"-\");\n    },\n    renderer(content) {\n        return escapeHtml(content);\n    },\n    labelRenderer(label) {\n        return `<a href=\"#${label}\" class=\"mathlabel\" title=\"Permalink to this equation\">¶</a>`;\n    }\n};\n/**\n * A markdown-it plugin for parsing dollar delimited math,\n * e.g. inline: ``$a=1$``, block: ``$$b=2$$`\n */\nexport function dollarmathPlugin(md, options) {\n    const fullOptions = Object.assign(Object.assign({}, OptionDefaults), options);\n    md.inline.ruler.before(\"escape\", \"math_inline\", math_inline_dollar(fullOptions));\n    md.block.ruler.before(\"fence\", \"math_block\", math_block_dollar(fullOptions));\n    const createRule = (opts) => (tokens, idx) => {\n        const content = tokens[idx].content.trim();\n        let res;\n        try {\n            res = fullOptions.renderer(content, { displayMode: opts.displayMode });\n        }\n        catch (err) {\n            res = md.utils.escapeHtml(`${content}:${err.message}`);\n        }\n        const className = opts.inline ? \"inline\" : \"block\";\n        const tag = opts.displayMode ? \"div\" : \"span\";\n        const newline = opts.inline ? \"\" : \"\\n\";\n        const id = tokens[idx].info;\n        const label = opts.hasLabel ? `${fullOptions.labelRenderer(id)}` : \"\";\n        return ([\n            `<${tag} ${id ? `id=\"${id}\" ` : \"\"}class=\"math ${className}\">`,\n            label,\n            res,\n            `</${tag}>`\n        ]\n            .filter(v => !!v)\n            .join(newline) + newline);\n    };\n    md.renderer.rules[\"math_inline\"] = createRule({\n        displayMode: false,\n        inline: true\n    });\n    md.renderer.rules[\"math_inline_double\"] = createRule({\n        displayMode: true,\n        inline: true\n    });\n    md.renderer.rules[\"math_block\"] = createRule({\n        displayMode: true\n    });\n    md.renderer.rules[\"math_block_label\"] = createRule({\n        displayMode: true,\n        hasLabel: true\n    });\n}\n// Exporting both a default and named export is necessary for Jest in some cases\nexport default dollarmathPlugin;\n/** Test if dollar is escaped */\nfunction isEscaped(state, back_pos, mod = 0) {\n    // count how many backslashes are before the current position\n    let backslashes = 0;\n    while (back_pos >= 0) {\n        back_pos = back_pos - 1;\n        if (state.src.charCodeAt(back_pos) === 0x5c) {\n            backslashes += 1;\n        }\n        else {\n            break;\n        }\n    }\n    if (backslashes === 0) {\n        return false;\n    }\n    // if an odd number of backslashes then ignore\n    if (backslashes % 2 !== mod) {\n        return true;\n    }\n    return false;\n}\n/** Generate inline dollar rule  */\nfunction math_inline_dollar(options) {\n    /** Inline dollar rule:\n     *\n      - Initial check:\n          - check if first character is a $\n          - check if the first character is escaped\n          - check if the next character is a space (if not allow_space)\n          - check if the next character is a digit (if not allow_digits)\n      - Advance one, if allow_double\n      - Find closing (advance one, if allow_double)\n      - Check closing:\n          - check if the previous character is a space (if not allow_space)\n          - check if the next character is a digit (if not allow_digits)\n      - Check empty content\n     *\n    */\n    function math_inline_dollar_rule(state, silent) {\n        if (state.src.charCodeAt(state.pos) !== 0x24 /* $ */) {\n            return false;\n        }\n        if (!options.allow_space) {\n            // whitespace not allowed straight after opening $\n            if (state.md.utils.isWhiteSpace(state.src.charCodeAt(state.pos + 1))) {\n                return false;\n            }\n        }\n        if (!options.allow_digits) {\n            // digit not allowed straight before opening $\n            const char = state.src.charAt(state.pos - 1);\n            if (!!char && char.trim() !== \"\" && !isNaN(Number(char))) {\n                return false;\n            }\n        }\n        if (isEscaped(state, state.pos)) {\n            return false;\n        }\n        // check if double dollar (if allowed)\n        let is_double = false;\n        if (options.double_inline && state.src.charCodeAt(state.pos + 1) === 0x24) {\n            is_double = true;\n        }\n        // find closing $\n        let pos = state.pos + 1 + (is_double ? 1 : 0);\n        let found_closing = false;\n        let end = -1;\n        while (!found_closing) {\n            end = state.src.indexOf(\"$\", pos);\n            if (end === -1) {\n                return false;\n            }\n            if (isEscaped(state, end)) {\n                pos = end + 1;\n                continue;\n            }\n            if (is_double && state.src.charCodeAt(end + 1) !== 0x24) {\n                pos = end + 1;\n                continue;\n            }\n            if (is_double) {\n                end += 1;\n            }\n            found_closing = true;\n        }\n        if (!found_closing) {\n            return false;\n        }\n        if (!options.allow_space) {\n            // whitespace not allowed straight before closing $\n            const charCode = state.src.charCodeAt(end - 1);\n            if (state.md.utils.isWhiteSpace(charCode)) {\n                return false;\n            }\n        }\n        if (!options.allow_digits) {\n            // digit not allowed straight after closing $\n            const char = state.src.charAt(end + 1);\n            if (!!char && char.trim() !== \"\" && !isNaN(Number(char))) {\n                return false;\n            }\n        }\n        let text = state.src.slice(state.pos + 1, end);\n        if (is_double) {\n            text = state.src.slice(state.pos + 2, end - 1);\n        }\n        if (!text) {\n            // ignore empty\n            return false;\n        }\n        if (!silent) {\n            const token = state.push(is_double ? \"math_inline_double\" : \"math_inline\", \"math\", 0);\n            token.content = text;\n            token.markup = is_double ? \"$$\" : \"$\";\n        }\n        state.pos = end + 1;\n        return true;\n    }\n    return math_inline_dollar_rule;\n}\n/** Match a trailing label for a math block */\nfunction matchLabel(lineText, end) {\n    // reverse the line and match\n    const eqnoMatch = lineText\n        .split(\"\")\n        .reverse()\n        .join(\"\")\n        .match(/^\\s*\\)(?<label>[^)$\\r\\n]+?)\\(\\s*\\${2}/);\n    if (eqnoMatch && eqnoMatch.groups) {\n        const label = eqnoMatch.groups[\"label\"].split(\"\").reverse().join(\"\");\n        end = end - ((eqnoMatch.index || 0) + eqnoMatch[0].length);\n        return { label, end };\n    }\n    return { end };\n}\n/** Generate inline dollar rule */\nfunction math_block_dollar(options) {\n    /** Block dollar rule */\n    function math_block_dollar_rule(state, startLine, endLine, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    silent) {\n        let haveEndMarker = false;\n        const startPos = state.bMarks[startLine] + state.tShift[startLine];\n        let end = state.eMarks[startLine];\n        // if it's indented more than 3 spaces, it should be a code block\n        if (state.sCount[startLine] - state.blkIndent >= 4) {\n            return false;\n        }\n        if (startPos + 2 > end) {\n            return false;\n        }\n        if (state.src.charCodeAt(startPos) != 0x24 ||\n            state.src.charCodeAt(startPos + 1) != 0x24) {\n            return false;\n        }\n        // search for end of block\n        let nextLine = startLine;\n        let label = undefined;\n        // search for end of block on same line\n        let lineText = state.src.slice(startPos, end);\n        if (lineText.trim().length > 3) {\n            if (lineText.trim().endsWith(\"$$\")) {\n                haveEndMarker = true;\n                end = end - 2 - (lineText.length - lineText.trim().length);\n            }\n            else if (options.allow_labels) {\n                const output = matchLabel(lineText, end);\n                if (output.label !== undefined) {\n                    haveEndMarker = true;\n                    label = output.label;\n                    end = output.end;\n                }\n            }\n        }\n        // search for end of block on subsequent line\n        let start;\n        if (!haveEndMarker) {\n            while (nextLine + 1 < endLine) {\n                nextLine += 1;\n                start = state.bMarks[nextLine] + state.tShift[nextLine];\n                end = state.eMarks[nextLine];\n                if (end - start < 2) {\n                    continue;\n                }\n                lineText = state.src.slice(start, end);\n                if (lineText.trim().endsWith(\"$$\")) {\n                    haveEndMarker = true;\n                    end = end - 2 - (lineText.length - lineText.trim().length);\n                    break;\n                }\n                if (options.allow_labels) {\n                    const output = matchLabel(lineText, end);\n                    if (output.label !== undefined) {\n                        haveEndMarker = true;\n                        label = output.label;\n                        end = output.end;\n                        break;\n                    }\n                }\n            }\n        }\n        if (!haveEndMarker) {\n            return false;\n        }\n        state.line = nextLine + (haveEndMarker ? 1 : 0);\n        const token = state.push(label ? \"math_block_label\" : \"math_block\", \"math\", 0);\n        token.block = true;\n        token.content = state.src.slice(startPos + 2, end).trim();\n        token.markup = \"$$\";\n        token.map = [startLine, state.line];\n        if (label) {\n            token.info = options.labelNormalizer ? options.labelNormalizer(label) : label;\n        }\n        return true;\n    }\n    return math_block_dollar_rule;\n}\n//# sourceMappingURL=index.js.map","/**\n * An markdown-it plugin that parses bare LaTeX [amsmath](https://ctan.org/pkg/amsmath) environments.\n *\n * ```latex\n    \\begin{gather*}\n      a_1=b_1+c_1\\\\\n      a_2=b_2+c_2-d_2+e_2\n    \\end{gather*}\n  ```\n *\n */\nexport function amsmathPlugin(md, options) {\n    md.block.ruler.before(\"blockquote\", \"amsmath\", amsmathBlock, {\n        alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\", \"footnote_def\"]\n    });\n    const renderer = options === null || options === void 0 ? void 0 : options.renderer;\n    if (renderer) {\n        md.renderer.rules[\"amsmath\"] = (tokens, idx) => {\n            const content = tokens[idx].content;\n            let res;\n            try {\n                res = renderer(content);\n            }\n            catch (err) {\n                res = md.utils.escapeHtml(`${content}:${err.message}`);\n            }\n            return res;\n        };\n    }\n    else {\n        // basic renderer for testing\n        md.renderer.rules[\"amsmath\"] = (tokens, idx) => {\n            const content = md.utils.escapeHtml(tokens[idx].content);\n            return `<div class=\"math amsmath\">\\n${content}\\n</div>\\n`;\n        };\n    }\n}\n// Exporting both a default and named export is necessary for Jest in some cases\nexport default amsmathPlugin;\n// Taken from amsmath version 2.1\n// http://anorien.csc.warwick.ac.uk/mirrors/CTAN/macros/latex/required/amsmath/amsldoc.pdf\nconst ENVIRONMENTS = [\n    // 3.2 single equation with an automatically generated number\n    \"equation\",\n    // 3.3 variation equation, used for equations that don’t fit on a single line\n    \"multline\",\n    // 3.5 a group of consecutive equations when there is no alignment desired among them\n    \"gather\",\n    // 3.6 Used for two or more equations when vertical alignment is desired\n    \"align\",\n    // allows the horizontal space between equations to be explicitly specified.\n    \"alignat\",\n    // stretches the space between the equation columns to the maximum possible width\n    \"flalign\",\n    // 4.1 The pmatrix, bmatrix, Bmatrix, vmatrix and Vmatrix have (respectively)\n    // (),[],{},||,and ‖‖ delimiters built in.\n    \"matrix\",\n    \"pmatrix\",\n    \"bmatrix\",\n    \"Bmatrix\",\n    \"vmatrix\",\n    \"Vmatrix\",\n    // eqnarray is another math environment, it is not part of amsmath,\n    // and note that it is better to use align or equation+split instead\n    \"eqnarray\"\n];\n// other \"non-top-level\" environments:\n// 3.4 the split environment is for single equations that are too long to fit on one line\n// and hence must be split into multiple lines,\n// it is intended for use only inside some other displayed equation structure,\n// usually an equation, align, or gather environment\n// 3.7 variants gathered, aligned,and alignedat are provided\n// whose total width is the actual width of the contents;\n// thus they can be used as a component in a containing expression\nconst RE_OPEN = new RegExp(`^\\\\\\\\begin{(${ENVIRONMENTS.join(\"|\")})([*]?)}`);\nfunction matchEnvironment(string) {\n    const matchOpen = string.match(RE_OPEN);\n    if (!matchOpen)\n        return null;\n    const [, environment, numbered] = matchOpen;\n    const end = `\\\\end{${environment}${numbered}}`;\n    const matchClose = string.indexOf(end);\n    if (matchClose === -1)\n        return null;\n    return { environment, numbered, endpos: matchClose + end.length };\n}\nfunction amsmathBlock(state, startLine, endLine, silent) {\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4)\n        return false;\n    const begin = state.bMarks[startLine] + state.tShift[startLine];\n    const outcome = matchEnvironment(state.src.slice(begin));\n    if (!outcome)\n        return false;\n    const { environment, numbered } = outcome;\n    let { endpos } = outcome;\n    endpos += begin;\n    let line = startLine;\n    while (line < endLine) {\n        if (endpos >= state.bMarks[line] && endpos <= state.eMarks[line]) {\n            // line for end of block math found ...\n            // eslint-disable-next-line no-param-reassign\n            state.line = line + 1;\n            break;\n        }\n        line += 1;\n    }\n    if (!silent) {\n        const token = state.push(\"amsmath\", \"math\", 0);\n        token.block = true;\n        token.content = state.src.slice(begin, endpos);\n        token.meta = { environment, numbered };\n        token.map = [startLine, line];\n    }\n    return true;\n}\n//# sourceMappingURL=index.js.map","import { escapeHtml } from 'markdown-it/lib/common/utils';\n\nconst HTML_EMPTY_ELEMENTS = new Set([\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n]);\n\ntype AttrTypes = string | string[] | number | boolean | undefined | null;\n\ntype HTMLAttributes = {\n  // String Arrays are joined by ' ' for attributes (like class names)\n  [attr: string]: AttrTypes;\n};\n\n// Same typing as prosemirror-model\nexport interface HTMLOutputSpecArray {\n  0: string;\n  1?: HTMLOutputSpec | 0 | HTMLAttributes;\n  2?: HTMLOutputSpec | 0;\n  3?: HTMLOutputSpec | 0;\n  4?: HTMLOutputSpec | 0;\n  5?: HTMLOutputSpec | 0;\n  6?: HTMLOutputSpec | 0;\n  7?: HTMLOutputSpec | 0;\n  8?: HTMLOutputSpec | 0;\n  9?: HTMLOutputSpec | 0;\n}\ntype HTMLOutputSpecArrayInternal = [\n  string,\n  HTMLOutputSpec | 0 | HTMLAttributes,\n  HTMLOutputSpec | 0,\n];\nexport type HTMLOutputSpec = HTMLOutputSpecArray;\n\nconst formatAttr = (key: string, value: AttrTypes): string | null => {\n  let v: string;\n  if (value == null) return null;\n  if (Array.isArray(value)) {\n    v = value.join(' ');\n  } else if (typeof value === 'number') {\n    v = String(value);\n  } else if (typeof value === 'boolean') {\n    if (!value) return null;\n    v = '';\n  } else {\n    v = value;\n  }\n  return `${key}=\"${escapeHtml(v)}\"`;\n};\n\nexport function formatTag(\n  tag: string,\n  attributes: HTMLAttributes,\n  inline: boolean,\n): string {\n  const { children, ...rest } = attributes;\n  const join = inline ? '' : '\\n';\n  const attrs = Object.entries(rest)\n    .filter(([, value]) => value != null && value !== false)\n    .map(([key, value]) => formatAttr(key, value))\n    .filter((value) => value != null)\n    .join(' ');\n  const html = `<${escapeHtml(tag)}${attrs ? ` ${attrs}` : ''}>`;\n  if (children) return `${html}${join}${escapeHtml(String(children))}`;\n  return html;\n}\n\nfunction toHTMLRecurse(\n  template: HTMLOutputSpec,\n  inline: boolean,\n): [string, string | null] {\n  // Convert to an internal type which is actually an array\n  const T = template as HTMLOutputSpecArrayInternal;\n  // Cannot have more than one hole in the template\n  const atMostOneHole = T.flat(Infinity).filter((v) => v === 0).length <= 1;\n  if (!atMostOneHole)\n    throw new Error('There cannot be more than one hole in the template.');\n  // Grab the tag and attributes if they exist!\n  const tag = T[0];\n  const hasAttrs = !Array.isArray(T?.[1]) && typeof T?.[1] === 'object';\n  const attrs = hasAttrs ? (T[1] as HTMLAttributes) : {};\n  // These are the tag arrays before and after the hole.\n  const before: string[] = [];\n  const after: string[] = [];\n  before.push(formatTag(tag, attrs, inline));\n  let foundHole = false;\n  T.slice(hasAttrs ? 2 : 1).forEach((value) => {\n    const v = value as HTMLOutputSpec | 0;\n    if (v === 0) {\n      foundHole = true;\n      return;\n    }\n    // Recurse, if a hole is found then split the return\n    const [b, a] = toHTMLRecurse(v, inline);\n    before.push(b);\n    if (a) {\n      foundHole = true;\n      after.push(a);\n    }\n  });\n  const join = inline ? '' : '\\n';\n  const closingTag = HTML_EMPTY_ELEMENTS.has(tag) ? '' : `</${tag}>`;\n  if (!foundHole) {\n    if (closingTag) before.push(closingTag);\n    return [before.join(join), null];\n  }\n  if (closingTag) after.push(closingTag);\n  return [before.join(join), after.join(join)];\n}\n\n/**\n * A helper function to create valid HTML with a \"hole\" (represented by zero) for content.\n *\n * The content is escaped and null/undefined attributes are not included.\n *\n * **A simple wrapper tag:**\n * ```\n * const attr = 'hello';\n * const html = toHTML(['tag', {attr}, 0]);\n * console.log(html);\n * > ['<tag attr=\"hello\">', '</tag>']\n * ```\n *\n * **A nested wrapper tag:**\n * ```\n * const html = toHTML([\n *  'tag', {attr},\n *  ['img', {src}],\n *  ['caption', 0],\n * ]);\n * console.log(html);\n * > ['<tag attr=\"x\"><img src=\"src\"><caption>', '</caption></tag>']\n * ```\n *\n * You can include `children` in the `attrs` and that adds inline content for a tag.\n *\n * You can also send in a list of strings for `attrs`, which are joined with a space (`' '`).\n *\n * Types are based on prosemirror-model.\n *\n * @param spec The spec for the dom model.\n * @param opts Options dict, `inline` creates HTML that is on a single line.\n */\nexport function toHTML(\n  template: HTMLOutputSpec,\n  opts = { inline: false },\n): [string, string | null] {\n  const [before, after] = toHTMLRecurse(template, opts.inline);\n  const join = opts.inline ? '' : '\\n';\n  return [`${before}${join}`, after ? `${after}${join}` : null];\n}\n","import { TargetKind } from '../mdast/state';\nimport { toHTML } from '../utils';\n\ntype Target = {\n  id: string;\n  name: string;\n  kind: TargetKind;\n  defaultReference: string;\n  title?: string;\n  number?: number;\n};\n\nexport const renderMath = (math: string, block: boolean, target?: Target): string => {\n  const { id, number } = target ?? {};\n  const [html] = toHTML(\n    [\n      block ? 'div' : 'span',\n      {\n        class: target ? ['math', 'numbered'] : 'math',\n        id,\n        number,\n        children: block ? `\\\\[\\n${math}\\n\\\\]` : `\\\\(${math}\\\\)`,\n      },\n    ],\n    { inline: true },\n  );\n  return block ? `${html}\\n` : html;\n};\n","import MarkdownIt from 'markdown-it';\nimport { dollarmathPlugin } from 'markdown-it-dollarmath';\nimport { amsmathPlugin } from 'markdown-it-amsmath';\nimport { renderMath } from './utils';\n\nexport type MathExtensionOptions = {\n  amsmath?: boolean;\n  dollarmath?: boolean;\n};\n\nexport function addMathRenderers(md: MarkdownIt): void {\n  const { renderer } = md;\n  renderer.rules.math_inline = (tokens, idx) => renderMath(tokens[idx].content, false);\n  // Note: this will actually create invalid HTML\n  renderer.rules.math_inline_double = (tokens, idx) =>\n    renderMath(tokens[idx].content, true);\n  renderer.rules.math_block = (tokens, idx) => renderMath(tokens[idx].content, true);\n  renderer.rules.math_block_label = (tokens, idx) =>\n    renderMath(tokens[idx].content, true, tokens[idx].meta?.target);\n}\n\nexport function plugin(md: MarkdownIt, options?: true | MathExtensionOptions): void {\n  const opts = options === true ? { amsmath: true, dollarmath: true } : options;\n  if (opts?.dollarmath) dollarmathPlugin(md);\n  if (opts?.amsmath)\n    amsmathPlugin(md, {\n      renderer: (content) => renderMath(content, true),\n    });\n  // Note: numbering of equations for `math_block_label` happens in the directives rules\n  addMathRenderers(md);\n}\n","import type MarkdownIt from 'markdown-it';\nimport type StateCore from 'markdown-it/lib/rules_core/state_core';\n\nexport { default as frontMatterPlugin } from 'markdown-it-front-matter';\nexport { default as footnotePlugin } from 'markdown-it-footnote';\nexport { default as tasklistPlugin } from 'markdown-it-task-lists';\nexport { default as deflistPlugin } from 'markdown-it-deflist';\nexport { docutilsPlugin } from 'markdown-it-docutils';\nexport { mystBlockPlugin } from 'markdown-it-myst-extras';\nexport { plugin as mathPlugin, MathExtensionOptions } from './math';\n\n/** Markdown-it plugin to convert the front-matter token to a renderable token, for previews */\nexport function convertFrontMatter(md: MarkdownIt) {\n  md.core.ruler.after('block', 'convert_front_matter', (state: StateCore) => {\n    if (state.tokens.length && state.tokens[0].type === 'front_matter') {\n      const replace = new state.Token('fence', 'code', 0);\n      replace.map = state.tokens[0].map;\n      replace.info = 'yaml';\n      replace.content = state.tokens[0].meta;\n      state.tokens[0] = replace;\n    }\n    return true;\n  });\n}\n","import type Token from 'markdown-it/lib/token';\n\nexport type { Token };\n\nexport type GenericText = {\n  type: string;\n  value: string;\n};\n\nexport type GenericNode<T extends Record<string, any> = Record<string, any>> = {\n  type: string;\n  kind?: string;\n  children?: GenericNode<Record<string, any>>[];\n  value?: string;\n  identifier?: string;\n  label?: string;\n} & T;\n\nexport type GenericParent<T extends Record<string, any> = Record<string, any>> =\n  GenericNode<T> & { children: GenericNode<T>[] };\n\nexport type Spec = {\n  type: string;\n  getAttrs?: (token: Token, tokens: Token[], index: number) => Record<string, any>;\n  attrs?: Record<string, any>;\n  noCloseToken?: boolean;\n  isText?: boolean;\n  isLeaf?: boolean;\n};\n\nexport type Admonition = GenericNode<{\n  kind?: AdmonitionKind;\n  class?: string;\n}>;\n\nexport type Container = {\n  kind: string;\n  identifier?: string;\n  label?: string;\n  class?: string;\n  numbered?: boolean;\n};\n\nexport enum AdmonitionKind {\n  admonition = 'admonition',\n  attention = 'attention',\n  caution = 'caution',\n  danger = 'danger',\n  error = 'error',\n  important = 'important',\n  hint = 'hint',\n  note = 'note',\n  seealso = 'seealso',\n  tip = 'tip',\n  warning = 'warning',\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","import { AdmonitionKind, GenericNode } from './types';\n\nexport function admonitionKindToTitle(kind: AdmonitionKind) {\n  const transform: Record<string, string> = {\n    attention: 'Attention',\n    caution: 'Caution',\n    danger: 'Danger',\n    error: 'Error',\n    important: 'Important',\n    hint: 'Hint',\n    note: 'Note',\n    seealso: 'See Also',\n    tip: 'Tip',\n    warning: 'Warning',\n  };\n  return transform[kind] || `Unknown Admonition \"${kind}\"`;\n}\n\nexport function withoutTrailingNewline(str: string) {\n  return str[str.length - 1] == '\\n' ? str.slice(0, str.length - 1) : str;\n}\n\n/**\n * https://github.com/syntax-tree/mdast#association\n * @param label A label field can be present.\n *        label is a string value: it works just like title on a link or a\n *        lang on code: character escapes and character references are parsed.\n * @returns { identifier, label }\n */\nexport function normalizeLabel(\n  label: string | undefined,\n): { identifier: string; label: string } | undefined {\n  if (!label) return undefined;\n  const identifier = label\n    .replace(/[\\t\\n\\r ]+/g, ' ')\n    .trim()\n    .toLowerCase();\n  return { identifier, label };\n}\n\nexport function setTextAsChild(node: GenericNode, text: string) {\n  node.children = [{ type: 'text', value: text }];\n}\n","import { u } from 'unist-builder';\nimport type { GenericNode, GenericParent, GenericText, Spec, Token } from './types';\nimport { withoutTrailingNewline } from './utils';\n\n/** MarkdownParseState tracks the context of a running token stream.\n *\n * Loosly based on prosemirror-markdown\n */\nexport class MarkdownParseState {\n  stack: GenericNode[];\n  handlers: Record<string, TokenHandler>;\n  constructor(handlers: Record<string, Spec>) {\n    this.stack = [u('root', [] as GenericParent[])];\n    this.handlers = getTokenHandlers(handlers);\n  }\n\n  top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  addNode(node?: GenericNode) {\n    const top = this.top();\n    if (this.stack.length && node && 'children' in top) top.children?.push(node);\n    return node;\n  }\n\n  addText(text: string, type = 'text', attrs?: Record<string, any>) {\n    const top = this.top();\n    const value = text;\n    if (!value || !this.stack.length || !type || !('children' in top)) return;\n    const last = top.children?.[top.children.length - 1];\n    if (type === 'text' && last?.type === type) {\n      // The last node is also text, merge it with a space\n      last.value += `${value}`;\n      return last;\n    }\n    const node: GenericText = { type, ...attrs, value };\n    top.children?.push(node);\n    return node;\n  }\n\n  openNode(type: string, attrs: Record<string, any>, isLeaf = false) {\n    const node: GenericNode = { type, ...attrs };\n    if (!isLeaf) (node as GenericParent).children = [];\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    const node = this.stack.pop();\n    return this.addNode(node);\n  }\n\n  parseTokens(tokens?: Token[] | null) {\n    tokens?.forEach((token, index) => {\n      if (token.hidden) return;\n      const handler = this.handlers[token.type];\n      if (!handler)\n        throw new Error(\n          'Token type `' + token.type + '` not supported by tokensToMyst parser',\n        );\n      handler(this, token, tokens, index);\n    });\n  }\n}\n\ntype TokenHandler = (\n  state: MarkdownParseState,\n  token: Token,\n  tokens: Token[],\n  index: number,\n) => void;\n\nfunction attrs(spec: Spec, token: Token, tokens: Token[], index: number) {\n  const attrs = spec.getAttrs?.(token, tokens, index) || spec.attrs || {};\n  if ('type' in attrs) throw new Error('You can not have \"type\" as attrs.');\n  if ('children' in attrs) throw new Error('You can not have \"children\" as attrs.');\n  return attrs;\n}\n\nfunction noCloseToken(spec: Spec, type: string) {\n  return (\n    spec.noCloseToken ||\n    type == 'code_inline' ||\n    type == 'code_block' ||\n    type == 'fence'\n  );\n}\n\nfunction getTokenHandlers(specHandlers: Record<string, Spec>) {\n  const handlers: Record<string, TokenHandler> = {};\n\n  Object.entries(specHandlers).forEach(([type, spec]) => {\n    const nodeType = spec.type;\n    if (noCloseToken(spec, type)) {\n      handlers[type] = (state, tok, tokens, i) => {\n        if (spec.isText) {\n          state.addText(\n            withoutTrailingNewline(tok.content),\n            spec.type,\n            attrs(spec, tok, tokens, i),\n          );\n          return;\n        }\n        state.openNode(nodeType, attrs(spec, tok, tokens, i), spec.isLeaf);\n        state.addText(withoutTrailingNewline(tok.content));\n        state.closeNode();\n      };\n    } else {\n      handlers[type + '_open'] = (state, tok, tokens, i) =>\n        state.openNode(nodeType, attrs(spec, tok, tokens, i));\n      handlers[type + '_close'] = (state) => state.closeNode();\n    }\n  });\n\n  handlers.text = (state, tok) => state.addText(tok.content);\n  handlers.inline = (state, tok) => state.parseTokens(tok.children);\n  handlers.softbreak = handlers.softbreak || ((state) => state.addText('\\n'));\n  return handlers;\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n */\n\n/**\n * Check if a node passes a test\n *\n * @template {Node} Tree Node type that is checked.\n * @callback TestFunction\n * @param {Tree} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * @typedef {Object} RemoveOptions\n * @property {boolean} [cascade] Whether to drop parent nodes if they had children, but all their children were filtered out test\n */\n\nimport {convert} from 'unist-util-is'\n\n/** @type {Array.<Node>} */\nconst empty = []\n\nexport const remove =\n  /**\n   * @type {(\n   *  (<Tree extends Node>(node: Tree, options: RemoveOptions, test: Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>|Array<Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>>) => Tree|null) &\n   *  (<Tree extends Node>(node: Tree, test: Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>|Array<Type|Props|TestFunction<import('unist-util-visit-parents/complex-types').InclusiveDescendant<Tree>>>) => Tree|null)\n   * )}\n   */\n  (\n    /**\n     * Mutate the given tree by removing all nodes that pass `test`.\n     * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n     *\n     * @param {Node} tree Tree to filter\n     * @param {RemoveOptions} options Whether to drop parent nodes if they had children, but all their children were filtered out. Default is `{cascade: true}`\n     * @param {Type|Props|TestFunction<Node>|Array<Type|Props|TestFunction<Node>>} test is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      const cascade =\n        options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * Check and remove nodes recursively in preorder.\n       * For each composite node, modify its children array in-place.\n       *\n       * @param {Node} node\n       * @param {number|undefined} [index]\n       * @param {Parent|undefined} [parent]\n       * @returns {Node|null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array.<Node>} */\n        // @ts-expect-error looks like a parent.\n        const children = node.children || empty\n        let childIndex = -1\n        let position = 0\n\n        if (is(node, index, parent)) {\n          return null\n        }\n\n        if (children.length > 0) {\n          // Move all living children to the beginning of the children array.\n          while (++childIndex < children.length) {\n            // @ts-expect-error looks like a parent.\n            if (preorder(children[childIndex], childIndex, node)) {\n              children[position++] = children[childIndex]\n            }\n          }\n\n          // Cascade delete.\n          if (cascade && !position) {\n            return null\n          }\n\n          // Drop other nodes.\n          children.length = position\n        }\n\n        return node\n      }\n    }\n  )\n","/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything\n */\n\nimport {convert} from 'unist-util-is'\n\nexport var findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &\n   *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent Parent node\n     * @param {Node|number} index Child of `parent`, or it’s index\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (parent, index, test) {\n      var is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').Query} Query\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function root(node) {\n  return (\n    // Root in nlcst.\n    node.type === 'RootNode' ||\n    // Rest\n    node.type === 'root'\n  )\n}\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: looks like a record.\n  return Array.isArray(node.children)\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Query} Query\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').Handler} Handler\n */\n\nimport {zwitch} from 'zwitch'\nimport {parent} from './util.js'\n\nconst own = {}.hasOwnProperty\n\nconst handle = zwitch('nestingOperator', {\n  // @ts-expect-error: hush.\n  unknown: unknownNesting,\n  // @ts-expect-error: hush.\n  invalid: topScan, // `undefined` is the top query selector.\n  handlers: {\n    // @ts-expect-error: hush.\n    null: descendant, // `null` is the descendant combinator.\n    // @ts-expect-error: hush.\n    '>': child,\n    // @ts-expect-error: hush.\n    '+': adjacentSibling,\n    // @ts-expect-error: hush.\n    '~': generalSibling\n  }\n})\n\n/** @type {Handler} */\nexport const nest = handle\n\n// Shouldn’t be invoked, parser gives correct data.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownNesting(query) {\n  throw new Error('Unexpected nesting `' + query.nestingOperator + '`')\n}\n\n/** @type {Handler} */\nfunction topScan(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 7 */\n  if (parent) {\n    throw new Error('topScan is supposed to be called from the root node')\n  }\n\n  if (!state.iterator) {\n    throw new Error('Expected `iterator` to be defined')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (typeof index !== 'number') {\n    throw new TypeError('Expected `index` to be defined')\n  }\n\n  state.iterator(query, node, index, parent, state)\n  if (!state.shallow) descendant(query, node, index, parent, state)\n}\n\n/** @type {Handler} */\nfunction descendant(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (!state.iterator) {\n    throw new Error('Expected `iterator` to be defined')\n  }\n\n  const previous = state.iterator\n\n  state.iterator = iterator\n  child(query, node, index, parent, state)\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    state.iterator = previous\n    previous(query, node, index, parent, state)\n    state.iterator = iterator\n\n    if (state.one && state.found) return\n\n    child(query, node, index, parent, state)\n  }\n}\n\n/** @type {Handler} */\nfunction child(query, node, _1, _2, state) {\n  if (!parent(node)) return\n  if (node.children.length === 0) return\n\n  new WalkIterator(query, node, state).each().done()\n}\n\n/** @type {Handler} */\nfunction adjacentSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (typeof index !== 'number') {\n    throw new TypeError('Expected `index` to be defined')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent) return\n\n  new WalkIterator(query, parent, state)\n    .prefillTypeIndex(0, ++index)\n    .each(index, ++index)\n    .prefillTypeIndex(index)\n    .done()\n}\n\n/** @type {Handler} */\nfunction generalSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (typeof index !== 'number') {\n    throw new TypeError('Expected `index` to be defined')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent) return\n\n  new WalkIterator(query, parent, state)\n    .prefillTypeIndex(0, ++index)\n    .each(index)\n    .done()\n}\n\nclass WalkIterator {\n  /**\n   * Handles typeIndex and typeCount properties for every walker.\n   *\n   * @param {Rule} query\n   * @param {Parent} parent\n   * @param {SelectState} state\n   */\n  constructor(query, parent, state) {\n    /** @type {Rule} */\n    this.query = query\n    /** @type {Parent} */\n    this.parent = parent\n    /** @type {SelectState} */\n    this.state = state\n    /** @type {TypeIndex|undefined} */\n    this.typeIndex = state.index ? new TypeIndex() : undefined\n    /** @type {Array.<Function>} */\n    this.delayed = []\n  }\n\n  /**\n   * @param {number|null|undefined} [x]\n   * @param {number|null|undefined} [y]\n   * @returns {this}\n   */\n  prefillTypeIndex(x, y) {\n    let [start, end] = this.defaults(x, y)\n\n    if (this.typeIndex) {\n      while (start < end) {\n        this.typeIndex.index(this.parent.children[start])\n        start++\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * @param {number|null|undefined} [x]\n   * @param {number|null|undefined} [y]\n   * @returns {this}\n   */\n  each(x, y) {\n    const [start, end] = this.defaults(x, y)\n    const child = this.parent.children[start]\n    /** @type {number} */\n    let index\n    /** @type {number} */\n    let nodeIndex\n\n    if (start >= end) return this\n\n    if (this.typeIndex) {\n      nodeIndex = this.typeIndex.nodes\n      index = this.typeIndex.index(child)\n      this.delayed.push(delay)\n    } else {\n      // Shouldn’t happen.\n      /* c8 ignore next 3 */\n      if (!this.state.iterator) {\n        throw new Error('Expected `iterator` to be defined')\n      }\n\n      this.state.iterator(this.query, child, start, this.parent, this.state)\n    }\n\n    // Stop if we’re looking for one node and it’s already found.\n    if (this.state.one && this.state.found) return this\n\n    return this.each(start + 1, end)\n\n    /**\n     * @this {WalkIterator}\n     */\n    function delay() {\n      // Shouldn’t happen.\n      /* c8 ignore next 3 */\n      if (!this.typeIndex) {\n        throw new TypeError('Expected `typeIndex` to be defined')\n      }\n\n      // Shouldn’t happen.\n      /* c8 ignore next 3 */\n      if (!this.state.iterator) {\n        throw new Error('Expected `iterator` to be defined')\n      }\n\n      this.state.typeIndex = index\n      this.state.nodeIndex = nodeIndex\n      this.state.typeCount = this.typeIndex.count(child)\n      this.state.nodeCount = this.typeIndex.nodes\n      this.state.iterator(this.query, child, start, this.parent, this.state)\n    }\n  }\n\n  /**\n   * Done!\n   * @returns {this}\n   */\n  done() {\n    let index = -1\n\n    while (++index < this.delayed.length) {\n      this.delayed[index].call(this)\n      if (this.state.one && this.state.found) break\n    }\n\n    return this\n  }\n\n  /**\n   * @param {number|null|undefined} [start]\n   * @param {number|null|undefined} [end]\n   * @returns {[number, number]}\n   */\n  defaults(start, end) {\n    if (start === null || start === undefined || start < 0) start = 0\n    if (end === null || end === undefined || end > this.parent.children.length)\n      end = this.parent.children.length\n    return [start, end]\n  }\n}\n\nclass TypeIndex {\n  constructor() {\n    /** @type {Object.<string, number>} */\n    this.counts = {}\n    /** @type {number} */\n    this.nodes = 0\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {number}\n   */\n  index(node) {\n    const type = node.type\n\n    this.nodes++\n\n    if (!own.call(this.counts, type)) this.counts[type] = 0\n\n    // Note: `++` is intended to be postfixed!\n    return this.counts[type]++\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {number|undefined}\n   */\n  count(node) {\n    return this.counts[node.type]\n  }\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Node} Node\n */\n\nimport {zwitch} from 'zwitch'\nimport {convert} from 'unist-util-is'\nimport {parent} from './util.js'\n\nconst is = convert()\n\nconst handle = zwitch('name', {\n  // @ts-expect-error: hush.\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    // @ts-expect-error: hush.\n    any: matches,\n    // @ts-expect-error: hush.\n    blank: empty,\n    // @ts-expect-error: hush.\n    empty,\n    // @ts-expect-error: hush.\n    'first-child': firstChild,\n    // @ts-expect-error: hush.\n    'first-of-type': firstOfType,\n    // @ts-expect-error: hush.\n    has: hasSelector,\n    // @ts-expect-error: hush.\n    'last-child': lastChild,\n    // @ts-expect-error: hush.\n    'last-of-type': lastOfType,\n    // @ts-expect-error: hush.\n    matches,\n    // @ts-expect-error: hush.\n    not,\n    // @ts-expect-error: hush.\n    'nth-child': nthChild,\n    // @ts-expect-error: hush.\n    'nth-last-child': nthLastChild,\n    // @ts-expect-error: hush.\n    'nth-of-type': nthOfType,\n    // @ts-expect-error: hush.\n    'nth-last-of-type': nthLastOfType,\n    // @ts-expect-error: hush.\n    'only-child': onlyChild,\n    // @ts-expect-error: hush.\n    'only-of-type': onlyOfType,\n    // @ts-expect-error: hush.\n    root,\n    // @ts-expect-error: hush.\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * @param {Rule} query\n * @param {Node} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, node, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], node, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Node} node\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, node, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n\n  state.one = true\n  state.shallow = true\n\n  const result = state.any(query.value, node, state)[0] === node\n\n  state.shallow = shallow\n  state.one = one\n\n  return result\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Node} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, node, index, parent, state) {\n  return !matches(query, node, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _1\n * @param {Node} node\n * @param {number|null} _2\n * @param {Parent|null} parent\n * @returns {boolean}\n */\nfunction root(_1, node, _2, parent) {\n  return is(node) && !parent\n}\n\n/**\n * @param {RulePseudo} _1\n * @param {Node} node\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_1, node, _2, _3, state) {\n  return (\n    is(node) &&\n    state.scopeNodes !== undefined &&\n    state.scopeNodes.includes(node)\n  )\n}\n\n/**\n * @param {RulePseudo} _1\n * @param {Node} node\n * @returns {boolean}\n */\nfunction empty(_1, node) {\n  return parent(node) ? node.children.length === 0 : !('value' in node)\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.nodeIndex === 0 // Specifically `0`, not falsey.\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.nodeCount === 'number' &&\n    state.nodeIndex === state.nodeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.nodeCount === 1\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.nodeIndex === 'number' && query.value(state.nodeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.nodeCount === 'number' &&\n    typeof state.nodeIndex === 'number' &&\n    query.value(state.nodeCount - state.nodeIndex - 1)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && query.value(state.typeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    query.value(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Node} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n// Shouldn’t be invoked, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {RulePseudo} query\n * @returns {boolean}\n */\nfunction unknownPseudo(query) {\n  if (query.name) {\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo|RulePseudoNth} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Node} node\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction hasSelector(query, node, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n  const scopeNodes = state.scopeNodes\n  const value = appendScope(query.value)\n  const anything = state.any\n\n  state.shallow = false\n  state.one = true\n  state.scopeNodes = [node]\n\n  const result = Boolean(anything(value, node, state)[0])\n\n  state.shallow = shallow\n  state.one = one\n  state.scopeNodes = scopeNodes\n\n  return result\n}\n\n/**\n * @param {Selector} value\n */\nfunction appendScope(value) {\n  /** @type {Selectors} */\n  const selector =\n    value.type === 'ruleSet' ? {type: 'selectors', selectors: [value]} : value\n  let index = -1\n  /** @type {Rule} */\n  let rule\n\n  while (++index < selector.selectors.length) {\n    rule = selector.selectors[index].rule\n    rule.nestingOperator = null\n\n    // Needed if new pseudo’s are added that accepts commas (such as\n    // `:lang(en, nl)`)\n    /* c8 ignore else */\n    if (\n      !rule.pseudos ||\n      rule.pseudos.length !== 1 ||\n      rule.pseudos[0].name !== 'scope'\n    ) {\n      selector.selectors[index] = {\n        type: 'ruleSet',\n        rule: {\n          type: 'rule',\n          rule,\n          // @ts-expect-error pseudos are fine w/ just a name!\n          pseudos: [{name: 'scope'}]\n        }\n      }\n    }\n  }\n\n  return selector\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Node} Node\n */\n\nimport {zwitch} from 'zwitch'\n\nconst handle = zwitch('operator', {\n  // @ts-expect-error: hush.\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    // @ts-expect-error: hush.\n    '=': exact,\n    // @ts-expect-error: hush.\n    '^=': begins,\n    // @ts-expect-error: hush.\n    '$=': ends,\n    // @ts-expect-error: hush.\n    '*=': containsString,\n    // @ts-expect-error: hush.\n    '~=': containsArray\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Node} node\n */\nexport function attribute(query, node) {\n  let index = -1\n\n  while (++index < query.attrs.length) {\n    if (!handle(query.attrs[index], node)) return false\n  }\n\n  return true\n}\n\n/**\n * `[attr]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction exists(query, node) {\n  // @ts-expect-error: Looks like a record.\n  return node[query.name] !== null && node[query.name] !== undefined\n}\n\n/**\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction exact(query, node) {\n  // @ts-expect-error: Looks like a record.\n  return exists(query, node) && String(node[query.name]) === query.value\n}\n\n/**\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction containsArray(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n\n  if (value === null || value === undefined) return false\n\n  // If this is an array, and the query is contained in it, return true.\n  // Coverage comment in place because TS turns `Array.isArray(unknown)`\n  // into `Array.<any>` instead of `Array.<unknown>`.\n  // type-coverage:ignore-next-line\n  if (Array.isArray(value) && value.includes(query.value)) {\n    return true\n  }\n\n  // For all other values, return whether this is an exact match.\n  return String(value) === query.value\n}\n\n/**\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction begins(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n\n  return (\n    query.value &&\n    typeof value === 'string' &&\n    value.slice(0, query.value.length) === query.value\n  )\n}\n\n/**\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction ends(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n\n  return (\n    query.value &&\n    typeof value === 'string' &&\n    value.slice(-query.value.length) === query.value\n  )\n}\n\n/**\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Node} node\n */\nfunction containsString(query, node) {\n  /** @type {unknown} */\n  // @ts-expect-error: Looks like a record.\n  const value = node[query.name]\n  return query.value && typeof value === 'string' && value.includes(query.value)\n}\n\n// Shouldn’t be invoked, Parser throws an error instead.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownOperator(query) {\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * @param {Rule} query\n * @param {Node} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  if (query.id) throw new Error('Invalid selector: id')\n  if (query.classNames) throw new Error('Invalid selector: class')\n\n  return Boolean(\n    node &&\n      (!query.tagName || name(query, node)) &&\n      (!query.attrs || attribute(query, node)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n */\n\n/**\n * @param {Rule} query\n * @param {Node} node\n */\nexport function name(query, node) {\n  return query.tagName === '*' || query.tagName === node.type\n}\n","/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').Query} Query\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {zwitch} from 'zwitch'\nimport {nest} from './nest.js'\nimport {pseudo} from './pseudo.js'\nimport {test} from './test.js'\nimport {root} from './util.js'\n\nconst type = zwitch('type', {\n  // @ts-expect-error: hush.\n  unknown: unknownType,\n  invalid: invalidType,\n  // @ts-expect-error: hush.\n  handlers: {selectors, ruleSet, rule}\n})\n\n/**\n * @param {Selectors|RuleSet|Rule} query\n * @param {Node|undefined} node\n * @param {SelectState} state\n * @returns {Array.<Node>}\n */\nexport function any(query, node, state) {\n  // @ts-expect-error: fine.\n  return query && node ? type(query, node, state) : []\n}\n\n/**\n * @param {Selectors} query\n * @param {Node} node\n * @param {SelectState} state\n */\nfunction selectors(query, node, state) {\n  const collect = collector(state.one)\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    collect(ruleSet(query.selectors[index], node, state))\n  }\n\n  return collect.result\n}\n\n/**\n * @param {RuleSet} query\n * @param {Node} node\n * @param {SelectState} state\n */\nfunction ruleSet(query, node, state) {\n  return rule(query.rule, node, state)\n}\n\n/**\n * @param {Rule} query\n * @param {Node} tree\n * @param {SelectState} state\n */\nfunction rule(query, tree, state) {\n  const collect = collector(state.one)\n\n  if (state.shallow && query.rule) {\n    throw new Error('Expected selector without nesting')\n  }\n\n  nest(\n    query,\n    tree,\n    0,\n    null,\n    configure(query, {\n      scopeNodes: root(tree) ? tree.children : [tree],\n      index: false,\n      iterator,\n      one: state.one,\n      shallow: state.shallow,\n      any: state.any\n    })\n  )\n\n  return collect.result\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    if (test(query, node, index, parent, state)) {\n      if (query.rule) {\n        nest(query.rule, node, index, parent, configure(query.rule, state))\n      } else {\n        collect(node)\n        state.found = true\n      }\n    }\n  }\n}\n\n/**\n * @template {SelectState} S\n * @param {Rule} query\n * @param {S} state\n * @returns {S}\n */\nfunction configure(query, state) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    if (pseudo.needsIndex.includes(pseudos[index].name)) {\n      state.index = true\n      break\n    }\n  }\n\n  return state\n}\n\n// Shouldn’t be invoked, all data is handled.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownType(query) {\n  throw new Error('Unknown type `' + query.type + '`')\n}\n\n// Shouldn’t be invoked, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidType() {\n  throw new Error('Invalid type')\n}\n\n/**\n * @param {boolean|undefined} one\n */\nfunction collector(one) {\n  /** @type {Array.<Node>} */\n  const result = []\n  /** @type {boolean} */\n  let found\n\n  collect.result = result\n\n  return collect\n\n  /**\n   * Append nodes to array, filtering out duplicates.\n   *\n   * @param {Node|Array.<Node>} node\n   */\n  function collect(node) {\n    let index = -1\n\n    if ('length' in node) {\n      while (++index < node.length) {\n        collectOne(node[index])\n      }\n    } else {\n      collectOne(node)\n    }\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function collectOne(node) {\n    if (one) {\n      /* Shouldn’t happen, safeguards performance problems. */\n      /* c8 ignore next */\n      if (found) throw new Error('Cannot collect multiple nodes')\n\n      found = true\n    }\n\n    if (!result.includes(node)) result.push(node)\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\n// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nvar whitespace = new Set([9, 10, 12, 13, 32]);\nvar ZERO = \"0\".charCodeAt(0);\nvar NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nfunction parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    var idx = 0;\n    var a = 0;\n    var sign = readSign();\n    var number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(\"n-th rule couldn't be parsed ('\" + formula + \"')\");\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        var start = idx;\n        var value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\nexports.parse = parse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = void 0;\nvar boolbase_1 = require(\"boolbase\");\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction compile(parsed) {\n    var a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    var b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase_1.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return function (index) { return index <= b; };\n    if (a === 0)\n        return function (index) { return index === b; };\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase_1.trueFunc : function (index) { return index >= b; };\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    var absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    var bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? function (index) { return index >= b && index % absA === bMod; }\n        : function (index) { return index <= b && index % absA === bMod; };\n}\nexports.compile = compile;\n","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = exports.parse = void 0;\nvar parse_1 = require(\"./parse\");\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parse_1.parse; } });\nvar compile_1 = require(\"./compile\");\nObject.defineProperty(exports, \"compile\", { enumerable: true, get: function () { return compile_1.compile; } });\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of `parse` and `compile`.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n    return (0, compile_1.compile)((0, parse_1.parse)(formula));\n}\nexports.default = nthCheck;\n","/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n */\nfunction selectors(query) {\n  const selectors = query.selectors\n  let index = -1\n\n  while (++index < selectors.length) {\n    compile(selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n  /** @type {RulePseudo|RulePseudoNth} */\n  let pseudo\n\n  while (++index < pseudos.length) {\n    pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\nimport {any} from './lib/any.js'\nimport {parse} from './lib/parse.js'\n\n/**\n * @param {string} selector\n * @param {Node} [node]\n * @returns {boolean}\n */\nexport function matches(selector, node) {\n  return Boolean(any(parse(selector), node, {one: true, shallow: true, any})[0])\n}\n\n/**\n * @param {string} selector\n * @param {Node} [node]\n * @returns {Node|null}\n */\nexport function select(selector, node) {\n  return any(parse(selector), node, {one: true, any})[0] || null\n}\n\n/**\n * @param {string} selector\n * @param {Node} [node]\n * @returns {Array.<Node>}\n */\nexport function selectAll(selector, node) {\n  return any(parse(selector), node, {any})\n}\n","import { MarkdownParseState } from './fromMarkdown';\nimport type { Root } from 'mdast';\nimport { Spec, Token, Container, Admonition, AdmonitionKind } from './types';\nimport { visit } from 'unist-util-visit';\nimport { remove } from 'unist-util-remove';\nimport { u } from 'unist-builder';\nimport he from 'he';\nimport { GenericNode } from '.';\nimport {\n  admonitionKindToTitle,\n  normalizeLabel,\n  setTextAsChild,\n  withoutTrailingNewline,\n} from './utils';\nimport { map } from 'unist-util-map';\nimport { findAfter } from 'unist-util-find-after';\nimport { selectAll } from 'unist-util-select';\n\nexport type Options = {\n  handlers?: Record<string, Spec>;\n  hoistSingleImagesOutofParagraphs?: boolean;\n  nestBlocks?: boolean;\n};\n\nconst NUMBERED_CLASS = /^numbered$/;\nconst ALIGN_CLASS = /(?:(?:align-)|^)(left|right|center)/;\n\nfunction getClassName(token: Token, exclude?: RegExp[]): string | undefined {\n  const allClasses = new Set([\n    // Grab the trimmed classes from the token\n    ...(token.attrGet('class') ?? '')\n      .split(' ')\n      .map((c) => c.trim())\n      .filter((c) => c),\n    // Add any from the meta information (these are often repeated)\n    ...(token.meta?.class ?? []),\n  ]);\n  const className: string = [...allClasses].join(' ');\n  if (!className) return undefined;\n  return (\n    className\n      .split(' ')\n      .map((c) => c.trim())\n      .filter((c) => {\n        if (!c) return false;\n        if (!exclude) return true;\n        return !exclude.reduce(\n          (doExclude, test) => doExclude || !!c.match(test),\n          false,\n        );\n      })\n      .join(' ') || undefined\n  );\n}\n\nfunction hasClassName(token: Token, matcher: RegExp): false | RegExpMatchArray {\n  const className = getClassName(token);\n  if (!className) return false;\n  const matches = className\n    .split(' ')\n    .map((c) => c.match(matcher))\n    .filter((c) => c);\n  if (matches.length === 0) return false;\n  return matches[0] as RegExpMatchArray;\n}\n\nfunction getLang(t: Token) {\n  return he.decode(t.info).trim().split(' ')[0].replace('\\\\', '');\n}\n\nfunction getColAlign(t: Token) {\n  if (t.attrs?.length) {\n    for (const attrPair of t.attrs) {\n      if (attrPair[0] === 'style') {\n        const match = attrPair[1].match(/text-align:(left|right|center)/);\n        if (match) {\n          return match[1];\n        }\n      }\n    }\n  }\n}\n\nconst defaultMdast: Record<string, Spec> = {\n  heading: {\n    type: 'heading',\n    getAttrs(token) {\n      return { depth: Number(token.tag[1]) };\n    },\n  },\n  hr: {\n    type: 'thematicBreak',\n    noCloseToken: true,\n    isLeaf: true,\n  },\n  paragraph: {\n    type: 'paragraph',\n  },\n  blockquote: {\n    type: 'blockquote',\n  },\n  ordered_list: {\n    type: 'list',\n    getAttrs(token, tokens, index) {\n      const info = tokens[index + 1]?.info;\n      const start = Number(tokens[index + 1]?.info);\n      return {\n        ordered: true,\n        start: isNaN(start) || !info ? 1 : start,\n        spread: false,\n      };\n    },\n  },\n  bullet_list: {\n    type: 'list',\n    attrs: {\n      ordered: false,\n      spread: false,\n    },\n  },\n  list_item: {\n    type: 'listItem',\n    attrs: {\n      spread: true,\n    },\n  },\n  em: {\n    type: 'emphasis',\n  },\n  strong: {\n    type: 'strong',\n  },\n  fence: {\n    type: 'code',\n    isLeaf: true,\n    getAttrs(t) {\n      const name = t.meta?.name || undefined;\n      const showLineNumbers = !!(\n        t.meta?.linenos ||\n        t.meta?.linenos === null || // Weird docutils implementation\n        t.meta?.['number-lines']\n      );\n      const lineno = t.meta?.['lineno-start'] ?? t.meta?.['number-lines'];\n      const startingLineNumber =\n        lineno && lineno !== 1 && !isNaN(Number(lineno)) ? Number(lineno) : undefined;\n      const emphasizeLines = t.meta?.['emphasize-lines']\n        ? t.meta?.['emphasize-lines']\n            .split(',')\n            .map((n: string) => Number(n.trim()))\n            .filter((n: number) => !isNaN(n) && n > 0)\n        : undefined;\n\n      return {\n        lang: getLang(t),\n        ...normalizeLabel(name),\n        class: getClassName(t),\n        showLineNumbers: showLineNumbers || undefined, // Only add to MDAST if true\n        startingLineNumber: showLineNumbers ? startingLineNumber : undefined, // Only if showing line numbers!\n        emphasizeLines,\n        value: withoutTrailingNewline(t.content),\n      };\n    },\n  },\n  code_block: {\n    type: 'code',\n    isLeaf: true,\n    getAttrs(t) {\n      return { lang: getLang(t), value: withoutTrailingNewline(t.content) };\n    },\n  },\n  code_inline: {\n    type: 'inlineCode',\n    noCloseToken: true,\n    isText: true,\n  },\n  hardbreak: {\n    type: 'break',\n    noCloseToken: true,\n    isLeaf: true,\n  },\n  link: {\n    type: 'link',\n    getAttrs(token) {\n      return {\n        url: token.attrGet('href'),\n        title: token.attrGet('title') ?? undefined,\n      };\n    },\n  },\n  image: {\n    type: 'image',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(token) {\n      const alt =\n        token.attrGet('alt') || token.children?.reduce((i, t) => i + t?.content, '');\n      const alignMatch = hasClassName(token, ALIGN_CLASS);\n      const align = alignMatch ? alignMatch[1] : undefined;\n      return {\n        url: token.attrGet('src'),\n        alt: alt || undefined,\n        title: token.attrGet('title') || undefined,\n        class: getClassName(token, [ALIGN_CLASS]),\n        width: token.attrGet('width') || undefined,\n        align,\n      };\n    },\n  },\n  abbr: {\n    type: 'abbreviation',\n    getAttrs(token) {\n      const value = token.children?.[0]?.content;\n      return {\n        title: token.attrGet('title') ?? undefined,\n        value,\n      };\n    },\n  },\n  sub: {\n    type: 'subscript',\n  },\n  sup: {\n    type: 'superscript',\n  },\n  dl: {\n    type: 'definitionList',\n  },\n  dt: {\n    type: 'definitionTerm',\n  },\n  dd: {\n    type: 'definitionDescription',\n  },\n  admonition: {\n    type: 'admonition',\n    getAttrs(token) {\n      const kind = token.meta?.kind || undefined;\n      return {\n        kind,\n        class: getClassName(token, [new RegExp(`admonition|${kind}`)]),\n      };\n    },\n  },\n  admonition_title: {\n    type: 'admonitionTitle',\n  },\n  figure: {\n    type: 'container',\n    getAttrs(token): Container {\n      const name = token.meta?.name || undefined;\n      return {\n        kind: 'figure',\n        ...normalizeLabel(name),\n        numbered: name ? true : undefined,\n        class: getClassName(token, [NUMBERED_CLASS]),\n      };\n    },\n  },\n  figure_caption: {\n    type: 'caption',\n  },\n  table: {\n    type: 'table',\n    getAttrs(token) {\n      const name = token.meta?.name || undefined;\n      return {\n        kind: undefined,\n        ...normalizeLabel(name),\n        numbered: name ? true : undefined,\n        class: getClassName(token, [NUMBERED_CLASS, ALIGN_CLASS]),\n        align: token.meta?.align || undefined,\n      };\n    },\n  },\n  table_caption: {\n    type: 'caption',\n  },\n  thead: {\n    type: '_lift',\n  },\n  tbody: {\n    type: '_lift',\n  },\n  tr: {\n    type: 'tableRow',\n  },\n  th: {\n    type: 'tableCell',\n    getAttrs(t) {\n      return { header: true, align: getColAlign(t) || undefined };\n    },\n  },\n  td: {\n    type: 'tableCell',\n    getAttrs(t) {\n      return { align: getColAlign(t) || undefined };\n    },\n  },\n  math_inline: {\n    type: 'inlineMath',\n    noCloseToken: true,\n    isText: true,\n  },\n  math_inline_double: {\n    type: 'math',\n    noCloseToken: true,\n    isText: true,\n  },\n  math_block: {\n    type: 'math',\n    noCloseToken: true,\n    isText: true,\n    getAttrs(t) {\n      const name = t.info || undefined;\n      return { ...normalizeLabel(name) };\n    },\n  },\n  math_block_label: {\n    type: 'math',\n    noCloseToken: true,\n    isText: true,\n    getAttrs(t) {\n      const name = t.info || undefined;\n      return { ...normalizeLabel(name) };\n    },\n  },\n  amsmath: {\n    type: 'math',\n    noCloseToken: true,\n    isText: true,\n  },\n  ref: {\n    type: 'contentReference',\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        kind: t.meta?.kind,\n        ...normalizeLabel(t.meta?.label),\n        value: t.meta?.value || undefined,\n      };\n    },\n  },\n  footnote_ref: {\n    type: 'footnoteReference',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        ...normalizeLabel(t?.meta?.label),\n      };\n    },\n  },\n  footnote_anchor: {\n    type: '_remove',\n    noCloseToken: true,\n  },\n  footnote_block: {\n    // The footnote block is a view concern, not AST\n    // Lift footnotes out of the tree\n    type: '_lift',\n  },\n  footnote: {\n    type: 'footnoteDefinition',\n    getAttrs(t) {\n      return {\n        ...normalizeLabel(t?.meta?.label),\n      };\n    },\n  },\n  directive: {\n    type: 'directive',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        kind: t.info,\n        args: t?.meta?.arg || undefined,\n        value: t.content.trim(),\n      };\n    },\n  },\n  directive_error: {\n    type: 'directiveError',\n    noCloseToken: true,\n  },\n  role: {\n    type: 'role',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        kind: t.meta?.name,\n        value: t.content,\n      };\n    },\n  },\n  role_error: {\n    type: 'roleError',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        value: t.content,\n      };\n    },\n  },\n  myst_target: {\n    type: '_headerTarget',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return { ...normalizeLabel(t.content) };\n    },\n  },\n  html_inline: {\n    type: 'html',\n    noCloseToken: true,\n    isText: true,\n  },\n  html_block: {\n    type: 'html',\n    noCloseToken: true,\n    isText: true,\n  },\n  myst_block_break: {\n    type: 'block',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        meta: t.content || undefined,\n      };\n    },\n  },\n  myst_line_comment: {\n    type: 'comment',\n    noCloseToken: true,\n    isLeaf: true,\n    getAttrs(t) {\n      return {\n        value: t.content.trim() || undefined,\n      };\n    },\n  },\n};\n\nfunction hoistSingleImagesOutofParagraphs(tree: Root) {\n  // Hoist up all paragraphs with a single image\n  visit(tree, 'paragraph', (node) => {\n    if (!(node.children?.length === 1 && node.children?.[0].type === 'image')) return;\n    const child = node.children[0];\n    Object.keys(node).forEach((k) => {\n      delete (node as any)[k];\n    });\n    Object.assign(node, child);\n  });\n}\n\nconst defaultOptions: Options = {\n  handlers: defaultMdast,\n  hoistSingleImagesOutofParagraphs: true,\n  nestBlocks: true,\n};\n\nexport function tokensToMyst(tokens: Token[], options = defaultOptions): Root {\n  const opts = {\n    ...defaultOptions,\n    ...options,\n    handlers: { ...defaultOptions.handlers, ...options?.handlers },\n  };\n  const state = new MarkdownParseState(opts.handlers);\n  state.parseTokens(tokens);\n  let tree: Root;\n  do {\n    tree = state.closeNode() as Root;\n  } while (state.stack.length);\n\n  // Remove all redundant nodes marked for removal\n  remove(tree, '_remove');\n\n  // Lift up all nodes that are named \"lift\"\n  tree = map(tree, (node: GenericNode) => {\n    const children = node.children\n      ?.map((child: GenericNode) => {\n        if (child.type === '_lift' && child.children) return child.children;\n        return child;\n      })\n      ?.flat();\n    node.children = children;\n    return node;\n  }) as Root;\n\n  // Remove unnecessary admonition titles from AST\n  // These are up to the serializer to put in\n  visit(tree, 'admonition', (node: Admonition) => {\n    const { kind, children } = node;\n    if (!kind || !children || kind === AdmonitionKind.admonition) return;\n    const expectedTitle = admonitionKindToTitle(kind);\n    const titleNode = children[0];\n    if (\n      titleNode.type === 'admonitionTitle' &&\n      titleNode.children?.[0]?.value === expectedTitle\n    )\n      node.children = children.slice(1);\n  });\n\n  // Move contentReference text value to children\n  visit(tree, 'contentReference', (node: GenericNode) => {\n    delete node.children;\n    if (node.value) {\n      setTextAsChild(node, node.value);\n      delete node.value;\n    }\n  });\n\n  // Add target values as identifiers to subsequent node\n  visit(tree, '_headerTarget', (node: GenericNode) => {\n    const nextNode = findAfter(tree, node) as GenericNode;\n    if (nextNode) {\n      nextNode.identifier = node.identifier;\n      nextNode.label = node.label;\n    }\n  });\n  remove(tree, '_headerTarget');\n\n  // Nest block content inside of a block\n  if (opts.nestBlocks) {\n    const newTree = u('root', [] as GenericNode[]);\n    let lastBlock: GenericNode | undefined;\n    const pushBlock = () => {\n      if (!lastBlock) return;\n      if (lastBlock.children?.length === 0) {\n        delete lastBlock.children;\n      }\n      newTree.children.push(lastBlock);\n    };\n    (tree as GenericNode).children?.map((node) => {\n      if (node.type === 'block') {\n        pushBlock();\n        lastBlock = node;\n        node.children = node.children ?? [];\n        return;\n      }\n      const stack = lastBlock ? lastBlock : newTree;\n      stack.children?.push(node);\n    });\n    pushBlock();\n    tree = newTree as Root;\n  }\n\n  // Ensure caption content is nested in a paragraph\n  visit(tree, 'caption', (node: GenericNode) => {\n    if (node.children && node.children[0].type !== 'paragraph') {\n      node.children = [{ type: 'paragraph', children: node.children }];\n    }\n  });\n\n  // Replace \"table node with caption\" with \"figure node with table and caption\"\n  // TODO: Clean up when we update to typescript > 4.6.2 and we have access to\n  //       parent in visitor function.\n  //       i.e. visit(tree, 'table', (node, index parent) => {...})\n  //       https://github.com/microsoft/TypeScript/issues/46900\n\n  selectAll('table', tree).map((node: GenericNode) => {\n    const captionChildren = node.children?.filter(\n      (n: GenericNode) => n.type === 'caption',\n    );\n    if (captionChildren?.length) {\n      const tableChildren = node.children?.filter(\n        (n: GenericNode) => n.type !== 'caption',\n      );\n      const newTableNode: GenericNode = {\n        type: 'table',\n        align: node.align,\n        children: tableChildren,\n      };\n      node.type = 'container';\n      node.kind = 'table';\n      node.children = [...captionChildren, newTableNode];\n      delete node.align;\n    }\n  });\n\n  if (opts.hoistSingleImagesOutofParagraphs) hoistSingleImagesOutofParagraphs(tree);\n\n  return tree;\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * Function called with a node to produce a new node.\n *\n * @callback MapFunction\n * @param {Node} node Current node being processed\n * @param {number} [index] Index of `node`, or `null`\n * @param {Parent} [parent] Parent of `node`, or `null`\n * @returns {Node} Node to be used in the new tree. Its children are not used: if the original node has children, those are mapped.\n */\n\n/**\n * Unist utility to create a new tree by mapping all nodes with the given function.\n *\n * @param {Node} tree Tree to map\n * @param {MapFunction} iteratee Function that returns a new node\n * @returns {Node} New mapped tree.\n */\nexport function map(tree, iteratee) {\n  return preorder(tree, null, null)\n\n  /**\n   * @param {Node} node\n   * @param {number} [index]\n   * @param {Parent} [parent]\n   * @returns {Node}\n   */\n  function preorder(node, index, parent) {\n    var newNode = Object.assign({}, iteratee(node, index, parent))\n\n    if (node.children) {\n      // @ts-ignore Looks like a parent.\n      newNode.children = node.children.map(function (\n        /** @type {Node} */ child,\n        /** @type {number} */ index\n      ) {\n        // @ts-ignore Looks like a parent.\n        return preorder(child, index, node)\n      })\n    }\n\n    return newNode\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef Options Configuration.\n * @property {Test} [ignore] `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Extract<Node, import('mdast').Parent>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Object.<string, Replace>} FindAndReplaceSchema\n * @typedef {Array.<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array.<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array.<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents').Visitor<Text>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, grandparent)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {Parent} parent\n       * @returns {VisitorResult}\n       */\n      function handler(node, parent) {\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        let index = parent.children.indexOf(node)\n        /** @type {Array.<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          // @ts-expect-error this is perfectly fine, typescript.\n          let value = replace(...match, {\n            index: match.index,\n            input: match.input\n          })\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (position === undefined) {\n          nodes = [node]\n          index--\n        } else {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        }\n\n        return index + nodes.length + 1\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","import { Content, Root } from 'mdast';\nimport { visit } from 'unist-util-visit';\nimport { select, selectAll } from 'unist-util-select';\nimport { findAndReplace } from 'mdast-util-find-and-replace';\nimport { GenericNode } from '.';\nimport { normalizeLabel, setTextAsChild } from './utils';\n\nexport enum TargetKind {\n  heading = 'heading',\n  math = 'math',\n  figure = 'figure',\n  table = 'table',\n  code = 'code',\n}\n\nexport enum ReferenceKind {\n  ref = 'ref',\n  numref = 'numref',\n  eq = 'eq',\n}\n\ntype Target = {\n  node: GenericNode;\n  kind: TargetKind;\n  number: string;\n};\n\n/**\n * See https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html#role-numref\n */\nfunction fillReferenceNumbers(node: GenericNode, number: string | number) {\n  const num = String(number);\n  findAndReplace(node as Content, { '%s': num, '{number}': num });\n}\n\nfunction copyNode(node: GenericNode): GenericNode {\n  return JSON.parse(JSON.stringify(node));\n}\n\nexport class State {\n  targets: Record<string, Target>;\n  targetCounts: Record<string, number>;\n\n  constructor(targetCounts?: Record<string, number>, targets?: Record<string, Target>) {\n    this.targetCounts = targetCounts || {};\n    this.targets = targets || {};\n  }\n\n  addTarget(node: GenericNode) {\n    const kind: string | undefined = node.type === 'container' ? node.kind : node.type;\n    node = copyNode(node);\n    if (kind && kind in TargetKind && node.identifier) {\n      if (kind === TargetKind.heading) {\n        this.targets[node.identifier] = { node, kind, number: '' };\n      } else {\n        this.targets[node.identifier] = {\n          node,\n          kind: kind as TargetKind,\n          number: String(this.incrementCount(kind)),\n        };\n      }\n    }\n  }\n\n  incrementCount(kind: string): number {\n    if (kind in this.targetCounts) {\n      this.targetCounts[kind] += 1;\n    } else {\n      this.targetCounts[kind] = 1;\n    }\n    return this.targetCounts[kind];\n  }\n\n  getTarget(identifier?: string): Target | undefined {\n    if (!identifier) return undefined;\n    return this.targets[identifier];\n  }\n\n  resolveReferenceContent(node: GenericNode): GenericNode['children'] | undefined {\n    const target = this.getTarget(node.identifier);\n    if (!target) {\n      return;\n    }\n    const kinds = {\n      ref: {\n        eq: node.kind === ReferenceKind.eq,\n        ref: node.kind === ReferenceKind.ref,\n        numref: node.kind === ReferenceKind.numref,\n      },\n      target: {\n        math: target.kind === TargetKind.math,\n        figure: target.kind === TargetKind.figure,\n        table: target.kind === TargetKind.table,\n        heading: target.kind === TargetKind.heading,\n      },\n    };\n    const noNodeChildren = !node.children?.length;\n    if (kinds.ref.eq && kinds.target.math) {\n      if (noNodeChildren) {\n        setTextAsChild(node, `(${target.number})`);\n      }\n      node.resolved = true;\n    } else if (kinds.ref.ref && kinds.target.heading) {\n      if (noNodeChildren) {\n        node.children = copyNode(target.node).children;\n      }\n      node.resolved = true;\n    } else if (kinds.ref.ref && (kinds.target.figure || kinds.target.table)) {\n      if (noNodeChildren) {\n        const caption = select('caption > paragraph', target.node) as GenericNode;\n        node.children = copyNode(caption).children;\n      }\n      node.resolved = true;\n    } else if (kinds.ref.numref && kinds.target.figure) {\n      if (noNodeChildren) {\n        setTextAsChild(node, 'Figure %s');\n      }\n      fillReferenceNumbers(node, target.number);\n      node.resolved = true;\n    } else if (kinds.ref.numref && kinds.target.table) {\n      if (noNodeChildren) {\n        setTextAsChild(node, 'Table %s');\n      }\n      fillReferenceNumbers(node, target.number);\n      node.resolved = true;\n    }\n  }\n}\n\nexport const countState = (state: State, tree: Root) => {\n  visit(tree, 'container', (node: GenericNode) => state.addTarget(node));\n  visit(tree, 'math', (node: GenericNode) => state.addTarget(node));\n  visit(tree, 'heading', (node) => state.addTarget(node as GenericNode));\n  return tree;\n};\n\nexport const referenceState = (state: State, tree: Root) => {\n  selectAll('link', tree).map((node: GenericNode) => {\n    const reference = normalizeLabel(node.url);\n    if (reference && reference.identifier in state.targets) {\n      node.type = 'contentReference';\n      node.kind =\n        state.targets[reference.identifier].kind === TargetKind.math ? 'eq' : 'ref';\n      node.identifier = reference.identifier;\n      node.label = reference.label;\n      delete node.url;\n    }\n  });\n  visit(tree, 'contentReference', (node: GenericNode) => {\n    state.resolveReferenceContent(node);\n  });\n};\n","import { Root } from 'mdast';\nimport { Plugin } from 'unified';\nimport { visit } from 'unist-util-visit';\nimport { select, selectAll } from 'unist-util-select';\nimport { Admonition, AdmonitionKind, GenericNode } from './types';\nimport { admonitionKindToTitle } from './utils';\nimport { State, countState, referenceState } from './state';\n\nexport type Options = {\n  addAdmonitionHeaders?: boolean;\n  addContainerCaptionNumbers?: boolean;\n};\n\nconst defaultOptions: Record<keyof Options, true> = {\n  addAdmonitionHeaders: true,\n  addContainerCaptionNumbers: true,\n};\n\n// Visit all admonitions and add headers if necessary\nexport function addAdmonitionHeaders(tree: Root) {\n  visit(tree, 'admonition', (node: Admonition) => {\n    if (!node.kind || node.kind === AdmonitionKind.admonition) return;\n    node.children = [\n      {\n        type: 'admonitionTitle',\n        children: [{ type: 'text', value: admonitionKindToTitle(node.kind) }],\n      },\n      ...(node.children ?? []),\n    ];\n  });\n}\n\n// Visit all containers and add captions\nexport function addContainerCaptionNumbers(tree: Root, state: State) {\n  selectAll('container[numbered=true]', tree).forEach((container: GenericNode) => {\n    const number = state.getTarget(container.identifier)?.number;\n    const para = select('caption > paragraph', container) as GenericNode;\n    if (number && para) {\n      para.children = [\n        { type: 'captionNumber', kind: container.kind, value: number },\n        ...(para?.children ?? []),\n      ];\n    }\n  });\n}\n\nexport const transform: Plugin<[State, Options?], string, Root> =\n  (state, o) => (tree: Root) => {\n    const opts = {\n      ...defaultOptions,\n      ...o,\n    };\n    countState(state, tree);\n    referenceState(state, tree);\n    if (opts.addAdmonitionHeaders) addAdmonitionHeaders(tree);\n    if (opts.addContainerCaptionNumbers) addContainerCaptionNumbers(tree, state);\n  };\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\nexport var pointStart = point('start')\nexport var pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    /** @type {Point} */\n    // @ts-ignore looks like a point\n    var point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { Root } from 'mdast';\nimport { defaultHandlers, Handler, toHast, all, Options } from 'mdast-util-to-hast';\nimport { u } from 'unist-builder';\nimport classNames from 'classnames';\nimport { AdmonitionKind } from './types';\nimport { Plugin } from 'unified';\nimport type { ElementContent, Properties } from 'hast';\n\nconst abbreviation: Handler = (h, node) =>\n  h(node, 'abbr', { title: node.title }, all(h, node));\n\nconst subscript: Handler = (h, node) => h(node, 'sub', all(h, node));\nconst superscript: Handler = (h, node) => h(node, 'sup', all(h, node));\nconst image: Handler = (h, node) =>\n  h(node, 'img', {\n    src: node.url,\n    alt: node.alt,\n    title: node.title,\n    class: classNames(node.align ? `align-${node.align}` : '', node.class) || undefined,\n    width: node.width,\n  });\nconst caption: Handler = (h, node) => h(node, 'figcaption', all(h, node));\nconst container: Handler = (h, node) =>\n  h(\n    node,\n    'figure',\n    {\n      id: node.identifier || node.label || undefined,\n      class: classNames({ numbered: node.numbered }, node.class) || undefined,\n    },\n    all(h, node),\n  );\n\nconst admonitionTitle: Handler = (h, node) =>\n  h(node, 'p', { class: 'admonition-title' }, all(h, node));\n\nconst admonition: Handler = (h, node) =>\n  h(\n    node,\n    'aside',\n    {\n      class: classNames({\n        [node.class]: node.class, // The custom class is first!!\n        admonition: true,\n        [node.kind]: node.kind && node.kind !== AdmonitionKind.admonition,\n      }),\n    },\n    all(h, node),\n  );\n\nconst captionNumber: Handler = (h, node) => {\n  const captionKind = node.kind?.charAt(0).toUpperCase() + node.kind?.slice(1);\n  return h(node, 'span', { class: 'caption-number' }, [\n    u('text', `${captionKind} ${node.value}`),\n  ]);\n};\n\nconst math: Handler = (h, node) => {\n  const attrs = { id: node.identifier || undefined, class: 'math block' };\n  if (node.value.indexOf('\\n') !== -1) {\n    const math = h(node, 'div', attrs, [u('text', node.value)]);\n    return h(node, 'pre', [math]);\n  }\n  return h(node, 'div', attrs, [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))]);\n};\n\nconst inlineMath: Handler = (h, node) => {\n  return h(node, 'span', { class: 'math inline' }, [\n    u('text', node.value.replace(/\\r?\\n|\\r/g, ' ')),\n  ]);\n};\n\nconst definitionList: Handler = (h, node) => h(node, 'dl', all(h, node));\nconst definitionTerm: Handler = (h, node) => h(node, 'dt', all(h, node));\nconst definitionDescription: Handler = (h, node) => h(node, 'dd', all(h, node));\n\nconst role: Handler = (h, node) => {\n  return h(node, 'span', { class: 'role unhandled' }, [\n    h(node, 'code', { class: 'kind' }, [u('text', `{${node.kind}}`)]),\n    h(node, 'code', {}, [u('text', node.value)]),\n  ]);\n};\n\nconst directive: Handler = (h, node) => {\n  let directiveElements: ElementContent[] = [\n    h(node, 'code', { class: 'kind' }, [u('text', `{${node.kind}}`)]),\n  ];\n  if (node.args) {\n    directiveElements = directiveElements.concat([\n      u('text', ' '),\n      h(node, 'code', { class: 'args' }, [u('text', node.args)]),\n    ]);\n  }\n  return h(node, 'div', { class: 'directive unhandled' }, [\n    h(node, 'p', {}, directiveElements),\n    h(node, 'pre', [h(node, 'code', [u('text', node.value)])]),\n  ]);\n};\n\nconst block: Handler = (h, node) =>\n  h(node, 'div', { class: 'block', 'data-block': node.meta }, all(h, node));\n\nconst comment: Handler = (h, node) => u('comment', node.value);\n\nconst heading: Handler = (h, node) =>\n  h(node, `h${node.depth}`, { id: node.identifier || undefined }, all(h, node));\n\nconst contentReference: Handler = (h, node) => {\n  if (node.resolved) {\n    return h(\n      node,\n      'a',\n      { href: `#${node.identifier}`, title: node.title || undefined },\n      all(h, node),\n    );\n  } else {\n    return h(node, 'span', { class: 'reference role unhandled' }, [\n      h(node, 'code', { class: 'kind' }, [u('text', `{${node.kind}}`)]),\n      h(node, 'code', {}, [u('text', node.identifier)]),\n    ]);\n  }\n};\n\n// TODO: The defaultHandler treats the first row (and only the first row)\n//       header; the mdast `tableCell.header` property is not respected.\n//       For that, we need to entirely rewrite this handler.\nconst table: Handler = (h, node) => {\n  node.data = { hProperties: { align: node.align } };\n  delete node.align;\n  return defaultHandlers.table(h, node);\n};\n\nconst code: Handler = (h, node) => {\n  const value = node.value ? node.value + '\\n' : '';\n  const props: Properties = {};\n  if (node.identifier) {\n    props.id = node.identifier;\n  }\n  props.className =\n    classNames({ ['language-' + node.lang]: node.lang }, node.class) || undefined;\n  const code = h(node, 'code', props, [u('text', value)]);\n  return h(node.position, 'pre', [code]);\n};\n\nexport const mystToHast: Plugin<[Options?], string, Root> = (opts) => (tree: Root) => {\n  return toHast(tree, {\n    ...opts,\n    handlers: {\n      admonition,\n      admonitionTitle,\n      container,\n      image,\n      caption,\n      captionNumber,\n      abbreviation,\n      subscript,\n      superscript,\n      math,\n      inlineMath,\n      definitionList,\n      definitionTerm,\n      definitionDescription,\n      role,\n      directive,\n      block,\n      comment,\n      heading,\n      contentReference,\n      code,\n      table,\n      ...opts?.handlers,\n    },\n  });\n};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Element & {tagName: 'audio'|'canvas'|'embed'|'iframe'|'img'|'math'|'object'|'picture'|'svg'|'video'}} Embedded\n * @typedef {import('hast-util-is-element').AssertPredicate<Embedded>} AssertEmbedded\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * Check if a node is an embedded element.\n * @type {AssertEmbedded}\n */\n// @ts-ignore Sure, the assertion matches.\nexport const embedded = convertElement([\n  'audio',\n  'canvas',\n  'embed',\n  'iframe',\n  'img',\n  'math',\n  'object',\n  'picture',\n  'svg',\n  'video'\n])\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nexport const blocks = [\n  'address', // Flow content.\n  'article', // Sections and headings.\n  'aside', // Sections and headings.\n  'blockquote', // Flow content.\n  'body', // Page.\n  'br', // Contribute whitespace intrinsically.\n  'caption', // Similar to block.\n  'center', // Flow content, legacy.\n  'col', // Similar to block.\n  'colgroup', // Similar to block.\n  'dd', // Lists.\n  'dialog', // Flow content.\n  'dir', // Lists, legacy.\n  'div', // Flow content.\n  'dl', // Lists.\n  'dt', // Lists.\n  'figcaption', // Flow content.\n  'figure', // Flow content.\n  'footer', // Flow content.\n  'form', // Flow content.\n  'h1', // Sections and headings.\n  'h2', // Sections and headings.\n  'h3', // Sections and headings.\n  'h4', // Sections and headings.\n  'h5', // Sections and headings.\n  'h6', // Sections and headings.\n  'head', // Page.\n  'header', // Flow content.\n  'hgroup', // Sections and headings.\n  'hr', // Flow content.\n  'html', // Page.\n  'legend', // Flow content.\n  'li', // Block-like.\n  'li', // Similar to block.\n  'listing', // Flow content, legacy\n  'main', // Flow content.\n  'menu', // Lists.\n  'nav', // Sections and headings.\n  'ol', // Lists.\n  'optgroup', // Similar to block.\n  'option', // Similar to block.\n  'p', // Flow content.\n  'plaintext', // Flow content, legacy\n  'pre', // Flow content.\n  'section', // Sections and headings.\n  'summary', // Similar to block.\n  'table', // Similar to block.\n  'tbody', // Similar to block.\n  'td', // Block-like.\n  'td', // Similar to block.\n  'tfoot', // Similar to block.\n  'th', // Block-like.\n  'th', // Similar to block.\n  'thead', // Similar to block.\n  'tr', // Similar to block.\n  'ul', // Lists.\n  'wbr', // Contribute whitespace intrinsically.\n  'xmp' // Flow content, legacy\n]\n","export const content = [\n  // Form.\n  'button',\n  'input',\n  'select',\n  'textarea'\n]\n","export const skippable = [\n  'area',\n  'base',\n  'basefont',\n  'dialog',\n  'datalist',\n  'head',\n  'link',\n  'meta',\n  'noembed',\n  'noframes',\n  'param',\n  'rp',\n  'script',\n  'source',\n  'style',\n  'template',\n  'track',\n  'title'\n]\n","/**\n * @fileoverview\n *   Collapse whitespace.\n *\n *   Normally, collapses to a single space.\n *   If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n *   instead of `' '`.\n * @example\n *   <h1>Heading</h1>\n *   <p><strong>This</strong> and <em>that</em></p>\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n * @property {boolean} [newlines=false]\n *   If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n *   instead of `' '`.\n *   The default is to collapse to a single space.\n *\n * @typedef {'pre'|'nowrap'|'pre-wrap'|'normal'} Whitespace\n *\n * @typedef Context\n * @property {ReturnType<collapseFactory>} collapse\n * @property {Whitespace} whitespace\n * @property {boolean} [before]\n * @property {boolean} [after]\n *\n * @typedef Result\n * @property {boolean} remove\n * @property {boolean} ignore\n * @property {boolean} stripAtStart\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {embedded} from 'hast-util-embedded'\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {blocks} from './block.js'\nimport {content as contents} from './content.js'\nimport {skippable as skippables} from './skippable.js'\n\nconst ignorableNode = convert(['doctype', 'comment'])\n\n/**\n * Collapse whitespace.\n *\n * Normally, collapses to a single space.\n * If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n * instead of `' '`.\n *\n * @type {import('unified').Plugin<[Options?] | void[], Root>}\n */\nexport default function rehypeMinifyWhitespace(options = {}) {\n  const collapse = collapseFactory(\n    options.newlines ? replaceNewlines : replaceWhitespace\n  )\n\n  return (tree) => {\n    minify(tree, {collapse, whitespace: 'normal'})\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minify(node, context) {\n  if ('children' in node) {\n    const settings = Object.assign({}, context)\n\n    if (node.type === 'root' || blocklike(node)) {\n      settings.before = true\n      settings.after = true\n    }\n\n    settings.whitespace = inferWhiteSpace(node, context)\n\n    return all(node, settings)\n  }\n\n  if (node.type === 'text') {\n    if (context.whitespace === 'normal') {\n      return minifyText(node, context)\n    }\n\n    // Naïve collapse, but no trimming:\n    if (context.whitespace === 'nowrap') {\n      node.value = context.collapse(node.value)\n    }\n\n    // The `pre-wrap` or `pre` whitespace settings are neither collapsed nor\n    // trimmed.\n  }\n\n  return {remove: false, ignore: ignorableNode(node), stripAtStart: false}\n}\n\n/**\n * @param {Text} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minifyText(node, context) {\n  const value = context.collapse(node.value)\n  const result = {remove: false, ignore: false, stripAtStart: false}\n  let start = 0\n  let end = value.length\n\n  if (context.before && removable(value.charAt(0))) {\n    start++\n  }\n\n  if (start !== end && removable(value.charAt(end - 1))) {\n    if (context.after) {\n      end--\n    } else {\n      result.stripAtStart = true\n    }\n  }\n\n  if (start === end) {\n    result.remove = true\n  } else {\n    node.value = value.slice(start, end)\n  }\n\n  return result\n}\n\n/**\n * @param {Root|Element} parent\n * @param {Context} context\n * @returns {Result}\n */\nfunction all(parent, context) {\n  let before = context.before\n  const after = context.after\n  const children = parent.children\n  let length = children.length\n  let index = -1\n\n  while (++index < length) {\n    const result = minify(\n      children[index],\n      Object.assign({}, context, {\n        before,\n        after: collapsableAfter(children, index, after)\n      })\n    )\n\n    if (result.remove) {\n      children.splice(index, 1)\n      index--\n      length--\n    } else if (!result.ignore) {\n      before = result.stripAtStart\n    }\n\n    // If this element, such as a `<select>` or `<img>`, contributes content\n    // somehow, allow whitespace again.\n    if (content(children[index])) {\n      before = false\n    }\n  }\n\n  return {remove: false, ignore: false, stripAtStart: Boolean(before || after)}\n}\n\n/**\n * @param {Node[]} nodes\n * @param {number} index\n * @param {boolean|undefined} [after]\n * @returns {boolean|undefined}\n */\nfunction collapsableAfter(nodes, index, after) {\n  while (++index < nodes.length) {\n    const node = nodes[index]\n    let result = inferBoundary(node)\n\n    if (result === undefined && 'children' in node && !skippable(node)) {\n      result = collapsableAfter(node.children, -1)\n    }\n\n    if (typeof result === 'boolean') {\n      return result\n    }\n  }\n\n  return after\n}\n\n/**\n * Infer two types of boundaries:\n *\n * 1. `true` — boundary for which whitespace around it does not contribute\n *    anything\n * 2. `false` — boundary for which whitespace around it *does* contribute\n *\n * No result (`undefined`) is returned if it is unknown.\n *\n * @param {Node} node\n * @returns {boolean|undefined}\n */\nfunction inferBoundary(node) {\n  if (node.type === 'element') {\n    if (content(node)) {\n      return false\n    }\n\n    if (blocklike(node)) {\n      return true\n    }\n\n    // Unknown: either depends on siblings if embedded or metadata, or on\n    // children.\n  } else if (node.type === 'text') {\n    if (!whitespace(node)) {\n      return false\n    }\n  } else if (!ignorableNode(node)) {\n    return false\n  }\n}\n\n/**\n * Infer whether a node is skippable.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction content(node) {\n  return embedded(node) || isElement(node, contents)\n}\n\n/**\n * See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\n *\n * @param {Element} node\n * @returns {boolean}\n */\nfunction blocklike(node) {\n  return isElement(node, blocks)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {boolean}\n */\nfunction skippable(node) {\n  return (\n    Boolean(\n      'properties' in node && node.properties && node.properties.hidden\n    ) ||\n    ignorableNode(node) ||\n    isElement(node, skippables)\n  )\n}\n\n/**\n * @param {string} character\n * @returns {boolean}\n */\nfunction removable(character) {\n  return character === ' ' || character === '\\n'\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction replaceNewlines(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * @returns {string}\n */\nfunction replaceWhitespace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction collapseFactory(replace) {\n  return collapse\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function collapse(value) {\n    return String(value).replace(/[\\t\\n\\v\\f\\r ]+/g, replace)\n  }\n}\n\n/**\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Root|Element} node\n * @param {Context} context\n * @returns {Whitespace}\n */\nfunction inferWhiteSpace(node, context) {\n  if ('tagName' in node && node.properties) {\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return node.properties.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return node.properties.noWrap ? 'nowrap' : context.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return context.whitespace\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return tagNameFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return element\n  }\n\n  if (typeof test === 'object') {\n    return any(test)\n  }\n\n  if (typeof test === 'function') {\n    return callFactory(test)\n  }\n\n  throw new Error('Expected function, string, or array as test')\n}\n\nfunction convertAll(tests) {\n  var length = tests.length\n  var index = -1\n  var results = []\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\nfunction any(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string a tag name check.\nfunction tagNameFactory(test) {\n  return tagName\n\n  function tagName(node) {\n    return element(node) && node.tagName === test\n  }\n}\n\n// Utility to convert a function check.\nfunction callFactory(test) {\n  return call\n\n  function call(node) {\n    return element(node) && Boolean(test.apply(this, arguments))\n  }\n}\n\n// Utility to return true if this is an element.\nfunction element(node) {\n  return (\n    node &&\n    typeof node === 'object' &&\n    node.type === 'element' &&\n    typeof node.tagName === 'string'\n  )\n}\n","'use strict'\n\nvar convert = require('./convert')\n\nmodule.exports = isElement\n\nisElement.convert = convert\n\n// Check if if `node` is an `element` and whether it passes the given test.\nfunction isElement(node, test, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index for child node')\n  }\n\n  if (hasParent && (!parent.type || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return check.call(context, node, index, parent)\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = hasProperty\n\n// Check if `node` has a set `name` property.\nfunction hasProperty(node, name) {\n  var props\n  var value\n\n  if (!node || !name || typeof node !== 'object' || node.type !== 'element') {\n    return false\n  }\n\n  props = node.properties\n  value = props && own.call(props, name) && props[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @fileoverview\n *   Check if a `link` element is “Body OK”.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   var h = require('hastscript')\n *   var ok = require('hast-util-is-body-ok-link')\n *\n *   ok(h('link', {itemProp: 'foo'})) //=> true\n *   ok(h('link', {rel: ['stylesheet'], href: 'index.css'})) //=> true\n *   ok(h('link', {rel: ['author'], href: 'index.css'})) //=> false\n *   ```\n *\n *   ## API\n *\n *   ### `isBodyOkLink(node)`\n *\n *   * Return `true` for `link` elements with an `itemProp`\n *   * Return `true` for `link` elements with a `rel` list where one or more\n *     entries are `pingback`, `prefetch`, or `stylesheet`.\n */\n\n'use strict'\n\nvar is = require('hast-util-is-element')\nvar has = require('hast-util-has-property')\n\nmodule.exports = ok\n\nvar list = ['pingback', 'prefetch', 'stylesheet']\n\nfunction ok(node) {\n  var length\n  var index\n  var rel\n\n  if (!is(node, 'link')) {\n    return false\n  }\n\n  if (has(node, 'itemProp')) {\n    return true\n  }\n\n  rel = (node.properties || {}).rel || []\n  length = rel.length\n  index = -1\n\n  if (rel.length === 0) {\n    return false\n  }\n\n  while (++index < length) {\n    if (list.indexOf(rel[index]) === -1) {\n      return false\n    }\n  }\n\n  return true\n}\n","import {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {embedded} from 'hast-util-embedded'\nimport bodyOkLink from 'hast-util-is-body-ok-link'\n\nvar basic = convertElement([\n  'a',\n  'abbr',\n  // `area` is in fact only phrasing if it is inside a `map` element.\n  // However, since `area`s are required to be inside a `map` element, and it’s\n  // a rather involved check, it’s ignored here for now.\n  'area',\n  'b',\n  'bdi',\n  'bdo',\n  'br',\n  'button',\n  'cite',\n  'code',\n  'data',\n  'datalist',\n  'del',\n  'dfn',\n  'em',\n  'i',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'map',\n  'mark',\n  'meter',\n  'noscript',\n  'output',\n  'progress',\n  'q',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'select',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n  'template',\n  'textarea',\n  'time',\n  'u',\n  'var',\n  'wbr'\n])\n\nvar meta = convertElement('meta')\n\n/**\n * @param {unknown} node\n * @returns {boolean}\n */\nexport function phrasing(node) {\n  return (\n    // @ts-ignore Looks like a text.\n    (node && node.type === 'text') ||\n    basic(node) ||\n    embedded(node) ||\n    bodyOkLink(node) ||\n    (meta(node) && hasProperty(node, 'itemProp'))\n  )\n}\n","/**\n * @fileoverview\n *   List of whitespace sensitive HTML tag names\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'\n *\n *   whitespaceSensitiveTagNames\n *   //=> ['pre', 'script', 'style', 'textarea']\n *   ```\n *\n *   ## API\n *\n *   ### `whitespaceSensitiveTagNames`\n *\n *   List of whitespace sensitive HTML tag names (`string[]`).\n */\n\nexport const whitespaceSensitiveTagNames = [\n  'pre',\n  'script',\n  'style',\n  'textarea'\n]\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root['children'][number]} Child\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Child} Node\n *\n * @typedef Options\n *   Configuration.\n * @property {number|string} [indent=2]\n *   Indentation per level (`number`, `string`, default: `2`).\n *   When number, uses that amount of spaces.\n *   When `string`, uses that per indentation level.\n * @property {boolean} [indentInitial=true]\n *   Whether to indent the first level (`boolean`, default: `true`).\n *   This is usually the `<html>`, thus not indenting `head` and `body`.\n * @property {Array<string>} [blanks=[]]\n *   List of tag names to join with a blank line (`Array<string>`, default:\n *   `[]`).\n *   These tags, when next to each other, are joined by a blank line (`\\n\\n`).\n *   For example, when `['head', 'body']` is given, a blank line is added\n *   between these two.\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {visitParents, SKIP} from 'unist-util-visit-parents'\nimport {embedded} from 'hast-util-embedded'\nimport {phrasing} from 'hast-util-phrasing'\nimport {whitespace} from 'hast-util-whitespace'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'\n\nconst minify = rehypeMinifyWhitespace({newlines: true})\n\n/**\n * Format whitespace in HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeFormat(options = {}) {\n  let indent = options.indent || 2\n  let indentInitial = options.indentInitial\n\n  if (typeof indent === 'number') {\n    indent = ' '.repeat(indent)\n  }\n\n  // Default to indenting the initial level.\n  if (indentInitial === null || indentInitial === undefined) {\n    indentInitial = true\n  }\n\n  return (tree) => {\n    /** @type {boolean|undefined} */\n    let head\n\n    // @ts-expect-error: fine, it’s a sync transformer.\n    minify(tree)\n\n    // eslint-disable-next-line complexity\n    visitParents(tree, (node, parents) => {\n      let index = -1\n\n      if (!('children' in node)) {\n        return\n      }\n\n      if (isElement(node, 'head')) {\n        head = true\n      }\n\n      if (head && isElement(node, 'body')) {\n        head = undefined\n      }\n\n      if (isElement(node, whitespaceSensitiveTagNames)) {\n        return SKIP\n      }\n\n      const children = node.children\n      let level = parents.length\n\n      // Don’t indent content of whitespace-sensitive nodes / inlines.\n      if (children.length === 0 || !padding(node, head)) {\n        return\n      }\n\n      if (!indentInitial) {\n        level--\n      }\n\n      /** @type {boolean|undefined} */\n      let eol\n\n      // Indent newlines in `text`.\n      while (++index < children.length) {\n        const child = children[index]\n\n        if (child.type === 'text' || child.type === 'comment') {\n          if (child.value.includes('\\n')) {\n            eol = true\n          }\n\n          child.value = child.value.replace(\n            / *\\n/g,\n            '$&' + String(indent).repeat(level)\n          )\n        }\n      }\n\n      /** @type {Array<Child>} */\n      const result = []\n      /** @type {Child|undefined} */\n      let previous\n\n      index = -1\n\n      while (++index < children.length) {\n        const child = children[index]\n\n        if (padding(child, head) || (eol && !index)) {\n          addBreak(result, level, child)\n          eol = true\n        }\n\n        previous = child\n        result.push(child)\n      }\n\n      if (previous && (eol || padding(previous, head))) {\n        // Ignore trailing whitespace (if that already existed), as we’ll add\n        // properly indented whitespace.\n        if (whitespace(previous)) {\n          result.pop()\n          previous = result[result.length - 1]\n        }\n\n        addBreak(result, level - 1)\n      }\n\n      node.children = result\n    })\n  }\n\n  /**\n   * @param {Array<Child>} list\n   * @param {number} level\n   * @param {Child} [next]\n   * @returns {void}\n   */\n  function addBreak(list, level, next) {\n    const tail = list[list.length - 1]\n    const previous = whitespace(tail) ? list[list.length - 2] : tail\n    const replace =\n      (blank(previous) && blank(next) ? '\\n\\n' : '\\n') +\n      String(indent).repeat(Math.max(level, 0))\n\n    if (tail && tail.type === 'text') {\n      tail.value = whitespace(tail) ? replace : tail.value + replace\n    } else {\n      list.push({type: 'text', value: replace})\n    }\n  }\n\n  /**\n   * @param {Node|undefined} node\n   * @returns {boolean}\n   */\n  function blank(node) {\n    return Boolean(\n      node &&\n        node.type === 'element' &&\n        options.blanks &&\n        options.blanks.length > 0 &&\n        options.blanks.includes(node.tagName)\n    )\n  }\n}\n\n/**\n * @param {Node} node\n * @param {boolean|undefined} head\n * @returns {boolean}\n */\nfunction padding(node, head) {\n  return (\n    node.type === 'root' ||\n    (node.type === 'element'\n      ? head || isElement(node, 'script') || embedded(node) || !phrasing(node)\n      : false)\n  )\n}\n","import { Root } from 'mdast';\nimport rehypeFormat from 'rehype-format';\nimport type { Plugin } from 'unified';\nimport { Options } from '../types';\n\nexport const formatHtml: Plugin<[Options['formatHtml']?], string, Root> =\n  function formatHtml(opt) {\n    if (!opt) return () => undefined;\n    return rehypeFormat(typeof opt === 'boolean' ? {} : opt);\n  };\n","import yaml from 'js-yaml';\nimport { Root } from 'mdast';\n\nexport function getFrontmatter(\n  tree: Root,\n  remove = true,\n): Record<string, any> | undefined {\n  const possibleYaml = tree.children[0];\n  if (possibleYaml?.type !== 'code' || possibleYaml?.lang !== 'yaml') return undefined;\n  const data = yaml.load(possibleYaml.value) as Record<string, any>;\n  if (remove) tree.children.splice(0, 1);\n  return data;\n}\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|Position|Point} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    // @ts-ignore looks like a node.\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    // @ts-ignore looks like a position.\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    // @ts-ignore looks like a point.\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n * @typedef {import('..').VFileValue} VFileValue\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[1] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('../../types.js').Comment} Comment\n */\n\nimport {convert} from 'unist-util-is'\n\n/** @type {import('unist-util-is').AssertPredicate<Comment>} */\n// @ts-ignore\nexport const comment = convert('comment')\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children\n    let offset = index + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../../types.js').Node} Node\n * @typedef {import('../../types.js').Text} Text\n */\n\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\n\n/** @type {import('unist-util-is').AssertPredicate<Text>} */\n// @ts-ignore\nconst isText = convert('text')\n\n/**\n * Check if `node` starts with whitespace.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function whitespaceStart(node) {\n  return isText(node) && whitespace(node.value.charAt(0))\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Object.<string, OmitHandle>} handlers\n * @returns {OmitHandle}\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @type {OmitHandle}\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return !next || (!comment(next) && !whitespaceStart(next))\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @type {OmitHandle}\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? isElement(next, [\n        'address',\n        'article',\n        'aside',\n        'blockquote',\n        'details',\n        'div',\n        'dl',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'footer',\n        'form',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'header',\n        'hgroup',\n        'hr',\n        'main',\n        'menu',\n        'nav',\n        'ol',\n        'p',\n        'pre',\n        'section',\n        'table',\n        'ul'\n      ])\n    : !parent ||\n        // Confusing parent.\n        !isElement(parent, [\n          'a',\n          'audio',\n          'del',\n          'ins',\n          'map',\n          'noscript',\n          'video'\n        ])\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @type {OmitHandle}\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @type {OmitHandle}\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @type {OmitHandle}\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @type {OmitHandle}\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['rp', 'rt'])\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @type {OmitHandle}\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @type {OmitHandle}\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['option', 'optgroup'])\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @type {OmitHandle}\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['menuitem', 'hr', 'menu'])\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @type {OmitHandle}\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @type {OmitHandle}\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @type {OmitHandle}\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @type {OmitHandle}\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['td', 'th'])\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n * @typedef {import('../types.js').Child} Child\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || !comment(head)\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @type {OmitHandle}\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array.<string>} */\n  const seen = []\n  let index = -1\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n    if (isElement(child, ['title', 'base'])) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (!comment(head) &&\n      !whitespaceStart(head) &&\n      !isElement(head, ['meta', 'link', 'script', 'style', 'template']))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @type {OmitHandle}\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    isElement(previous, 'colgroup') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    isElement(previous, ['thead', 'tbody']) &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'tr')\n}\n","/**\n * @typedef {import('../types.js').Omission} Omission\n */\n\nimport {opening} from './opening.js'\nimport {closing} from './closing.js'\n\n/** @type {Omission} */\nexport const omission = {opening, closing}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {Object} CoreOptions\n * @property {string[]} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef {Object} FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {string[]} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {string[]} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array.<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Object.<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef {Object} FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","// Maps of subsets.\n// Each value is a matrix of tuples.\n// The first value causes parse errors, the second is valid.\n// Of both values, the first value is unsafe, and the second is safe.\nexport const constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(ctx, node, _, parent) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    // @ts-expect-error: hush.\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, ctx.entities, {subset: ['<', '&']})\n      )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n * @typedef {import('./types.js').Parent} Parent\n */\n\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {ccount} from 'ccount'\nimport {constants} from './constants.js'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {raw} from './raw.js'\nimport {text} from './text.js'\n\n/**\n * @type {Object.<string, Handle>}\n */\nconst handlers = {\n  comment,\n  doctype,\n  element,\n  // @ts-ignore `raw` is nonstandard\n  raw,\n  // @ts-ignore `root` is a parent.\n  root: all,\n  text\n}\n\nconst own = {}.hasOwnProperty\n\n/**\n * @type {Handle}\n */\nexport function one(ctx, node, index, parent) {\n  if (!node || !node.type) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (!own.call(handlers, node.type)) {\n    throw new Error('Cannot compile unknown node `' + node.type + '`')\n  }\n\n  return handlers[node.type](ctx, node, index, parent)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @type {Handle}\n * @param {Parent} parent\n */\nexport function all(ctx, parent) {\n  /** @type {Array.<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = one(ctx, children[index], index, parent)\n  }\n\n  return results.join('')\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function element(ctx, node, index, parent) {\n  const schema = ctx.schema\n  const omit = schema.space === 'svg' ? undefined : ctx.omit\n  let selfClosing =\n    schema.space === 'svg'\n      ? ctx.closeEmpty\n      : ctx.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array.<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    ctx.schema = svg\n  }\n\n  const attrs = serializeAttributes(ctx, node.properties)\n\n  const content = all(\n    ctx,\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  ctx.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !omit.opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (selfClosing && (schema.space === 'svg' || ctx.close)) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !ctx.tightClose ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {Properties} props\n * @returns {string}\n */\nfunction serializeAttributes(ctx, props) {\n  /** @type {Array.<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n  /** @type {string} */\n  let value\n  /** @type {string} */\n  let last\n\n  for (key in props) {\n    if (props[key] !== undefined && props[key] !== null) {\n      value = serializeAttribute(ctx, key, props[key])\n      if (value) values.push(value)\n    }\n  }\n\n  while (++index < values.length) {\n    last = ctx.tight ? values[index].charAt(values[index].length - 1) : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(ctx, key, value) {\n  const info = find(ctx.schema, key)\n  let quote = ctx.quote\n  /** @type {string} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, ctx.entities, {\n      // Always encode without parse errors in non-HTML.\n      subset:\n        constants.name[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t\n  // test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  value =\n    typeof value === 'object' && 'length' in value\n      ? // `spaces` doesn’t accept a second argument, but it’s given here just to\n        // keep the code cleaner.\n        (info.commaSeparated ? commas : spaces)(value, {\n          padLeft: !ctx.tightLists\n        })\n      : String(value)\n\n  if (ctx.collapseEmpty && !value) return name\n\n  // Check unquoted value.\n  if (ctx.unquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, ctx.entities, {\n        subset: constants.unquoted[ctx.valid][ctx.safe],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {\n      quote = ctx.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, ctx.entities, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[\n            ctx.schema.space === 'html' ? ctx.valid : 1\n          ][ctx.safe],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Comment} Comment\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(ctx, node) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return ctx.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, ctx.entities, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, ctx.entities, {subset: ['<', '>']})\n    )\n  }\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n */\n\n/**\n * @type {Handle}\n */\nexport function doctype(ctx) {\n  return (\n    '<!' +\n    (ctx.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (ctx.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * @type {Handle}\n * @param {Raw} node\n */\nexport function raw(ctx, node, index, parent) {\n  // @ts-ignore Hush.\n  return ctx.dangerous ? node.value : text(ctx, node, index, parent)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('hast-util-to-html').Options} Options\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/** @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>} */\nexport default function rehypeStringify(config) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, config)\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Node, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Quote} Quote\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {omission} from './omission/index.js'\nimport {one} from './tree.js'\n\n/**\n * @param {Node|Array.<Node>} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toHtml(node, options = {}) {\n  const quote = options.quote || '\"'\n  /** @type {Quote} */\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {Context} */\n  const context = {\n    valid: options.allowParseErrors ? 0 : 1,\n    safe: options.allowDangerousCharacters ? 0 : 1,\n    schema: options.space === 'svg' ? svg : html,\n    omit: options.omitOptionalTags ? omission : undefined,\n    quote,\n    alternative,\n    smart: options.quoteSmart,\n    unquoted: options.preferUnquoted,\n    tight: options.tightAttributes,\n    upperDoctype: options.upperDoctype,\n    tightDoctype: options.tightDoctype,\n    bogusComments: options.bogusComments,\n    tightLists: options.tightCommaSeparatedLists,\n    tightClose: options.tightSelfClosing,\n    collapseEmpty: options.collapseEmptyAttributes,\n    dangerous: options.allowDangerousHtml,\n    voids: options.voids || htmlVoidElements.concat(),\n    entities: options.entities || {},\n    close: options.closeSelfClosing,\n    closeEmpty: options.closeEmptyElements\n  }\n\n  return one(\n    context,\n    // @ts-ignore Assume `node` does not contain a root.\n    Array.isArray(node) ? {type: 'root', children: node} : node,\n    null,\n    null\n  )\n}\n","import MarkdownIt from 'markdown-it';\nimport {\n  mathPlugin,\n  convertFrontMatter,\n  frontMatterPlugin,\n  mystBlockPlugin,\n  footnotePlugin,\n  docutilsPlugin,\n  deflistPlugin,\n  tasklistPlugin,\n} from './plugins';\nimport { Root } from 'mdast';\nimport type { Plugin } from 'unified';\nimport { formatHtml, mystToHast, tokensToMyst, transform, State } from './mdast';\nimport { unified } from 'unified';\nimport rehypeStringify from 'rehype-stringify';\nimport type { AllOptions, Options } from './types';\nimport { directivesDefault, rolesDefault } from 'markdown-it-docutils';\n\nexport type { Options, IRole, IDirective } from './types';\n\nexport {\n  directivesDefault,\n  Directive,\n  IDirectiveData,\n  directiveOptions,\n  Role,\n  rolesDefault,\n  IRoleData,\n} from 'markdown-it-docutils';\n\nexport const defaultOptions: Omit<AllOptions, 'roles' | 'directives'> = {\n  allowDangerousHtml: false,\n  markdownit: {},\n  extensions: {\n    frontmatter: true,\n    math: true,\n    footnotes: true,\n    deflist: true,\n    tasklist: true,\n    tables: true,\n    blocks: true,\n  },\n  transform: {},\n  docutils: {\n    roles: rolesDefault,\n    directives: directivesDefault,\n  },\n  mdast: {},\n  hast: {\n    clobberPrefix: 'm-',\n  },\n  formatHtml: true,\n  stringifyHtml: {},\n};\n\nexport class MyST {\n  opts: Omit<AllOptions, 'roles' | 'directives'>;\n  tokenizer: MarkdownIt;\n\n  constructor(opts: Options = defaultOptions) {\n    this.opts = this._parseOptions(opts);\n    this.tokenizer = this._createTokenizer();\n  }\n\n  _parseOptions(user: Options): Omit<AllOptions, 'roles' | 'directives'> {\n    const opts = {\n      allowDangerousHtml: user.allowDangerousHtml ?? defaultOptions.allowDangerousHtml,\n      transform: { ...defaultOptions.transform, ...user.transform },\n      mdast: { ...defaultOptions.mdast, ...user.mdast },\n      hast: { ...defaultOptions.hast, ...user.hast },\n      docutils: { ...defaultOptions.docutils, ...user.docutils },\n      markdownit: { ...defaultOptions.markdownit, ...user.markdownit },\n      extensions: { ...defaultOptions.extensions, ...user.extensions },\n      formatHtml: user.formatHtml ?? defaultOptions.formatHtml,\n      stringifyHtml: { ...defaultOptions.stringifyHtml, ...user.stringifyHtml },\n    };\n    const rolesHandlers: Required<AllOptions['docutils']>['roles'] = {};\n    const directivesHandlers: Required<AllOptions['docutils']>['directives'] = {};\n    const mdastHandlers: Required<AllOptions['mdast']>['handlers'] = {};\n    const hastHandlers: Required<AllOptions['hast']>['handlers'] = {};\n    Object.entries(user.roles ?? {}).map(([k, { myst, mdast, hast }]) => {\n      rolesHandlers[k] = myst;\n      mdastHandlers[k] = mdast;\n      hastHandlers[mdast.type] = hast;\n    });\n    Object.entries(user.directives ?? {}).map(([k, { myst, mdast, hast }]) => {\n      directivesHandlers[k] = myst;\n      mdastHandlers[k] = mdast;\n      hastHandlers[mdast.type] = hast;\n    });\n    opts.docutils.roles = { ...opts.docutils.roles, ...rolesHandlers };\n    opts.docutils.directives = { ...opts.docutils.directives, ...directivesHandlers };\n    opts.hast.handlers = { ...opts.hast.handlers, ...hastHandlers };\n    opts.mdast.handlers = { ...opts.mdast.handlers, ...mdastHandlers };\n    if (opts.allowDangerousHtml) {\n      opts.markdownit.html = true;\n      opts.hast.allowDangerousHtml = true;\n      opts.hast.allowDangerousHtml = true;\n      opts.stringifyHtml.allowDangerousHtml = true;\n    }\n    return opts;\n  }\n\n  _createTokenizer() {\n    const exts = this.opts.extensions;\n    const tokenizer = MarkdownIt('commonmark', this.opts.markdownit);\n    if (exts.tables) tokenizer.enable('table');\n    if (exts.frontmatter)\n      tokenizer.use(frontMatterPlugin, () => ({})).use(convertFrontMatter);\n    if (exts.blocks) tokenizer.use(mystBlockPlugin);\n    if (exts.footnotes) tokenizer.use(footnotePlugin).disable('footnote_inline'); // not yet implemented in myst-parser\n    tokenizer.use(docutilsPlugin, this.opts.docutils);\n    if (exts.math) tokenizer.use(mathPlugin, exts.math);\n    if (exts.deflist) tokenizer.use(deflistPlugin);\n    if (exts.tasklist) tokenizer.use(tasklistPlugin);\n    return tokenizer;\n  }\n\n  parse(content: string) {\n    return tokensToMyst(this.tokenizer.parse(content, {}), this.opts.mdast);\n  }\n\n  render(content: string) {\n    const tree = this.parse(content);\n    const html = this.renderMdast(tree);\n    return html;\n  }\n\n  renderMdast(tree: Root) {\n    const state = new State();\n    const pipe = unified()\n      .use(transform, state, this.opts.transform)\n      .use(mystToHast, this.opts.hast)\n      .use(formatHtml, this.opts.formatHtml)\n      .use(rehypeStringify, this.opts.stringifyHtml);\n    const result = pipe.runSync(tree);\n    const html = pipe.stringify(result);\n    return html.trim();\n  }\n}\n\n/**\n * MyST Parser as a Unified Plugin\n */\nexport const mystParser: Plugin<[Options?], string, Root> = function mystParser() {\n  this.Parser = (content: string, opts?: Options) => {\n    return new MyST(opts).parse(content);\n  };\n};\n"],"names":["markdownItFrontMatter","md","cb","marker_str","marker_char","charCodeAt","marker_len","length","block","ruler","before","state","startLine","endLine","silent","pos","nextLine","marker_count","token","old_parent","old_line_max","start_content","auto_closed","start","bMarks","tShift","max","eMarks","src","Math","floor","slice","sCount","blkIndent","skipSpaces","parentType","lineMax","push","hidden","markup","map","meta","line","alt","render_footnote_anchor_name","tokens","idx","options","env","n","Number","id","toString","prefix","docId","render_footnote_caption","subId","render_footnote_ref","slf","rules","footnote_anchor_name","caption","footnote_caption","refid","render_footnote_block_open","xhtmlOut","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","markdownItFootnote","parseLinkLabel","helpers","isSpace","utils","renderer","footnote_ref","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","oldBMark","oldTShift","oldSCount","oldParentType","label","initial","offset","ch","posAfterColon","footnotes","refs","Token","level","tokenize","inline","after","labelStart","labelEnd","footnoteId","posMax","list","parse","content","footnoteSubId","count","core","i","l","j","t","lastParagraph","current","currentLabel","insideRef","refTokens","filter","tok","type","children","concat","pop","disableCheckboxes","useLabelWrapper","useLabelAfter","markdownItTaskLists","enabled","labelAfter","isTodoItem","todoify","attrSet","parentToken","name","value","index","attrIndex","attr","attrPush","attrs","targetLevel","isInline","isParagraph","isListItem","indexOf","startsWithTodoMarkdown","TokenConstructor","unshift","checkbox","disabledAttr","makeCheckbox","ceil","random","for","afterLabel","beginLabel","endLabel","markdownItDeflist","skipMarker","marker","contentStart","ddLine","dtLine","itemLines","listLines","listTokIdx","oldDDIndent","oldIndent","oldTight","prevEmptyEnd","tight","ddIndent","isEmpty","OUTER","getLines","trim","markTightParagraphs","Role","data","main","this","math","rolePlugin","parseRoles","roleRule","rolesAfter","roles","func","childTokens","child","_a","newTokens","run","err","errorToken","info","error_message","message","error_name","runRoles","opts","_b","_c","c","escapeHtml","attrGet","match","ROLE_PATTERN","exec","str","_x","RegExp","error","Subscript","open","text","close","Superscript","ABBR_PATTERN","Abbreviation","title","_d","html","TargetKind","getDocState","docutils","targets","references","numbering","newTarget","kind","number","nextNumber","target","getNamespacedMeta","resolveRefLater","Object","REF_PATTERN","equation","modified","ref","withoutLabel","replace","String","rolesDefault","isNothing","subject","isNegativeZero_1","NEGATIVE_INFINITY","extend_1","source","key","sourceKeys","keys","common","isObject","toArray","sequence","Array","isArray","repeat","string","cycle","result","isNegativeZero","extend","formatError","exception","compact","where","reason","mark","column","snippet","YAMLException$1","Error","call","captureStackTrace","constructor","stack","prototype","create","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","padStart","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","foundLineNo","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","forEach","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","style","alias","compileStyleAliases","compileList","schema","currentType","newIndex","previousType","previousIndex","Schema$1","definition","implicit","explicit","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","arguments","compileMap","seq","failsafe","_null","object","canonical","lowercase","uppercase","camelcase","empty","bool","isOctCode","isDecCode","int","hasDigits","sign","parseInt","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","float","test","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","res","isNaN","json","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","timestamp","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","toISOString","merge","BASE64_MAP","code","bitlen","charAt","tailbits","input","bits","Uint8Array","_hasOwnProperty$3","hasOwnProperty","_toString$2","omap","pair","pairKey","pairHasKey","objectKeys","_toString$1","pairs","_hasOwnProperty$2","set","_default","_hasOwnProperty$1","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","checkLineBreaks","TAG","handle","tagMap","decodeURIComponent","captureSegment","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loadAll_1","iterator","load_1","loader","loadAll","load","_toString","_hasOwnProperty","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","State","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","first","needIndentIndicator","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","writeScalar","iskey","dump","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","writeBlockSequence","writeNode","detectType","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","sort","writeBlockMapping","writeFlowMapping","writeFlowSequence","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump_1","renamed","from","to","jsYaml","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","Directive","msg","body","nesting","optional","undefined","initLine","pluginRuleName","includeRule","tempDisabledCore","rule","__rules__","reverse","disable","enable","nestedCoreParse","DirectiveParsingError","directiveToData","directive","firstLine","arg","split","bodyOffset","option_spec","rawOptions","fullSpec","yamlBlock","startsWith","newContent","foundDivider","output","yaml","join","entries","convertor","converted_value","parseDirectiveOptions","required_arguments","optional_arguments","totalArgs","final_argument_whitespace","arr","splice","parseDirectiveArguments","shift","has_content","directivePlugin","directivesAfter","replaceFences","directives","finalTokens","runDirectives","make_id","OptionSpecError","unchanged","unchanged_required","flag","class_option","argument","isInteger","nonnegative_int","optional_int","percentage","get_measure","units","groups","length_units","length_or_unitless","length_or_percentage_or_unitless","defaultUnit","length_or_percentage_or_unitless_figure","create_choice","choices","includes","uri","BaseAdmonition","adToken","createToken","class","attrJoin","adTokenTitle","bodyTokens","nestedParse","bodyMap","admonitions","assert_has_content","shared_option_spec","Image","altTokens","height","align","create_image","images","openToken","figclass","figwidth","figure","imageToken","captionTokens","openCaption","closeToken","SyntaxTreeNode","create_root","_set_children_from_tokens","inline_token","nester_tokens","revered_tokens","_add_child","nested_tokens","parent","recursive_collect_tokens","node","token_list","opening","closing","is_root","is_nested","siblings","include_self","walk","endsWith","attribute_token","tables","headerRows","listTokens","tableOpen","rowLength","colType","rowNumber","assert","row","to_tokens","directivesDefault","statePlugin","contentFromTarget","setError","details","OptionDefaults","docutilsPlugin","fullOptions","use","mystBlockPlugin","parse_line_comment","parse_block_break","parse_target","myst_line_comment","render_myst_line_comment","myst_target","render_myst_target","maximum","cnt","fromCodePoint","TARGET_PATTERN","unsafe","entities","regex","encodeCache","encode","exclude","keepEscaped","nextCode","cache","defaultChars","getEncodeCache","encodeURIComponent","componentChars","encode_1","decodeCache","decode","getDecodeCache","b1","b2","b3","b4","chr","decode_1","Url","protocol","slashes","auth","port","hostname","hash","search","pathname","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","url","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","qm","u","require$$0","require$$1","require$$3","require$$4","has","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","exports","lib","mdurl","require$$2","ucmicro","sources","TypeError","escaped","entity","replaceEntityPattern","newElements","dollarmathPlugin","math_inline_dollar_rule","allow_space","isWhiteSpace","allow_digits","isEscaped","is_double","double_inline","found_closing","charCode","math_inline_dollar","math_block_dollar_rule","haveEndMarker","lineText","allow_labels","matchLabel","labelNormalizer","math_block_dollar","createRule","displayMode","className","newline","hasLabel","labelRenderer","v","back_pos","mod","backslashes","eqnoMatch","RE_OPEN","amsmathBlock","begin","outcome","matchOpen","environment","numbered","matchClose","matchEnvironment","endpos","HTML_EMPTY_ELEMENTS","Set","formatTag","attributes","formatAttr","toHTMLRecurse","template","T","flat","Infinity","hasAttrs","foundHole","b","a","closingTag","toHTML","renderMath","plugin","amsmath","dollarmath","amsmathPlugin","math_inline","math_inline_double","math_block","math_block_label","addMathRenderers","convertFrontMatter","AdmonitionKind","props","assign","admonitionKindToTitle","attention","caution","danger","important","hint","note","seealso","tip","warning","withoutTrailingNewline","normalizeLabel","identifier","setTextAsChild","MarkdownParseState","handlers","specHandlers","spec","nodeType","noCloseToken","openNode","closeNode","isText","addText","isLeaf","parseTokens","softbreak","getTokenHandlers","top","addNode","last","handler","getAttrs","convert","ok","check","castFactory","typeFactory","tests","checks","any","parameters","anyFactory","all","propsFactory","Boolean","visitParents","tree","visitor","is","step","factory","parents","visit","subresult","grandparents","toResult","remove","cascade","preorder","childIndex","root","freeExports","freeModule","module","freeGlobal","global","window","regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","decodeMapLegacy","decodeMapNumeric","invalidReferenceCodePoints","stringFromCharCode","propertyName","defaults","codePointToSymbol","codePoint","strict","parseError","array","contains","hexEscape","decEscape","encodeEverything","useNamedReferences","allowUnsafeSymbols","escapeCodePoint","escapeBmpSymbol","symbol","$0","high","low","$1","$2","$3","$4","$5","$6","$7","$8","semicolon","decDigits","hexDigits","reference","isAttributeValue","he","own","zwitch","settings","one","fn","invalid","unknown","apply","query","nestingOperator","shallow","descendant","_","WalkIterator","prefillTypeIndex","each","done","nest","previous","found","_1","_2","TypeIndex","delayed","x","y","nodeIndex","nodes","typeCount","nodeCount","counts","matches","blank","_3","assertDeep","scopeNodes","selector","selectors","pseudos","appendScope","anything","not","scope","pseudo","needsIndex","operator","exists","classNames","attribute","collect","collector","ruleSet","configure","collectOne","s","len","identSpecialChars","extraCharCode","replacement","strReplacementsRev","r","f","parserContext","utils_1","attrEqualityMods","ruleNestingOperators","substitutesEnabled","getStr","quote","escapeTable","esc","isHex","hex","getIdent","isIdent","skipWhitespace","parseSelector","parseSingleSelector","parseRule","currentRule","op","isIdentStart","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","pseudoName","render","renderEntity","currentEntity","parts","escapeIdentifier","cn","escapeStr","parser_context_1","render_1","CssSelectorParser","registerSelectorPseudos","_i","pseudos_1","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","registerNestingOperators","operators","operators_1","unregisterNestingOperators","operators_2","registerAttrEqualityMods","mods","mods_1","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parseCssSelector","path","parse_1","whitespace","ZERO","NINE","formula","readSign","readNumber","compile_1","boolbase_1","trueFunc","falseFunc","parsed","absA","abs","bMod","get","compile","nthCheck","default","nth","parser","select","selectAll","NUMBERED_CLASS","ALIGN_CLASS","getClassName","reduce","doExclude","getLang","getColAlign","attrPair","defaultMdast","heading","depth","hr","paragraph","blockquote","ordered_list","ordered","spread","bullet_list","list_item","em","strong","fence","showLineNumbers","linenos","lineno","startingLineNumber","emphasizeLines","lang","code_block","code_inline","hardbreak","link","image","alignMatch","matcher","hasClassName","abbr","sub","sup","dl","dt","dd","admonition","admonition_title","figure_caption","table","table_caption","thead","tbody","tr","th","header","td","footnote_block","footnote","directive_error","role","role_error","html_inline","html_block","myst_block_break","defaultOptions","hoistSingleImagesOutofParagraphs","nestBlocks","tokensToMyst","iteratee","newNode","expectedTitle","titleNode","nextNode","findAfter","newTree","lastBlock","pushBlock","captionChildren","tableChildren","newTableNode","findAndReplace","find","ignored","ignore","toExpression","toFunction","toPairs","pairIndex","grandparent","escape","ReferenceKind","fillReferenceNumbers","num","copyNode","JSON","stringify","targetCounts","addTarget","incrementCount","getTarget","resolveReferenceContent","kinds","eq","numref","noNodeChildren","resolved","countState","referenceState","addAdmonitionHeaders","addContainerCaptionNumbers","transform","o","container","para","h","augment","passThrough","returnNode","unknownHandler","values","pointStart","point","pointEnd","definitions","clean","asciiAlphanumeric","regexCheck","characterReferences","sanitizeUri","skip","normalizeUri","colon","questionMark","numberSign","slash","wrap","loose","footnoteReference","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","href","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","referenceType","suffix","contents","listItemLoose","break","delete","footnoteById","no","dangerous","imageReference","def","normalize","inlineCode","linkReference","listItem","listLoose","wrapped","checked","disabled","items","item","properties","rows","out","cellIndex","cell","thematicBreak","toml","footnoteDefinition","toHast","allowDangerousHtml","footnoteLabel","footnoteBackLabel","left","right","hName","hProperties","hChildren","ctx","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","hasOwn","classes","argType","inner","abbreviation","subscript","superscript","admonitionTitle","captionNumber","captionKind","inlineMath","definitionList","definitionTerm","definitionDescription","directiveElements","comment","contentReference","defaultHandlers","mystToHast","isElement","context","convertElement","element","tagNameFactory","embedded","thing","blocks","skippable","ignorableNode","minify","blocklike","noWrap","inferWhiteSpace","collapsableAfter","stripAtStart","collapse","removable","minifyText","inferBoundary","skippables","replaceNewlines","replaceWhitespace","results","convertAll","callFactory","hastUtilIsElement","hasParent","hasIndex","hastUtilHasProperty","hastUtilIsBodyOkLink","rel","basic","phrasing","bodyOkLink","hasProperty","whitespaceSensitiveTagNames","collapseFactory","newlines","rehypeMinifyWhitespace","padding","formatHtml","opt","indentInitial","eol","addBreak","blanks","rehypeFormat","getFrontmatter","possibleYaml","unescapeAll","disableNested","prevPos","oldPos","skipToken","lines","default_rules","Renderer","renderAttrs","highlighted","tmpAttrs","tmpToken","langName","langAttrs","highlight","langPrefix","renderInlineAsText","renderToken","breaks","nextToken","needLf","renderInline","Ruler","__cache__","__find__","__compile__","self","chains","altName","chain","at","beforeName","ruleName","afterName","ignoreInvalid","enableOnly","getRules","chainName","NEWLINES_RE","NULL_RE","arrayReplaceAt","isLinkOpen","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","openQuote","closeQuote","single","quotes","attrData","StateCore","inlineMode","state_core","_rules","currentToken","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","normalizeLinkText","blkIdx","typographer","Core","process","require$$7","parser_core","escapedSplit","substring","skipBulletListMarker","skipOrderedListMarker","normalizeReference","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","block_names","HTML_SEQUENCES","StateBlock","indent_found","bsCount","listIndent","skipEmptyLines","skipSpacesBack","skipChars","skipCharsBack","keepLastLF","queue","state_block","columns","columnCount","aligns","tableLines","tbodyLines","terminate","terminatorRules","firstCh","secondCh","params","mem","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","spaceAfterMarker","isOutdented","oldLineMax","indentAfterMarker","isOrdered","markerCharCode","markerValue","oldListIndent","posAfterMarker","isTerminatingParagraph","_endLine","destEndPos","destEndLineNo","parseLinkDestination","parseLinkTitle","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$12","parser_block","isTerminatorChar","ESCAPED","postProcess","delimiters","startDelim","endDelim","loneMarkers","scanned","scanDelims","can_open","can_close","tokens_meta","isStrong","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pending","pendingLevel","_prev_delimiters","backticks","backticksScanned","pushPending","token_meta","canSplitWord","left_flanking","right_flanking","state_inline","pmax","ws","matchStart","matchEnd","openerLength","closerLength","require$$5","require$$6","parseReference","isLetter","_rules2","ParserInline","ruler2","require$$14","parser_inline","isFunction","escapeRE","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","isString","slist","schema_test","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","acc","add","m","ml","me","tld_pos","testSchemaAt","keepOld","el","ParserCore","punycode","require$$8","config","components","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","toASCII","er","format","toUnicode","MarkdownIt","presetName","presets","missed","parseInline","markdownIt","bail","isBuffer","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","getProperty","copy","copyIsArray","clone","deep","getPrototypeOf","trough","fns","pipeline","middlewareIndex","callback","middleware","called","fnExpectsCallback","Promise","then","middelware","stringifyPosition","VFileMessage","place","origin","fatal","ruleId","actual","expected","file","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","third","getPathFromURLPosix","order","VFile","messages","history","stored","prop","assertNonEmpty","assertPart","stem","encoding","fail","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","addPlugin","addList","addPreset","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","executor","reject","runSync","complete","assertDone","processSync","asyncName","looksLikeAVFile","property","normal","space","Info","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","DefinedInfo","mask","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","manifest","media","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","required","reversed","rowSpan","sandbox","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","declare","event","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","htmlBase","svgBase","htmlVoidElements","siblingAfter","siblingBefore","includeWhitespace","whitespaceStart","omission","headOrColgroupOrCaption","li","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","tfoot","cells","seen","padRight","padLeft","subset","charactersToExpression","escapeOnly","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cup","there4","sim","cong","asymp","ne","equiv","le","ge","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","characters","formatSmart","named","numeric","omit","toHexadecimal","omitOptionalSemicolons","useShortestReferences","toNamed","toDecimal","stringifyEntities","ccount","constants","unquoted","double","bogusComments","doctype","upperDoctype","tightDoctype","selfClosing","closeEmpty","voids","serializeAttribute","serializeAttributes","tightClose","dashes","safe","commas","tightLists","collapseEmpty","smart","alternative","rehypeStringify","processorSettings","allowParseErrors","allowDangerousCharacters","omitOptionalTags","quoteSmart","preferUnquoted","tightAttributes","tightCommaSeparatedLists","tightSelfClosing","collapseEmptyAttributes","closeSelfClosing","closeEmptyElements","toHtml","markdownit","extensions","frontmatter","deflist","tasklist","mdast","hast","stringifyHtml","MyST","_parseOptions","tokenizer","_createTokenizer","user","rolesHandlers","directivesHandlers","mdastHandlers","hastHandlers","myst","exts","frontMatterPlugin","footnotePlugin","mathPlugin","deflistPlugin","tasklistPlugin","renderMdast","pipe","mystParser"],"mappings":"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EAAQiS,UACRyqB,GAAQzqB,IAASA,EAAKjS,UAAYihB,GA/D9B0b,CAAe3kC,MAGJ,iBAATA,SAgBjB,SAAoBopB,SAEZC,EAAS,OACX13B,GAAS,SAEJA,EAAQy3B,EAAMz/B,QACrB0/B,EAAO13B,GAAS8yC,GAAerb,EAAMz3B,WAGhCu3B,GAAYI,YAOVA,KAAOC,OACV53B,GAAS,SAEJA,EAAQ03B,EAAO1/B,WAClB0/B,EAAO13B,GAAO6I,KAAKhG,QAAS+0B,UACvB,SAIJ,GAxCIC,CAAWxpB,MAGA,mBAATA,SACFkpB,GAAYlpB,SAGf,IAAIzF,MAAM,gDA4DtB,SAAS2uB,GAAYD,mBASAhP,KAASsP,UAEnBmb,GAAQzqB,IAAS0P,QAAQV,EAAMzuB,KAAKhG,KAAMylB,KAASsP,KAS9D,SAASmb,GAAQzqB,UACR0P,QACL1P,GACkB,iBAATA,GAEO,YAAdA,EAAKtpB,MAEmB,iBAAjBspB,EAAKjS,SCvOX,MAAM48B,GAAWH,GAAe,CACrC,QACA,SACA,QACA,SACA,MACA,OACA,SACA,UACA,MACA,UClBK,SAAS9O,GAAWkP,OAErBnzC,EAEFmzC,GAA0B,iBAAVA,GAAqC,SAAfA,EAAMl0C,KAExCk0C,EAAMnzC,OAAS,GACfmzC,QAIkB,iBAAVnzC,GAA4D,KAAtCA,EAAM4G,QAAQ,eAAgB,ICd7D,MAAMwsC,GAAS,CACpB,UACA,UACA,QACA,aACA,OACA,KACA,UACA,SACA,MACA,WACA,KACA,SACA,MACA,MACA,KACA,KACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,SACA,KACA,KACA,UACA,OACA,OACA,MACA,KACA,WACA,SACA,IACA,YACA,MACA,UACA,UACA,QACA,QACA,KACA,KACA,QACA,KACA,KACA,QACA,KACA,KACA,MACA,OC3DWl1C,GAAU,CAErB,SACA,QACA,SACA,YCLWm1C,GAAY,CACvB,OACA,OACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,WACA,QACA,KACA,SACA,SACA,QACA,WACA,Q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,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,GAAyB,CACpCC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLnsB,KAAM,IACNosB,KAAM,IACNC,MAAO,IACP13C,IAAK,IACL23C,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACP/qC,KAAM,IACNgrC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IA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"}